%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A91t9ew86_ivxwpo_hak.tmp.pdf
%%Creator: Adobe Acrobat 24.1.0
%%For: yy010
%%CreationDate: 2024/11/7, 17:49:03
%%BoundingBox: 0 0 236 251
%%HiResBoundingBox: 0 0 235.4400 250.2000
%%CropBox: 0 0 235.4400 250.2000
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1551 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.675d0f7, 2023/06/11-19:21:16        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2024-11-07T17:46:11+01:00"
   xmp:CreateDate="2024-11-07T17:46:11+01:00"
   xmp:MetadataDate="2024-11-07T17:46:10+01:00"
   xmp:CreatorTool="LaTeX with acmart 2018/12/16 v1.57 Typesetting articles for the Association for Computing Machinery and hyperref 2018/02/06 v6.86b Hypertext links for LaTeX"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:f949585c-0f22-4884-875d-06caca7940e4"
   xmpMM:InstanceID="uuid:8eaa1df2-dc74-4c8e-aaf6-8f6c78c6f4d4"
   pdf:Producer="pdfTeX-1.40.19; modified using iText 4.2.0 by 1T3XT">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">A Formal Analysis of the NVIDIA PTX Memory Consistency Model</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">-  Hardware  -&gt;  -1!Theorem proving and SAT solving.-  Software and its engineering  -&gt;  -1!Consistency.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Daniel Lustig, Sameer Sahasrabuddhe, and Olivier Giroux</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -250.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 250.2 li
235.44 250.2 li
235.44 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FAAAAA+LinBiolinumT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FAAAAA+LinBiolinumT def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL \\\(General Public License\\\) with font-exception and OFL \\\(Open Font License\\\).
Created with FontForge \\\(http://fontforge.sf.net\\\)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
dup 177 /endash put
def
/FontBBox {-1082 -268 6171 893} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 429 442 460 474 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.0396249 def
/BlueShift 6 def
/StdHW [44] def
/StdVW [80] def
/StemSnapH [44] def
/StemSnapV [80 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
43 dict dup begin
/quoteright <1C60D8A8C9B85EE3A52129105925D033DB02E5F2CB47662F8F8
84BBCE3A02ED86119D9E33772AA5DCAAC3EB150E15B172B3309306E89E9CA628
2EDE7485A0C9C3F8E2D181ED0D60877356FA4D95C1A553E7977BFDF968B190AF
EA5CB51F79FAD5939CD0C1A9BDF0F4AED3734F61C1BFB5EE044E1FD872F6EB7A
71673BE2155C7B6685CB1113BF5A1D2B27A5893DEE6516047DC4235CC361B0A8
C40E35FC79E1E1A> |-
/comma <1C60D8A8C9B88EAFEB3F4616B4B20AEE823075E926638790557866C7
72F226692F6F2694E420055EBB28024005C1F718DFDCE9FFE41E72A49B699DEB
8B4CFB0F44BE4634BF842814D64CACAE0B24AC09ABAF1070641988474C28F9B6
307EF27D00323D256416FD8BAA9FC0D9800EC3A2716947E977DF8EC2735959F3
7CA139A6C53126BD79D4F8CD39390073B945BE2FF3BB792AFEAEA10A594CFBE9
94D59133929103F01677> |-
/zero <1C60D8A8C9B74A3E8576C7BCEC1093139D8EE06B0EBF63F326BFF4203
E5243158115142E4F9A60EB75FF860984CB4BD9E77D50E4B174E9B8CB68FDB4B
5AE80E1D9755699011D6270C99407A0EB1FEC9E0AE9E692AF9EB1D25198E0772
341E811F7FBE3D1953163B837FA35817535C5EC> |-
/one <1C60D8A8C9B74A3E999339F8295BBD508FCA474E3288456D9AD41BCA29
7D068161A2877C6FA2E98CE9346482BCBA7D0E160F9B3E27C6DC9209E3CBA47D
A39C89F92CB760305A2870673C89B771F8DE6A36F8B4EA1F49DDF353E85F2AB9
D95B9546CCDC6E9C> |-
/two <1C60D8A8C9B74A3E8F18031D157B197EE40B2F05F24823DCCE3C9FFE6F
BFEED4B3D905A58B224A1739B3A56145C875DA488BA3213F5ED05047AF428B66
63687ED94117AAAB4612974EA8405B4F54DD6E32631F792AA9D932B1B8A0D8F0
E977E4521ECF1DB9592B07576EE819B1334053196CF1D90E62B853F08BD755C4
CFB5447D947391D290B6CE371732CD71F57ACB37F300E810D8A12AE70B80FD9E
C167B578B0719169AC26827B09073FF80CDE23CFA5B020EB0C130EB60054CC6A
BB0F2F131D8D63F20A32DA3EE695990309582A34DAF7FC811F149763968469E6
2CDAFFD8F1FD3456B4CE05295117087BEC0210D279B7E245B6E35103A3CB9943
B28A6D476D60C7152E80E9CE3F76EC56234A7A8203AFD3409C82362A0DDCE13A
B00357F18E99868F77A80384D394FA19E6C6A7309358F99DA6FFA16F43A4DAD6
F1C726A3A5818F58D2415B892EE2A999F69DD16B372C0FCBBA47815FECB0E14A
F3708B5C55177BCE12ED62A1270B67519A3337B2E7A194B31E927E7FE845E855
62661E3395A908111BB056AC49B25AEE8FBF93F5CB2E8C1AE0875EA3E3F5CE32
BE49F661> |-
/three <1C60D8A8C9B74A3E8576C7B32136A2F25F291E3078B803D704BC2D58
85F3BCAFCF1C0C12AD65B788E45A74F32FA188E6D239244DB6F9BF25D0DBD25B
1AF7AA1FE15188C129D0B48DD7885C77A0CCFF253494FD376E09F3D5AE5AA970
9C8EA2F5F652E1CCACB7769B2B7C4703BC3F63134A64F914CF28D348B59946BA
96BFF3A87D077668B9E5EC0C8F573DE33C95C8DB4F9BA51FEC46E9BC3E4DFA0A
A9BE9727A487DC3E424F48F797650541CBE59505E05A46FEBBCEFA7DF1A23B0B
8F408BB5> |-
/seven <1C60D8A8C9B74A3E973E78F6483A732B35CD64B5AE4E19623B74B806
109CEE206F574ABA9A47296F4C1B5A7D1E7B66F86EAA4CC6F8CB1CB7A81EBA06
45C83E3B30275592CE7BEFF0D8CD2E90EC1A349DA38A6C997B38A4AA7C180EC0
A94FA5718F99602CDF6A8DA74422C46654E9DE3C6F38> |-
/nine <1C60D8A8C9B74A3E8451579125354F888379EB4D387C61FF451DAA8E1
D2904B573C73BA6A9D903A3529C79CC97449106630FCB49CFA60567FE4E86489
878542736554E7AF7B537BF3FB5F654C1C16D0FBC919A4C08B3F9B966D89BEBE
93E36E245BBCEBFF042730EC4D5DC17F0F88AB9841E4E3D8DBE2961838971D05
AD59EE403> |-
/A <1C60D8A8C9B668C470308D19858B425BE5AE0A274BC9914A14E8928884B9
B010BD014A2C99F03BEF05694EBA9AF2275F0A1035AFE6A64B0D19549B538AF3
2BF21DD9AE0DECA03894D239F08C7FDCEE8EB0F7F3B5AF7091F3AC7155B42D88
4E7A8AAE9545EE3B3E92845C5959DAB78D0E217AE4A5DFB678247711C08219D9
CD135B5B832B3B91D81031D9C0EF9093323329DBC47665C64E721F5CC35404F4
01BB4BE0E9FDDDBA915E3FBAC64B60C84DAE711172AD234E838A0BD1E9F59742
5D4085497B9248D021342EFC95E5F0447706BAF63797B1FC2E025B6B7629D989
F5E6779C3FD07374D074A31BBD5E618DB9C4363BDEE940BAAAFBA21923063700
59F5E1F0EB345EF29FDEB20319997AB5D3BB049909CF3CE2C6ECB45036> |-
/C <1C60D8A8C9B658EF7368C59F4E00E8934EE6F423732273A4A7F661068FB6
C10FB8F4B1263D3301997AB152170E54A824F1F5E7452C9E7AB6B9BB298C1848
A639EDDF7FD529CFD974F0271F151CAF0543B772173D67BA81A6F77D1525A807
45AEFEDED81C1154B918ECEA791C368F43803AFBAFCDCAAEBC7EB780CF566FDD
E7E49470E9E1C5181FB96613585EEE5704C8F26C4A0623F1A7B9B50CA8E90A0F
E9CEEA87A3D02B252C6721FBE341AE5B0F1E64B5FA8A7C4C0E> |-
/D <1C60D8A8C9B63B8DE623DDEDC29788BF37003DD40ACDD95C7E9D3D85E8FD
058612468981FC1DFA0606FE49783636B6310C692EBC183718ED1C5EA85DFD3A
334EA85F9AAB291FBCFC69194CFD400FDB5488072354D290652BF307D10A7E2C
7C3533F2707BB13867F683F3453160C6D19ED8FB408309DA497EA4C8A347D1C4> |-
/F <1C60D8A8C9B7A3FAD715C7D570122AFE6E755D1FC841D6344EA13726CD31
D49113FBC9AA628CEBC940FBCACBE74FC9C446B7AA1774A7C77900F75834B2F9
A3B3948E009DDFEE3C610537BDFE78B40B3A0FA429FE034C72293AECA3D10C43
3ED8FA0FC9E57E73A3A814D60B69C1D812ACE723CDE91E57B37D8443F4484180
8335B8157B295183B0F7EBB6E78BA4F41BF9FE8EC68F88C70B143B3C778F63F4
601776> |-
/I <1C60D8A8C9B844FAA7D03C86D52E796F3411C5A402D38F2C24F4823C9FFC
98A37B3785FA978F27FB3BCE49E342318C267E0C818977F7484465911886C1EE
0E7C429CAFE9FB614F63725A3DE0A03C7360C1CC0F02571F89FE7A4999DEBF33
9B4BCB2D> |-
/L <1C60D8A8C9B7B8EB5685245D8C64062E3BF64517F3D9E3BF41095D1CDFB5
6807DD4BDFA4D01A4F7EA645BDC681FAE83579A8DF0A208689D997FA3D11889C
FE21ED6788D8DEB659202830A82F5C537D00BC0CF3DCDC59D4FBB89FDC9F66D6
39310201F096CFF1D8167DC89694B656D7C764CD042CE06989BD29> |-
/M <1C60D8A8C9B598EE1CB5209499DE4B1660A476065FE9E7C9DE0A896F238F
3BAC526783AD87863B8024E045118587B0AC3CFEA1FBB2D615598D902D22C573
F296002B47A34D034C991312C00DF0A6EA704E8924148ED76C58D6D04FA8660A
0F8D78D64BDBF4C2137920EC4E76EA349A772AB7CD23D7C358B13E3ACF746680
C889853C0CD3FC4466CE6748D147AEACC752BE7CC205998AA483688BE76906CC
3A3A2C9DC14D61E427D66FD7B46FE7F089A7DD4E82293D6FE95AFD40C4157741
D00B815D951031E5B0D9C69F01A25DAF63847888829FCF5E9C52951108530BC0
D88A316725611CE9C003E960AEEB8AD8D853146F15A0D9A2434497B898C9A817
C9245A69F5> |-
/N <1C60D8A8C9B603551D048C3777D09AB1CAC8CAB50118C6C3C1E5A5A59390
DC67D4B5ECFEF082106A264F188D47377DB88FB278583B9FDE133C45D7D8AC45
041107625017FFC6B59CDDB0DCF220C3E8A920F6E6E39166E74F60AD84D96FC3
AA471B366F3288AE086E580465B1E3F06D359197A53B13983EE6ADF3742030A8
51ADA1BD4393EA4F51EA97262F4DD48B7C57222D5183C7ACD93443A2E4C12F7E
84BB4C09F2D260ED9E65B7B0321C7B3F6199E47CF9D51AC5A6D427E0A1725079
F340B6C3742784561F851C> |-
/O <1C60D8A8C9B6184ACD02E88485D02050D166B44F48907CF516F78D42BDCC
98759FC24070918DF9287D11A99224868633C1FF87F5EC62AC8CC17D60646F6A
43C9E3D5E7CA97A8B806AE4497B9E42C59D8D9BE035EA497946FBBC79287CFFF
79C917BDF2> |-
/P <1C60D8A8C9B7ECD92B6C96F0C87C2AF542073F174D422CAB9DFA6920215A
ADB4A24E2EDC6DB5D5E876FBBB8D0423B81A9F61CF9FC6FECD5EA19AB4CB7455
BC091AB46FAE6F371C794E1EB9E7EBBDAC89533D5357E0BD29AFFF367F2D9257
0C3699AA4F363539B6D0ADCF8432A9894B425754E26A678411278C650C7F5926
17F1D36CAB5A187A54C5075D5398344B337FDA> |-
/R <1C60D8A8C9B7C3C988CE91D19B05ECC0CE646E16DD707EF350C0FCF16589
B6BF5185CE63D47E2368DB7BCBC6D4334A646E1B65DA0CC19C46A48063A4BA72
F2C680CD172ADDA1571BFA72DF58E47D42A1936982F327035CDEBABA5F639B96
9D9760375A00C12A3BEB114042B1F497F6F138414B110F14D9315A3EEA3416ED
3770D20B3BD454E64E57704211C2359CD69B1266B410FDEE67009A403565A199
1BD59301E561ADB8A710F0A50719F3D71116F5FDBC4F9C21992F5A7B5FFE27FD
A8800E548AA33608052F84744A6CEF21B50FA7EF735928887779A83F5FC3BD9A
508CE3E1A20500CC917A9C714E4D6CE6E11535819D1B72DFA8079C053607D7F2> |-
/S <1C60D8A8C9B7A157271933F807068AD4E6D3FD799A7C31B2A6DCD0F1E9BB
DCBF16D3CF4255D2F73DE7A90005DC3BBC05D8D4BAE21308F20787536CDB15C6
56B03E2EE625E955ACA2EFD0A6A99B2749F75260F0D5744953CF2F3C07865A9C
10A3E1C1A01CB152D5BABC8039D514362186092D570AEE9B04C90654768D5913
5EC6CEF145739E81D9696EB64C10C8684851666F1AF70D21508017338DE1A27E
1C8B47> |-
/T <1C60D8A8C9B79FB0A89E5DB2816BCD891ED2658421FB000F81B42964E137
2AE97626A2FB3B79131D1E93F4B592D48D981F7E18249F0CCF201E4BF20B5A63
36972717C1321A8A2B0C9C1D872B456316520F080DC77E7EBEDB695DB3B4838A
FB595F3C5311F2C2294777ED586EEA1C8F5D291047931EB18F06279B113C9572
ED9A05CE354287F93B> |-
/U <1C60D8A8C9B629F1B779A233A57448D69D1457FD92898FA976B77521EFB7
6F94513AEA3BC1BBBDEAD639CB3456E5E0DF0175FDF1E210D282C386DA93DF29
A525E67FC430C884736CF9F21A1934EA5778CCFC8923E1D83DCEBD89DB704258
F9C662B4D8135D8EEE73777F194B26852CA58DCDA8328D395E2450DE33BDD6C3
A6E7FD2A59B07B39C16DDC784E> |-
/V <1C60D8A8C9B66A6BCB04D95D6596EB6EBEE09957BD624EAC5BA15F27AEBD
DF41A12227118EB4F98AAE4029DA319B0F914BC3DBB5720612739C6EF0447ED9
75D3EB8D99DC6EFD593E108AC194D40049BFE6D5A0478AE7BD3F7827FCBDF4E0
7451C6E25F0C2ADCD954B12C4955CFCE0E55C24EA5B1D92B81D3783C35B3964A
2FD0A0DA01AD533D233913B71C2B80393D3A9F916AFCDE745FA9BE4D4079E024
31F45727A8CFCD705286D4F7AE69EDE4A83CD01CF4A77E094A646E9A31B8D2B1
26A19DFCD4EBEC> |-
/X <1C60D8A8C9B7F6E938ED34502398EB0A115A2B4275BC096DC2D7AF16187E
900ED90B8023B59DDD9A617F88BDEC2191F0D70D24CAB4B87F19E57E77164A09
58FAD04362E98B4EE1C65606F6189F74584EA1AAED2E224C24D9D34183367D42
30E004F1387C04179E2DF44DCB8E90F38CAB73647A4BCC3420FBE307B1A006A7
F6FDA4B9E52C0F2A01C2073B86FF6A23C58C8B7AF9C4F288D72E2851AF2C2C6A
FBD4B01468F2157A732A62FE88F2740448D838DFBA5F635437A155E819A676E5
00032AF9A30F081BC52E1FE5208156B2A7737B636BBC0F2D777EB92A5FDC76B1
E422C9CC53404B6A7E18ADB73F27E095109EC5FB4F19EEEBDF7092A6964CBB92
9C754704A75E132D87> |-
/a <1C60D8A8C9B75A17B9498A9519198043DF49B7BB1270A0CCA55188019F1C
62DB467994D60C18B2A91C460A35693A9D738F70C33EBC4205FCDD97C3FD3D1A
45F79C03CB87756A6ECF8343CB639DBFF2EE99D6843679C2A192BE969AE6E4C7
30BE510B581D3C8AD5FDD40D82533F34D7C26CD2FC803FA3C85DD009629222CD
AD365B2CFA064759D7BCD76EFC63F01E47C9AAA72C4D2775ACDA153E1529B076
DB3716E287014361201CD244630B002D495962427F5FC1FABD9B40EE3BEBEADD
4463B42409A365FE9B1636533A4F60BB3F55B6F225E58FEC850576F3E6BC5152
FE4F1B9E15BBB41B4A6772B5B6B5C477A0E6FEF7BEF873BAD4FD78A78B2F6A93> |-
/c <1C60D8A8C9B76E3797258739A5E6E8E83FF380592825375E5EB7998998E4
63F6E559ECB5013AB0CE45B0ACBA3730AC725100D7CEA834AD14DA01B2460572
838CBD485FBDF44307E71FB30EB986277899B27B157978EA6D5F0631D14D1C51
752E3C013398FFB57C8EF0716F794C3D00087EE94E130F> |-
/d <1C60D8A8C9B7890D0057348BC86EA5CE50DCB2E3746EB65E114C4A50BF0D
CF50B2852F76F7E6C30C6959A17A98F0AE698024F9040E69F07F6ADB189A7C40
3AB6059F0F8DCBB2069AC025C33FC00D03F243BA64B0968DAC6FF283A2F4B6C4
13C567261A7B266C4F857235BFDE23DC429751FA2D66FF58500F70C76E140A7F
E7EB2950D46639EE66D226D51256B175BC4B751EF3117228EC808EB2B51DD69A
12F7DE3D0CA7DCFC9BDBAE3C11F815573289742AA886C579D17B49A7A81E15CD
18171BF1ED34EE7DD85356CF5F32D20030278FE225647ABFC3ED3591DA07E15C
D126BC7E29BB1C536023407E756D7C96D245E91419F29F2C40C23B1A335761C2
4F33EB2E162FB42943E1F08A0084C09E0F81B1BF22B31067368C7180CCF89065
45BA1317AF6FE039B76C96482DDB730E93A91FD6AFF9991C8F9FC96A661FA047
085515337F16DAEDBA019C5D333AC82EAF4946CBC1> |-
/e <1C60D8A8C9B776A015C6CF8FA9DA8E5D8F0CBA4CBED07F7209D1C9F10406
19ACE8A0F91358C37F5701127BF399FD9C0A463E489045195F2FF1559A201C78
7D95F21281490E92FDF031E9B960FC44DBB45BF47F7D7E52BA778173D22C9578
C54758985267E56FE7284F9B09A3F2319D9500014D515729C5B444522E00526A
6D4517498978074AD0BDD01B6106CD947EB443D368F103F0592B07C17C8BA1B7
482DF51A04B80F48C9E48C7CC02F6FE69A6932E30BBAD4C6B7346AD733A2F750
23452D239CF449CB97879E12D0D329CF2E4F9022> |-
/f <1C60D8A8C9B830DBB63870BDD2221C6DC22D970C89BC8F6BEFCD0400A75C
BBC454BECB35F702EE3B3E9EC93CF2B5362C61762C6C2C9FA95EB3D9119703A3
509B5259EDDB5BBF2F38611DA3EA6F8198A6B0EA05A8860D78143AC35D9AAF2B
D42684FE0DB068033F2C0EC041A5ABCECEF9B4505ADF0E32D3FDA59EBAB826AD
8B14A881DA9E0AA80AD09D4263234CFBA07EF408510F75F094C38375417C77C4
26486F80A0817F3510F5DA22533D8F18A3079D334CD3C7E585C81003FC4BD673
29FD5FE2AC84E12D4F9933C6AB87C04D589907627332D5C9E330B9069A3F8D6F
455E74AC5B8DE6BC5F0DB050A26D36D7D983AE3E82F272955A7FC96FBFFA31EB
E6657A95B2CB73F6AD94748503A367F165C7C4FA32D916FFE250F6C24D3EF787
CE36682A1680D2007F95328C4D3FDA84D721D20EAE4B6B06458A1D6E77E949D0
711FD2B13E1C010F4A2C8F2A84AFCE3DCF220FA874EA2B4D730E71F6229AAE81
71C49B76E670D6> |-
/h <1C60D8A8C9B796769ECF9EF76585BD44ED35F995D2666AC23D6B396B2151
7D12889C6C0BAA83B21BF5C785A796CBB674D8FAEA3F2F579E08F8A14F7D9BDF
8DE9E620D1064E8551EA4C8CB4B7B584C95FB424451A88EBF4DB358A06AC4D9F
0C4242CB263CE09FECFFD5B433BC062777FA36B87B19F5919960AE335A051AB2
9C52E9D3D46E7FE692CBB77DF1278E9C5D32C9ED305960D3A3A03E48846ACB5E
04E5D4E69BB77B207C45C484D94DC769F0290E83D81EFFF82BF0C92F133BCF40
6C6E020DC79D1628C8714C4016998D72A4DE3C2753D3AC6192B554A5130C0288
FACAB087FD0D83460DCAD6AB71CD8B0C50A68657FF1CDDD4709BE1C229694042
77508A03CE5B56BAF9BECC0CD6D7739E363A77889D03A1487CFCC22C5EC3D0E9
E954> |-
/i <1C60D8A8C9B8666CA14C63FC8EFD2DA1B12868888FC4D15FB35A4B99B41F
E9CFBB3A67B52790F88CD673572E1E528F93EA045CB27D58EC92DCA8B6F6FF57
023A27A4ED2BF9C2C798768B6DC849655A2E2FC450E7D0EBB9343074E31522B9
4A4547F45985672B9E398085764E0B2F35A8549A73926B45B1F4A33D8C04DC60
5E286B11ABFF04491A23BE0D1205885A8F3B449A1D5869126EEEBFD591230DE6
43BBB191E2D924D599F61CBC3984E630795427755D68321F7C6EAAF2F40439BB
9FDEB9F09291CEA43E49F09C7F85D24AAD48B00B5C> |-
/l <1C60D8A8C9B86ED96EC86F39AD0E266FB726A0BAA2040860CAD7FF26E139
B5E8E91C9D492D4B53EF3A1B3043DB8E5B01426172F17F35CF75FD9CC0921B51
D50262DE72C09F1BDB44739BB786D0A9A60DC0F3819053DCDC746FFFC74574D3
49D72FB131E74A6D5F751E46500899F857A2642AF7E831E25B98A9AC8FC4CF9F
3815C13411188F388F3206B2CFFD4F4D91E09B8F88CA60F4CBBEF0F242923B48
8E0C514F060F109324BC393739E2B35E> |-
/m <1C60D8A8C9B6DABBF06E33374AF6D3994E70B030AEC3217C7A7E2C32963C
E03CED380E2D7625F814E1DB2EEC1F22329DCAF3CCEF90019E5E18CB07E858D3
EF347BBFF41EE29BFC5A41697345B868C747E18234FFA5A271316A91962FC346
146AE4674460D6157FA4CEC7962C1016823BF23BC22418B8F2574999188EA36A
438B91502F785F77B79AA7224774CF881F0470A6C4E8926F1AF7F15DB41CB104
823C89DE1C53F29F8DE37F3CF3244588B89D8F62CD51E4E9131D4EC47E7C153C
0305118EA4A08EAAC62D48399C0A340D476CB316F9E74E5EA19FED0196F1C31D
ED2C3E3AB14AC3BEF01644DCDC1494245D8F4F6E50137608ACAA4BB7BE905FB8
1CB362C0198FDD3D1A54DE8440990D484E2663EE7B871D> |-
/n <1C60D8A8C9B780B373D7AF8EBA6DC6D7383963304360AF16D850816E4E53
CD76F04A3EC3B7F6B0CF940E1A4F0834C4ECD0056EF5E3232800B8DD06DC5FFF
1AD2AD8A5DDC287C645A010988290093C66923A6667BC4206690EEEBF5464BB0
DA545B540E49258DE33C3B867300680E0DA763DFE1D5CC773EBEFF169C1F61A6
60B710AC75602BB43CCACD01F69421F32D78F062E1B603556F3E48F9400066BA
76827101DB3EE3FA29542850B61D575C4F8B5D7D4C0A99B7C50C1D4ECA64AD40
786D83C61731B72D8173A55747533A190D4DBACAF17F24B4363C940E296CCB18
5B11C339F2FC3AB1BAD42A> |-
/o <1C60D8A8C9B7A73DCF50B19EB1A6D9CE54B158364ED1603CC9A10C34DEA9
A8932C513020BE86A793632C2EDD9B5F18D95083DE8B693773B86E501418782E
6F0B831D5F3BA216BB49876B72A3774F1324438BCA66> |-
/p <1C60D8A8C9B7B07F08344508491CA191B965ACF38BF4D25E0230065AB053
C2E54D6785D2178223DBA079BFC0759B930E46230ADB4E5E3339DE045F97741E
8203926DE59E788FEDAAA920BF5FAC42E23FCB52868BB301966B924E095F3D81
642BB289FF8A899503077C1C05F1C0CD4BC865440C83270CE504A4DF32E7F977
F38102A399451EB9C261846FE9E27421B0A93E31921080C5B7FA8A4263285725
68FFC05FB28F7001C347692CF462BCCF42DA0CF4A97D6BC2E468CB859586EC1F
56947B9E4F8E5CDEEB775C4AC347F08CBA5EA959DF976248FEDECFC6241ED637
CFBACE8D1F7784CC356B349A7A> |-
/r <1C60D8A8C9B8096E5DFAFDBDFC22C18035337253A6F7A85DE38D686CE366
A493A5394CFD2F2EB8BD205C09F46B75862FDE8C9A3E96D2586D4D52EA328D64
C4225A308EE53C1E218F815D53B138A13111B16CEF22B5361B6B2E6E8D9FB76B
EEB956A86C0360E84C6C30E0700BE038556310E310BD58522E92E46065E9C5CE
9DE1F96E3136DDFF96BAC73D0EF2316086964200982BC81243B5729E90249B91
D518C453CBC52D42C034795CA7136818D603D95E4E68B5A088408ECA29D2FA91
E879CD3181E539E5BF6666C2475A13BB3669B0CB32A4A02995FCBFD4F4515FDF
8F4D15D59CC67F559038> |-
/s <1C60D8A8C9B70FAD6E9D622FC4F1FAE7B5E5E524381B7DB269543EA6DE5D
649DC0328DF66D014E3A2BB470709F700382161CB55DDCC1D16996B6CFBD6815
90B594CB0979DE2FF6B912B42F192DAF98200CE666FE516FDD677D110970E8DE
755FD5FAF11D8281A3E81ECEAD981731373BED1BF1E83F73E7919CB72B98BED3
F8B9929DAAFC092E1E064C3A23CFC3153A33E9423E80E7804579> |-
/t <1C60D8A8C9B816D2ACD0F16A338A5E29D88B1448EE2E14574AA27E2BED21
D5059ED41437B5B88DA15343E9721E484EB02F2F17A59F4297915CA2CF5CDF5B
BEAD33E736F6835E8034D400E9F097C6F534336025FDCCD4A172A2ED1430BB7F
3F163CD1016D55F8F7AC1A1FD1936ADD7B3D1C521DE9C09E424445235232A73E
7E424F443028C61E80462296ABAB876007F55988AAE431EC98CE7EF23B54148D
EE060175CC3A1CDD033866B59B9AC2074BAC200658668340E4D0F0DB40A60550
8C859D1AF99E8486CFA77BF97A3327A725915BBB55B118A5E65A7C099403C488
8B12E5376AF803EAAE468C96FB9AC7E4D8A3313D565DFA9303FC3A6D1755E0E0
8F544502E139336A8EBAE254379A6FA515263FFB79DCD907C8A31A11C36BDA50
6A72DDC73E4AADCE938F2C344E035889DEB67639C08EFCE2DAF2C3D99BCC44BA
F283022EEA39BF8313B0> |-
/v <1C60D8A8C9B74D93C024E3113BFEE2D033A6D995D9A5FD55AE6FE094ADA5
7A4BCBF6F1EDEBAC02D89783F959F45D71DA5E3F602CF7B65AF5A0736518D332
8075EF44522040028BD3265023AF9A27FDDFC67F388815336F2BEA791629FDC9
C10AA4207BC01225DD2D152E41A5CD1FACDE5E42EE333AA89B391168EF741087
03D13571563A363346630A17D0F0E672FDC6D9> |-
/y <1C60D8A8C9B7A1575D5550600B6512DEA1D46FC7636DD311936005BEDE2B
F80935FC954457DCF9D26AFD980F92D0F7492E0ED35C0FD56E1E1B2E1DCE39FB
EB7F6197FF6362D4C8AD90D11832B9D8A9F73CCFBCEA6C152C9F44B8C60BB31A
35230FF62329D938E605D17BAC5099EF2AF3916338965A27AB31FD90475CE7B0
43DE3912F9CBDFAC52D3172F8A11546A1E63916422A1D0FBD732C38D61D44CC7
138E9B3A176AEB21419F4AD0D7D7F047AD5689A907133554FE44621018DF5C71
24A0BE66ADDA5722CE5BD869> |-
/endash <1C60D8A8C9B785CBBBDB3EA946BEF69F12F0AFFF845C1D33BB14C85
FEF7456D979967BE210F7157AEB284D60> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B049D8877878B897D38F0C1A3BCD7DC
D90D5A5D3F0C6CA0DFFC21D05D0988DA155613F51A2682042E9A3858D96F2624
FFEDE08865E23C71C0E53790ABD49E7873E8DB9AFFC20B9E312734227F9CB769
8F2DEEE8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVI+LinBiolinumT /FAAAAA+LinBiolinumT findfont ct_VMDictPut
/QOZGVI+LinBiolinumT*1 
[39{/.notdef}rp /quoteright 4{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two 
/three 3{/.notdef}rp /seven /.notdef /nine 7{/.notdef}rp /A /.notdef 
/C /D /.notdef /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
/U /V /.notdef /X 8{/.notdef}rp /a /.notdef /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/.notdef /v 2{/.notdef}rp /y 55{/.notdef}rp /endash 78{/.notdef}rp]
QOZGVI+LinBiolinumT nf
QOZGVI+LinBiolinumT*1 [9.963 0 0 -9.963 0 0 ]msf
-2.469 -13.934 mo
(AFormalAnalysisoftheNVIDIAPTXMemoryConsistencyModelASPLOS'19,April13\26117,2019,Providence,RI,USA)
[8.75745 5.02133 4.9815 3.53683 8.04021 4.79223 5.00141 6.26671 5.37007 4.79224 2.51067 5.04124 
3.9453 2.59032 6.43607 4.98149 5.61909 3.38737 5.46965 7.00401 7.39258 6.28662 2.92918 7.07381 
2.92917 8.75748 5.56937 5.37994 8.27921 8.82721 4.51328 8.04022 4.98151 3.68625 7.53198 6.745 
4.98148 5.37009 3.94531 2.59033 3.94528 3.38739 4.51328 5.37009 4.27411 7.53201 8.82724 5.05124 
5.28036 4.51328 22.9249 6.26669 5.04126 5.56937 5.13092 7.3826 7.53198 2.67014 4.63275 4.63278 
4.68262 6.26669 5.2106 3.53683 2.59033 5.0014 4.63275 4.63275 5.32022 4.63275 4.63275 4.68265 
4.63275 4.63275 4.63275 4.63278 4.68262 5.56937 3.45712 4.91177 4.60294 2.59033 5.2804 4.51324 
5.37009 4.27411 4.41364 4.68268 5.97784 2.9292 4.68262 6.89441 5.0412 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+LinLibertineT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GAAAAA+LinLibertineT def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,\\012Open Font under Terms of following Free Software Licenses:\\012GPL \\050General Public License\\051 with font-exception and OFL \\050Open Font License\\051.\\012Created with FontForge \\050http://fontforge.sf.net\\051\\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 67 /C put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
def
/FontBBox {-1082 -257 6171 1125} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.0395999 def
/BlueShift 6 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [36] def
/StemSnapV [79 86] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
19 dict dup begin
/one <1C60D8A8C9B74A3E8D9B6E4FBB9283EA31AC3F7A3E4DE092461636BD67
A7BEC8CD5D83C377F85732373E8C3E76095639C8DBF91C0F4B659860337F551D
32668728A6E74FB146922B60FE3A1D4938C5CC8F5B487DAF03748C99D9ED230E
D36D0B61ADF52AEC94FE2809A6C4588322002773D6C13081D010902ADBFEC3D9
004D254B163112A068EDBFF1080B> |-
/C <1C60D8A8C9B67B16951E84EFA7CA9F93B441266FEA1C916FDE65CA457222
E64FA5FE34408BC02B7E61B86A4A0207D128F7AF0F010F4FFEE04B33986A3929
844BC257B1F996C4C3C39133D27ECD35C3816375F5EA1CA2D52ED145B4C051B3
5E8D5AD6FEA1B9F2D94624367C0806B03A85F88A89BBC6769440B5E2EF> |-
/P <1C60D8A8C9B79EE332E43A2145079745F3E0E5D00BAC8A9E202E14CB1406
FD677AD1CE0FB6C0EB12F08A488D5ECA9935E74045388F6BAB67A59416BC5203
C29A816C952531554078993265CCE42572FB415BFC20DB72F90DB71E878381A5
2DA0262B979E4959CDB50D65A57308828896715309DC12E4C89A457D33AB7CF3
74EEEDE05D931964B08FDE204B5A1A336E5CB4DD5B72EE64EFEF72AD28D661BF
1CF14A914330EEBBB44846181CEC19AEC252762755B3AEDA4F2575> |-
/R <1C60D8A8C9B7F000D1B3D3D222E3D912DCD0D59C5A9D46770F70D40E2947
1503C153D7A394D940E66E9549EC540BA0A64098727848E7FEADDF175D5025BD
213F6D55C70BB6FA27450CB69D1067A45259B9377E28EA8BAC7031A494901FA3
28FBFA481AB24214D27C2A170EEDE230AA0517C5F981096B8E295EDF1264D9FE
2A0042CB2D22C6FFD936BE480D69B37F2B66DAC243DFF7D3C64B8FCCB915D407
F67794E3FA685C482F41A18F88D67DB4BB4A086B445B194C01F3E0CADB8FE126
D16BBEC3946B78E20265D535E82311101A25067A8F75860E44A203B017535443
9D54009C58B099146908BDB6ABCAA02C19D36BE320815BA87A0BC51EB9E1E714
BBE54847267CAD4A3DF9CC> |-
/T <1C60D8A8C9B7C63D8967668A60903DA7167247BEB9B7147ECC347167FFC6
6F0B3B8B802E309C8935C295EE17ADF4D9BA642760A16F89D1341B708A517991
A973C8A69E0A20AB3EDE7916479411C9349AEC2B26B8FAA0742289C36DA1EE79
014EDE0A3A4CB52D3163E4A95025AAA547689A44FA555B22A946EAF2C20A757F
8E409086CB0317383E306A115287C5D388ED302463878557B8AFE4886EA3D79B
052049685D4EA8BDBFCB8A36C35494E0371FF1A6F8206152B3039FF1A4DA7859
6546> |-
/X <1C60D8A8C9B649C72C4BA05FC4DA33B89BB5E8C790E5468746B945EC4849
C767F232627BFAEEF4FDC73BA177F046DAA7F1B6FE38293184A31DB1A9A56792
E53B7DA88E34AD1E53DD1426D3A50315D692BC7FE7AA3BA36600C50A08996E61
C2D74A5D4CF8142F06DDE279403159D86437D411CB377A5ED6FF13D4A266121A
407B5B6DDE6EC3DEA59DBF1B93075C4FF6D8D429D0A3CA09CFEFD997711F51E6
9C88A47834A8C9FA21667278E14F8EB6E247825DA86FE0A1F55FFE96A49AB029
85A74C30E5599E9858A63887412009B936297463B9DE81138957629253006CB9
9B635BA5F130D3EC0EBDC01C0EA9416DD7DC450FF834F6512C837E4572E795C2
58E6F79F19114D85A00FC4D8BD4C3219050E27CDE8B489B8B244510FDB753ADE
7CF5FDD5D5CBB4A41E869A3BA261C075FCCF2ECC3BB2C5047638CE7471E258A6
6E4F14B2CE2B453E64D1707611EF1DE1F65A2FA1778156E318FC6D75CA1282D6
0363339FC52114EB449CD08BD92D9D2B9B08101F14DEEEAC03651B5B78768B85
105EC00EB210BD729F11> |-
/a <1C60D8A8C9B7727936979549E8A99AC470EA9DBCF3400E87AD26C682BB81
1D88B581A5AC638BCD86FB7D68930701E7BBC8F4E4A85B0CF13D80BF9F392A67
CE3C2B0694290FC01C14ED86F3644D811AD8FEE9E356A93C2930CDADFB1CCCEC
175C24DDE4CBC06D4C1D39EE1E9C98EB193C3B28B6DE3CDE12E5398534CF4126
1871538F494C065E34BFE56DDEB319A433E157F4D95E2A5AC17A62A2C306E134
504CB15E98107D95DBB133050B72B87A703274BE0B8CD92245D93D24574FFAAC
1EBE15D08F654485291FCF91D3815400C86F6B> |-
/c <1C60D8A8C9B76F05DE5179374ADE9E44C1FA207903237E24DCAA22BF0395
659E4BEB413ED36F30A67E561D67ADFE2CD5818607D7C93E1CEC11278DBF4276
5764BB11B3283A9531D63F31AE8E84A92D7DA4D5AECAEEF44F4D273491E96EF2
212BE104> |-
/g <1C60D8A8C9B7A73DB56E833C7C298AE11768912B12FAD5F48FCB6C36B0A4
D88E4588F2B826433C804B1E481BDEB62B337EC099E304C5B722C70237DBF70B
293C2F81A08DA7405109B7D512A77F9389D5FEB7135F17E703B6D90E521357C6
A29D9C534EBD33A8EB9A501C50CA95D595DB2EF3100F82146E63C0F248FF21F0
895BBFF86669432DE8956189463B83ED8F31DCE7B0739A9E12FC34166E9C6FB1
5314333FC29DD0DDE2E02C0EB6DB7E9D1B7964C4034E4E996072309BBFE41562
DA42B3F789BF35C508DCF1C3F83216C8C5851B2AEF6EC41597CAB52E655AF7DD
76ECF0E8E4C02D72E9146E4E23E3EB9022E50D610D6713C42DBB2C94769A2F90
2F51CFD0A2CB9FDEEF7C9398CAE04127DAD46B5810BA3882597DE0EC0A4FF6FC
7B98899548A852A7D1D856490610C0F0032E5BFF58B01A6C524D313CEA667E8E
33BAC8B4E177C223CD1B8112E1BEB09217927611234320819E16D40F6A9E3BD9
A01172053E15855F3D4E15FA7F8D0ADE666495508E3A3B5D4F10C7A67F00DB53
EF5AD01A71C7DD6A3D5D1177AC6859B3F8CC51E69794B7DBB8BE> |-
/i <1C60D8A8C9B85D12B54360CBD31A70E9BBA93121C3039C028C99245BD3D7
55F61398B55E3235DA656F24082213937801219DEBAE909D5B5DA05F6593F278
3DA2B448232CB24D8EF8656D5D75FC27096F5150DA8A1C0A8D831B386EDD5DD7
0BF7591762B9F3A72C82A90D0242B3F8EE5686A3280A9EEE6EF2BBA9E93735A6
1C65C0176A108C45D02C701062BAD03B523F751666CE59ACC11EB0DB6EB09B82
CDAA141CB3BF1B9E6C854D5B83FEDEA51CB81B9C50E213FC4C> |-
/m <1C60D8A8C9B6CB905C98DFA97CF9498000EC75C3D34A8F602FA26CB39CCE
C501CC30AB0201CA1B3F5AA7459009E551A57615046D70DFF4032D26C7615B1F
6872285796EE75633D2638925BEA3F173D9EAB6B959EB11C2708E43D9B743A09
E1B75A092D3D46FAA29D5E24174FE66A192D40088AA2FA5CA63FD2F63CF4B6C5
D336309DC155286A8F60979003863A3D04F9665311F7CE2E29DAC948F0A06908
5E61A669170D1F6C9084D305A6604F2900092AAE4844AE47B031E4782884EAA7
4AB3FDD80EB19C0987783087972C40792C98076B4F512957C016C72474B7C54E
EED88376AF609D0093A3E3B40E9BB1457499F27CB9C8A141C7F5677411CBE6A7
C1F90F3F95BC8A0BE2C2345F1301CA4D1CCEB60174307C87302AC7FAAB6E55BC
7C436E1C69BCC1A48559E01EDB31E83B1C5C4E60D2D4A8709F6AF377D1FA8234
A8201DD13A3F7D47F97F479C0DBC2FF2FCC16219F75B12FA56839759B761538D
40877350CFB42EB9FD853DFAFEADF3A79DA7> |-
/n <1C60D8A8C9B79D2DD62EBC5183BCF32960FC8957A2AF8ED2B404E8A596C5
72F687EF218C489EB0E187D75F6EB246958DBC4BCEAFC1865F592A69ED5EDFD6
8DCC6A853C7F7BF332A266E9315003D3D265B930B452834BA862B03B1DC01276
465D364E760C9F185B1DE2BDCD863C493A6E16CF53DBF1420A376858E0CB3008
D035A7D51E5FD55F65561F8BE2C8E8B966FF8BFB8BA83BF60464F5A82EC99FD5
8AD69CFFD53300F5B1EBC44FE684EE143C937FD5AAE6BD9D41F71282E003E50D
0327A456AE398D7F50478D66667153A3F665E58EAEABE35EC2C82588C058C03B
0A568DA8BEDCA14E263589E43F64BF181F6B01934BC982D0582D5386FF4A69B1
23C01AF7349611CD1A06D6F8AAA93C> |-
/o <1C60D8A8C9B7A3FACB18F5C88D93A6E9EEBFB2DD94A43431551815975CBD
AC7354FE4FDF82559CD40A1E89D021577B20F5B5D25FEE077C6BD354AC444596
F1E39DE7DE050BE0086FB4E75C7E88887C5354FE382537281BFFEB22F7B17421
50A75EF7FF> |-
/p <1C60D8A8C9B7B4A13301A347FE948F30410AD13DB176AEAA5ED76B829943
BBD17F371A6F048BD13B9473F3D2D38DE5F405EF4480BAFAD5E81CFAC02D2676
64430F6AD7B7636A9EA8041488EF59604A3D13600180DF32AFA40CC1AC821FE4
C1A7F2F29590CC12D61013F8D79C2A05E6A90AC272F27ECE45B2455761D81B71
A52B19E03F5463193C31DBCE783714C36DAC156B9E37B12970BE62FBD60C9FF2
98597EE5CC4910AF4DF1B6A964D470894ACFF1A44FB672CEDD3856E83D85EFFE
B1B3740AA7D03E59AF42153CCDB222592FCE306831C09C694DEC93D2B06543D0
3836BBA8025B4E4329B215F8C754DE5A> |-
/r <1C60D8A8C9B727F79DCB48BD1B8E094E50941F2026C07F1252F77FD1CF13
24AF592946668E441A3C5FEBC599E0795E57DDE18629FCCDF903B27CA3E9DB51
88D573FC0FA82C83B7F23FEBA7CC7402CA3C79A545337E7DD852B06C3B4AE9AD
1FD8DC8151252A429AFA1E86AA69F4C67ADF54E9223194468A8473E79C5EA231
F48C665F4E0DF008ED290DBEEB98F6F34D7ED8C6508AADC3A1C3F0E85370FFAE
08B2C29ADF5197474B4DEB5AEBAA35F44CDD587FA43B61265A604AF660> |-
/s <1C60D8A8C9B73549B9F688F147E6A8F6C13D9FD9CFC799B695025B38B6FA
97AE27466C155E25739A2FD968A6246382A41A1EFFAAAC2E5FDA1668D4AA9825
2AEBE773ECABD6EBCEEDFE83C42CA921678E164911A5623F9F95330E7F9F66F8
A771B7B61082BDBF506C8A4DED20CD963F97B8976603138A2A19C32B4AEB9F9C
DF596A1B579CF96935DEBEA438D61FA1327E439B65662B9AD8504D> |-
/t <1C60D8A8C9B82E34CC15E48D4313BF81E5420FC35BADDEFD725E6DD7D1D3
D3AF9C7F5E9327938BEA5506B9EE9BB569B1E17A117A1C50DFD7D32C5500DD45
1482305484CC1E2FB6A430CB86F327984C6119000FE952A26FEFBFAF06FC8C74
A9BA10C84AA6A1EF25FAD018B3C688318A61425AD4A6B430437D9359C004FD37
7AA6A711B6AB61> |-
/u <1C60D8A8C9B7883C4DA1F946687A0A39B3CF59CDF7115C725FF2E75161AC
836E613B7678F3153919890C9DBCB208BBAFC20037BD0A7DA3E592EDE8D015B8
FDFE651758E08C222E7BE2E2F370F795461F93B0E35AB603C0983C4578C3029A
AC7C148F23F08059300F0C2A63E8EFD92164B2C0A9C4B34F35CDD224F24F2415
AFF1702FDFF1309EB4D2919875C9022667E45B7E526906BAF315EF0809E5184D
3A3A388E4E851FE2423D21776C597264B78E67925AA3D3E993AFE732912CF6D7
7C98DFB40DF9BC9CF16FC85E5E2DEABFA07945A87D936E9ABE901DCA05B01449
76FE9B14ECD1A0A9D0A67DEFD961468A1AE80390> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B049D8877878B897D38F0C1A3BCD7DC
D90D5A5D3F0C6CA0DFFC21D05D0988DA155613F51A2682042E9A3858D96F2624
FFEDE08865E23C71C0E53790ABD49E7873E8DB9AFFC20B9E312734227F9CB769
8F2DEEE8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT /GAAAAA+LinLibertineT findfont ct_VMDictPut
/QOZGVJ+LinLibertineT*1 
[49{/.notdef}rp /one 17{/.notdef}rp /C 12{/.notdef}rp /P /.notdef /R 
/.notdef /T 3{/.notdef}rp /X 8{/.notdef}rp /a /.notdef /c 
3{/.notdef}rp /g /.notdef /i 3{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 14.659 mo
(RC11)sh
30.3369 14.659 mo
(construct)sh
78.3945 14.659 mo
(PTX)sh
96.7569 14.659 mo
(mapping)sh
.398 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
6.709 18.145 mo
226.773 18.145 li
@
%ADOBeginSubsetFont: HAAAAA+LinLibertineT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HAAAAA+LinLibertineT def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,\\012Open Font under Terms of following Free Software Licenses:\\012GPL \\050General Public License\\051 with font-exception and OFL \\050Open Font License\\051.\\012Created with FontForge \\050http://fontforge.sf.net\\051\\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 77 /M put
dup 82 /R put
dup 87 /W put
def
/FontBBox {-1082 -257 6171 1125} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.0395999 def
/BlueShift 6 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [36] def
/StemSnapV [79 86] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/F <1C60D8A8C9B756EDD472A6CDE264A9BD76202DF2745FD9B4CC9EF89CDA9A
6861A179C6DF61FDCB7106A2CE6431E542F30A8705D72767EADCF38BED00C295
F28E6F4E7CDB5FDBCA6444A4752AFB4C09E5AF17BE4A5B8D52915EF7F75005F1
05C396F8567882309C05BDFF26350B13E4317D60EA18A81B7BE117914445CFC9
3D482555960ACAF9D6FF6D4FDA563970542C3A043A9772EC908B1A6739D3E88F
2576C2F7622946CF16ADECA19092502A741F3BAEC514E97D032A2BA6A3E03216
51011190121DD5EFB67352B0EFBC8396C68BAD358D5053C7A38517A652ECA896
3F16BAFC66B4C01310ED134BB7B870D093662A48DC9F983B19> |-
/M <1C60D8A8C9B6BAE577E979693CB34EE49594A21E09AED32D9F31DF107181
4FE13BEC1FDAD26AC80E6C974FA5316CE50F421125A6483C64B2DAD60A7D4249
49B05DF69C51D8BFC5DB76A1FA05700624AFD0E7B34D4DE72514CBC9926485FD
D58A5C9DA75F85270ECA0CE3FD10C98CC72A00526E467A9F6C0018B00EB8AF09
12356D3251B7B352F73E1C38BE6D5D4F3FD340FAD49AA92CD2159205D9CBB027
70BDCFC92EC81719EF4E2F2442D05CA3B463E98EE79BBD26266486BD428AE612
F1D1A907AC4FB2524A144C7D166360C34B67E3866C37A9D07A40567F254DF278
AEAA9617F9197B8C8790F5ED736B2D68EC8E91B3275E005BEBC5A53E4A651CCD
4CC51972077D90FC211B3EFBF9> |-
/R <1C60D8A8C9B7F000D1B3D3D222E3D912DCD0D59C5A9D46770F70D40E2947
1503C153D7A394D940E66E9549EC540BA0A64098727848E7FEADDF175D5025BD
213F6D55C70BB6FA27450CB69D1067A45259B9377E28EA8BAC7031A494901FA3
28FBFA481AB24214D27C2A170EEDE230AA0517C5F981096B8E295EDF1264D9FE
2A0042CB2D22C6FFD936BE480D69B37F2B66DAC243DFF7D3C64B8FCCB915D407
F67794E3FA685C482F41A18F88D67DB4BB4A086B445B194C01F3E0CADB8FE126
D16BBEC3946B78E20265D535E82311101A25067A8F75860E44A203B017535443
9D54009C58B099146908BDB6ABCAA02C19D36BE320815BA87A0BC51EB9E1E714
BBE54847267CAD4A3DF9CC> |-
/W <1C60D8A8C9B5D940FCAE99AC1E04E3998F3343241D3DC08700DE12B88DEB
F8B4DA98677EC005BCC1FE96E131C430C2DB05D755F1D4008B4FA3B95FA52209
C320E5D72D336785FEC310E3DC2E96C14497B584578EB2D96951EB13DC3CD3A6
58B9EB2D76FE3D2F5777146463D2F5C70FD2F3A144ADB344C7F9180330DCFB16
ED71AFCFC9581B462974B15670A636491E518DDF6EE365CFFF5915545347A223
977B19736CB9A7F10D07FA684C2170426B670FBFFA271EC191F60655F8806E27
D47D8A5F602A63E35575EBF1846B4046AF29799499CA79DFCC94176CE4459F2A
205C91A4F115C9873925D69DF1501017BFC07112DF82AE972195287BA9846EFF
979674A61148B70B5AF583D5D84E7AFF6C0EEA802D90FD62709BDA8D6B7F07A2
FB97083D906E080C905C534501606E4FCD2ACD8BCB7932CB560EE79B9EADD742
E2E1F434FA6C2309E89274E01307BA1064> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B049D8877878B897D38F0C1A3BCD7DC
D90D5A5D3F0C6CA0DFFC21D05D0988DA155613F51A2682042E9A3858D96F2624
FFEDE08865E23C71C0E53790ABD49E7873E8DB9AFFC20B9E312734227F9CB769
8F2DEEE8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVK+LinLibertineT /HAAAAA+LinLibertineT findfont ct_VMDictPut
/QOZGVK+LinLibertineT*1 
[70{/.notdef}rp /F 6{/.notdef}rp /M 4{/.notdef}rp /R 4{/.notdef}rp /W 
168{/.notdef}rp]
QOZGVK+LinLibertineT nf
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 26.349 mo
(R)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IAAAAA+LinLibertineI7 def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,\\012Open Font under Terms of following Free Software Licenses:\\012GPL \\050General Public License\\051 with font-exception and OFL \\050Open Font License\\051.\\012Created with FontForge \\050http://fontforge.sf.net\\051\\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011) def
/Weight (Book) def
/ItalicAngle -12 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 76 /L put
dup 78 /N put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 88 /X put
dup 99 /c put
dup 111 /o put
dup 115 /s put
def
/FontBBox {-678 -312 6603 893} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 429 442 460 474 567 578 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 567 578 645 658 688 698] def
/FamilyOtherBlues [-235 -227] def
/BlueScale 0.0366666 def
/StdHW [39] def
/StdVW [76] def
/StemSnapH [39] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
13 dict dup begin
/A <1C60D8A8C9B63233E681D8FE3385D13923F8FF8D3971B3B8EEC437554117
549E431209E74DEA43132767943D67F0AE6A884E6507D1AB065459D4D07EE567
477F559E616E0EA8538744AC987AC9C49546676F5725CA540F86E3B08A5731EA
5E0CA28E2DF1C23212EFD8B4221B6BACC5351E503E254128608215CDE0F2164F
9EF9E4561A22B9B125CEF4E2C4C3FE40F6CCB9096ABB35F989CCC11D0B0AF61F
FCF6C7140D2A757C0BA75A1B76F5483FFAD148C3EBA9488A77006E8D90138800
BF2F4B35494938F74F45F65E11145AD781B38052BAD1FAC80D68EF2CAA79D9C6
A65F865992B65C8B2B2B5892318191249764E908A52A31686BE4FE4A00032BFF
E858818BBF4FDDBFBFFB7DB4AC4E495652568B21C4741E03> |-
/C <1C60D8A8C9B65062ECC2EB3ECACDA5FE345935973FF0DEC42CFB005536AB
ED5D69EF8FD081BA182FB4B013C03A9C8F52B616B65D682366A6FA507CA1DFE9
4DD4AB8BACD26E54FD249A90711746187E8AF2F9C35DF387AE9665A483E01F3C
3AD38BB4D5FE500FA551CF65CD7F47A84EA5ED83FE01A3D0DAA4B32A6F8A> |-
/E <1C60D8A8C9B7E52219593833B32E54C74D7CE15AEB1F59CDD7004E7A72B8
4A179C9E9440CE234AD36D23FE43A662ABBEEEAC6D648550542E3184BBB095CF
1FB4A7774E5C85A8449F0A1D79E8DCBFA43A27850A053B2B7F751CA852244161
EC229B64321062540770D16F5A226017125BA628599ABADD2BABC61617BC8AF1
234F92BF27B18D611661249123450ACDBA809F12E07ECC59BF8A7EDE1CCACF9B
885559A7B4A91902DCF1D0AC2FA01E029574D55D7CD07C7367819474C69FA1DF
2692500C91CED62176F6F3A66FFEB5A60A080E77EE924449C4D054E30AE08401
FF1A555F58A55F644BDC88EC1927083597546A5C93F990D6E0CB1A6D20A61606
3281224619CB03CD1102ACFBB32FB5D07C03B3E94E584A1DF966DEC5C78A83B8
E0EB6C2BA94F567FFBD3BA57C1F3B9ACA7CAD2188DD45DF590DBC9044253DBBA
39A27F94722FA7E0A8E63227A1B5E91BB7AE240D052B112F9F36CFA76B34216C
D72CA70F9529AB24EC6F7CA88C7D6AF444F07AD20294C9F47BA7999B6645F1BA
7C281A0465B0594DE444FE3462ED2A710AB92298D36AA3234A882A5738F367BA
CC020F652DBC5E74C68D1C0EB05E65B77F218E95B882A1086B6063403DE03325
68DD690927089F6A599E8FD382FD> |-
/L <1C60D8A8C9B7924C32F3914C9AC7DD967504A2DBBD93D70FA437501287B7
1D7C6A16588BBB2A93FC975CE97179D1C391F490DBDF2DDF0AB30200B3DBD538
6272A396370893238DFF40366382681FA151D370AFA5DF107B36E81798F10975
063B695343D5D8D89B5647BE0E3E659D25D7AACA0C1389BC068E78EA0D95FDAB
78FF6D0867DE20B3BF4D8CDD9A042E4836F1A5EF94545052934E25A1C3B5ED48
5AC77D96A063ADF20D5B8F6DA64967AFD027BB042C5FB065012545706A930DC2
87E7E9CA774E910ACE4072A1184797C329492349> |-
/N <1C60D8A8C9B63FB73F9BD707165B7932A0704A10ED4A724E42BBF13736BF
10D398F28165DB9DAB2679ECA44066CD7C940BB16B0A368CBAD98A37138F1ED1
305A17D06D2AF19C6932504D6DC0DD9577C6C03A86CE560D178B35FFC540F589
3F28C375EF5418CBA1500BE3024394B7F86CF0E2F8CE0E5740F43A4AC63900EB
50365FCC590F34C81F7E3857A7A2A99091D2B448DCE3B5A80B4176BEE6297D8A
323638491F8F770B733D5A677AAB0002F211192A34A6E1148073599E5DA733D9
7EB7277C97A183FC75D9A9D8348A5281EF0CB6DE7475CE77512555972EC51057
4D6B027682A9BFD6EC1BBB34864145690980099FB573F4A70B5C2332132B2C9B
908ACD942440494EC42ECC59033968314310237194AC9B5E5444E32DC79FB2F6
03B9272097FEFB8A4457DCAC93EF78B1BED8126E3F18C827319B9229F93A07F7
7EAED9F82032AC606BB9B06337E1140BDB724C96FF7FC44EEAA8BCCFA0192F71
94FBEA00990A11230704A1CA234E1BA6D81A18> |-
/Q <1C60D8A8C9B611AF7F776B6DD632458484AF76C33774B82C67647001BABC
C840DD93A0843BD7B305902A794CAF8ADA77ED13C688ABE5D010793B25DDF681
EF0732BF77E3619D514A83011E11C9CF242857E9CCB76F2DE9FB4B95C40AD754
29974A72968E99C3D0EC3C49A3CC38F048921383047813763C3D116C6F816D09
63890494FEEF4BA491FFA84426AF02668F8F4D7A76912B1788BDE2D2893CDA91
00BC413090D5575208E490FC34941C25C1E8EF44EE093593294826DDC81E864C
054B6E224C1A4F07F4708DAE930EA4ADD7D6259C9A215C2D9E3767> |-
/R <1C60D8A8C9B7C2FB3B3828C8756B2240CA6BFFD426ADFDFDABA99BE3293F
A15555E6D8A025886E3907A88647286F666F7478A7D23AF1798925CCA1EBA920
D67B0B7695639FA500142490130F8A8858A2B60B7E15B00773EB006EC5BEB0EC
B78A8C8E19773DB89762FF52A284E06ABBBB29786E2D5F70A0C16F62C6F0A5FC
A660FF42B6605DB81269F8C91CEFFE169412F0AF2D2DD1EF70BD722434C4D38F
354CC393F33ABA770EA37F13EF259B175AF728B1AA56AEDDD22F66964628A6A9
FCB2371CF6650BCFD3B57EC6EA4885169BF420560893F6861CAC46953C5E9AE8
448ECA56EF3709BBBBB09758B2ED7C1E85A76CEAF96210D959370E2120D16385
15A01E13CB1ADD3537BA3A254D1BF0B9CD0E4C01B9635737AF88B886AD8B3C70
458EA122139F74C7FC0632C9D3058A8355F28F0E7DA168E13E64> |-
/S <1C60D8A8C9B7A1572701D9980035159F6D4CF9DDBCF938B5C089E94417D9
9100D323061D123DC1EECD989025726F014197CD14C60CB66373390F7FBF9431
C9FEE15BA51E5C8677C0372E2B1459F5948B4A23E0583F3A5FE33703678DA8BA
755214069BAC9351D255E8799AA9E2B66A89BF458886A89AE5098B48D8561C05
7550C7D32264AB05BEDE19B2AE8D3D4FF27B539B4C5B606A9D1F0A1A41DE0203
5060D24CA8804B909F99E28B04F6A02C1116E050148A6E3D419F67AB21A9FC54
F71E7BA9BAD43854C8088FF60B6EDF3FF387> |-
/X <1C60D8A8C9B65C11D0774D5610D9CCCA964B399FEA7AFEE95086771AA80E
048FB8E328757A415AA39473181289F2631C1B472F5287B569BB632DA98A3EC2
B6B0EED25BA3B07AA8E18EC60AC3EA6D784E81F5BB67503CAA0C01ED64469B23
CBE1EFD1D5B2BB5C8A01004CCD826A80CD4F1058F81009F2B3D850B11EAE9E12
9F9E19EBA730FC83F25273CAFBB8CFA79E3CB22D1C5A45B01CF37592D209B954
313840D80720F47A915B2E27FF1B75519F4E3C7D9F91C3CA393B15BAB2067CC8
325827C5E34BC71C7071C066203A31F0840E43D0CFE7F3BD084D5AEF6E71B75A
0A65903B33B2256428E1B4698C41DE7C37C65754216E34C4C2A74941D3E0BC14
200DFC12D9B64598F3F3467367683772080DBC908EDF52B3E1565C5E2C8B3D1E
D3A637B83367C0E03A668686B6FE8800AEBEEB1C2E4060B3574F141DD420305C
8FF9F66F8AB1D43EB3ACABE2BEFBF4857576064264FA583D548C36C3EB05E950
A2875EC1860967D3ADEBE8BA14FFAA3EC8E23C951FD17EA04AA8A01191DD2A79
E8CDFEE81A10190AF7E649F4C07771C0DEB6E8377D780226AE7288BD0D925572
C0D8078DD1393103CEC41C0238C41E8F37BBFDFDED2DACA8BB076CE9C5709320
3F18951E8C2A49E1763EB08DFC6BF90E499322538B02E1DCA70FC894FAE87CAE
C9F9EF33A3A8739BC2B3064BEDEA> |-
/c <1C60D8A8C9B76C9024D463671303D511B0443EB425EEC81DF7EF66A49656
82081226BCA7EAC51157F30D78E0B3D2B7AE4A754A9A94260F129FEEF44D7EEC
87B666112C8837AE5F93E1EDF06E6ABE481CA22F937381C5B0A3949A568B29C0
91F5D934CD3261A3791FCBF0A987FF892EF37F25F1A78CAD979943FF01E7552E
E06FC957C6A9> |-
/o <1C60D8A8C9B7AD0A4D09E882D01613134C9539D53DEDADDB629491A1478A
7627B559870B462445C565CE5018A8BD131A3EEEB83B01CF3DF0DD14CCAF21DE
BD2469A444AC7B5477554D449F5617E8D8F0D01AE8DAF28A3CD06E6499F693CA
789F3935498234A48FA25DFB8CC9BA> |-
/s <1C60D8A8C9B70B6BCC9431B6909B572540082CCF7D49B99BA9CD2ABE47FE
CC753F6BD0A3DCD07A6FB0924C089B429ED9620A1E3E38C3D1C8F05BCCEAA98D
DB96785A860C791D41CAD661CC8FD347C0BC9C91A88D064D980049D318373601
EEA44CEC1163D63971B7DE394F8C7E2A432C0F31A78EFE7E31AB396F3C996EFD
E0235692E5D79D350D43611B6C2E40AD7DFD991AE7638450305696A0A1804EEA
83C7E2B7B9A70C68BEF53C5B1B2188F61F7985A06D75> |-
/.notdef <1C60D8A8C9B79B8EEA16748A96B33FDE99285B2FD7BB48ECBF56EA
A30D54E2E34809800E8B5D758E868689FA9C796793E4F771F14A166B320DF266
5411888518130B7591562369E22637229DA43BBB7A5AA1C4874A9F5A05BD6A36
D0023B39> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVL+LinLibertineI7 /IAAAAA+LinLibertineI7 findfont ct_VMDictPut
/QOZGVL+LinLibertineI7*1 
[65{/.notdef}rp /A /.notdef /C /.notdef /E 6{/.notdef}rp /L 
/.notdef /N 2{/.notdef}rp /Q /R /S 4{/.notdef}rp /X 
10{/.notdef}rp /c 11{/.notdef}rp /o 3{/.notdef}rp /s 140{/.notdef}rp]
QOZGVL+LinLibertineI7 nf
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
14.183 23.094 mo
(NA)
[6.35664 0 ]xsh
%ADOBeginSubsetFont: JAAAAA+rtxmi7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JAAAAA+rtxmi7 def
/FontInfo 7 dict dup begin
/Notice (Version 3.1, GPL) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
def
/FontBBox {-133 -214 965 762} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-13 -11] def
/OtherBlues [-208 -206] def
/BlueScale 0.363636 def
/StdHW [38.9689] def
/StdVW [85.6749] def
/StemSnapH [28.5179 38.9689] def
/StemSnapV [73.2849 85.6749] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/comma <1C60D8A8C9B8574414FD81F047690157BB7F90CE31A097D6154124EA
8C347CB4D30B190E734FF8BDCF16ACF282BB1C68C225C6C5765ACDC2512FA400
1DB1628C24E71BCD51FE420B7EACC25B> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVM+rtxmi7 /JAAAAA+rtxmi7 findfont ct_VMDictPut
/QOZGVM+rtxmi7*1 
[59{/.notdef}rp /comma 196{/.notdef}rp]
QOZGVM+rtxmi7 nf
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
25.325 23.094 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
27.922 23.094 mo
(sco)
[3.45463 3.68014 0 ]xsh
%ADOBeginSubsetFont: KAAAAA+Inconsolatazi4-Regular Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /KAAAAA+Inconsolatazi4-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 2006-2012, Raph Levien \\050firstname.lastname@gmail.com\\051, Copyright \\050c\\051 2011-2012, Cyreal \\050cyreal.org\\051, Copyright \\050c\\051 2013--2016 Michael Sharpe \\050msharpe@ucsd.edu\\051.\\012Licensed under SIL font license.\\012) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 59 /semicolon put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
def
/FontBBox {0 -177 509 835} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 457 467 623 630 665 669] def
/OtherBlues [-172 -167] def
/StdHW [66] def
/StdVW [72] def
/StemSnapH [57 66 250] def
/StemSnapV [53 54 60 69 72 84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
22 dict dup begin
/period <1C60D8A8C9B7A73DCEE398AA7F0648451CE3ECFC1CA38EB1F9E88CB
72266C8A58701006181CEB0CF5843E64284872BB745DD826E22003D99AAFB9D4
813C1A7A024853F1426653ADE065B3FB14E72DD> |-
/semicolon <1C60D8A8C9B7A73DB5CB46241B2A696E6DE5717345E362A21857
24694AEAC3855D1F647197854E08831896C47AA8AACE8A4EFDA4184DD17A7660
A9303A6310CF6D6BDED19CA124BF1F0E6E9D21051C5F111AF12CD461B3B3C9F4
C8CFBAB8AC5402D43E710C195E2F8A155B431732BFE88B2C61CAF1306F540B25
674104A34C6F5D02EE2C731CF7D9752CBE9C7959963141D6F2872724EE295A20
D63A4EEDBA0DD9A65B45D10295D21F6E0037A2229B5EC708C1792BD1D81B1414
290F9101E37184D9821042C053FB7E0DD7AE70DA0A7FC4808FD51C75C7> |-
/underscore <1C60D8A8C9B7A73D7599449CA2D00C9975E0B3D0A7061B> |-
/a <1C60D8A8C9B7A73DEE9439F6C00E781DA1FC15963C61B61B412E941CE460
F5997058862A9E9D1023BA29A9E08F1552C6AE345EBC918F38592ABF31CFB78A
4C7CDE9614A7956C0E4E0550CC39503F05AB970A9CB09017704458D449C83995
DB940061A40FF525E38A0130F357088FF592B37F55E960CA892B5EB40E0D1401
86206348659867F8A93DBBAE2B890279213CBA39E0001D702C46287B90B63D87
BD13DE16687A5F841A8B5FFA99F4517C49F14752BDB85DD2456DE8BCC14F8CFD
25DE2F21EE6CE112BB8B3103ECDBBD8EA4E156D4679607F4F3C7E66B21B52D5A
EA67DE4045FF67DAB7F96176462B2F3150CE1C18867181E056AC59253560A3D0
693A2FE97909F35376555176845920D53C1F9058204381EC75DE05EF6762483E
3AF6779080> |-
/c <1C60D8A8C9B7A73DCED8C1E01BBCBD0EF580969E715C8891EA80F1CF351E
EC4086CCD76D61327FF43E11334F278C6E5E21FD1E6A253E2A824CED50CD4BFE
BAECCEF0FB89C66C4426BAF77EB908B61A80E2B4C1EE3581AE19607F9ED4373B
28E477E9271D6C89B50CBEE33848CD8178487ADD3E60849D8E32BACEF039639A
F32924A38050123A4558EE80666FBBE9C6C0DB8B1549347F150FDF66FD6164A1
C33BD82657A4BCC311B35EC70DD7A73B2EF9F5D659EF6486A4582A54FE49A77B
9512A742258EE912BC9665DB7A> |-
/d <1C60D8A8C9B7A73DCF293F0CF8278C63B50DDAEDD731200D3946A3932B26
9D7468F3F7AC60D3A572D66C90C84C880E7775026DB81E10D1FF27FE4DF83DC7
924ED16A00D29FD4CD063A017500CB5DC7BB356EF296EF6409416F534B42A990
7BA4FD221F5630B5250B704ADD2BA68644719364B515B67E5D7A9C350B2043CC
B0DEFD8EE396E6687989FA184967B89836C194C157DC264D710F49AC5C4EFD66
B8D9CFCE5A3ECA261FA964A4639D7399F62DB49CF7F8F634FB79028D06651091
0CDD1FDBC0FC61FEF52C5862E43D45373953F344AF1CBBBE1DFC65A227BA3D79
DF821568A5515B44BCFD6D2C3C8296228EA690EF3EB42CAE8F205275C5A60376
3C84C48A641483D4BF0311C48B0ACDA4A648A978B59D3588B560FCF1BF172EB4
22F7B4AD5C806BBF4969819F152E4F3DFCC16F647D9FA85A69F9BF3E094B783C
4FF056E28896BB47AE7CE62A295605D0F0A8F05176BC93119D92FB11F9592DFD
A3737A> |-
/e <1C60D8A8C9B7A73DCF26D25AC1318F550C047E9584274598AF1F5CE9E4EA
FF2BB3EDDD615BC6F193E529585C7643AF2FF7DBB7104BA971381C03D4343F5E
A7B1788520BEE3A8282A6FAA04ACA0A8A46526D95920464653295B42F91A710A
BE82D8EBA465C50017D230ECDE66CB387B4A8D8D988492961F044978511EFA7C
0C17A2C09E060EE87769B8EBFDBE0177FAFD07D74D2CA19C0A9B1C303936C8D8
3891829A20F8B03B6CEF7C191D0C506587B4FB49028A8B8F81E599EC5382547E
4DB2CAF6A282CDAB10AE352FCF8B66510F8C54606CB0AA25C43B5B036CFA0EC1
39A20C35C82B4B26458D8E1A7927> |-
/f <1C60D8A8C9B7A73DEE9439F91C9A29C44E4DEBD6BE59359C70557DF866E8
5900139F344CE6DDB02B79134D3AC895A6DBA4DF8A5B32ACE7F6B445D29E4378
F3EE2A138D23D9CC030BF2BB6E06A82E6269A49B08853AC2F43372C6C79FEAAC
1A80CF488F73C5FBE33A20C66557F371DAFA73BA7A358B57D69EF95180E1B34E
50F4584950710D15ACCBC8F1BC632D123BBB4D9E61F8> |-
/i <1C60D8A8C9B7A73DC516E5024DD63E2982C97912C253C3717869071B82A1
975BCEF5D6F05AF2F5C598A6479EDC1AE8DA2E94829D605C4E742BC5B29B91D6
A237AB1A233B293B1849B80660F4B5D8CEB96827E6C50BD752C13E9F94ADF599
DFB5C6DD56CFC544CD4A92CAA93D17ABAA8761A8F6A308ED8750EF9111E215D6
C95C9381> |-
/k <1C60D8A8C9B7A73DD234ED6356BC9F13D28513414A3F8F940D1516BB37A3
737A0063C2E540899EB5B3C13ACDC734B4990165888E3565F0218B008B5E6796
B4E5745C0707F62D51B32524F9711F9678067006531E6FDCA7AAA33E98C9C0FF
A42F7485C9B7020431DB3E5DA61D49DDFDD6DB308A67FB28C939> |-
/l <1C60D8A8C9B7A73DC516E5029D50721295C68F9BB29C80C3AC8D7E812BD8
A7D221AC3AC35938770475EC6666B8BB06762B> |-
/m <1C60D8A8C9B7A73DFF5A436E799D0242FF40F28E820C0EDB53EEFB4136EC
576D06BE7A9CF23E576AEF74CC630D8C4A4C2ADD0FC8AE6D9F8C274A4E6FDFFA
020DC8E0830B4F99BC3BB97A8DEC79A09B1508B6B44F4D011E0A2C751AB8AF5B
7ADD4275316B33241BA09608FA4183323AFB2F3A30ACACBDCD20E161917462FA
64DBD6F8BA68B7AAAA93550006BBE9A174532484BC50A1378E720F58D6D93766
7DACBA84474ACD38B5C09D455D272B736E7ED641015BE4A6FFE325EF0A663ACC
412990282B9727FF49821FDCF74449869F25DB6C3368CC> |-
/n <1C60D8A8C9B7A73DEE9439F93CE1B4741729B3FF44919651960C00D54E4D
1A05BAC7B15E5E008C3144F957A9ED4252D8F884FBE1CC0FEFB411CD106CE5CD
213B60924A72E47EE321FFB826A3C965D5492BDC5F35D6219C3B21C1638FDA9A
1AF74EEC343A8CD8E09D29D2921FF9B0568C9D721394BE92EED7F1F84D617B89
8C229161C8C70BC71E7ABFF0A1EC0F9E2F> |-
/o <1C60D8A8C9B7A73D31B5D4EB662D61BB3383CE053640678919CA4970A79A
DB5ED1B969EBDFE39BE1316ABAEDB8CD4A27E9DF848C4104DEE9868B3FB38032
3761EED64FC31A5CE4AF1F1175170496A2DF937F9AA58DCA7F23761CA8DDE592
F72CED9A3D90E612A37BC5F2C6AA0813B415F702A48B0B8A2837A2C61C611B43
F8497FA482DDF2D536B6256654B1BFAEB40BBAC2D075CC2D4A6BF714F1466485
3D213765086122E37ACB0134CA9379BFD39144ACA143BDC2E65FE038907B48E8
443D9544672A2C353CC78A16AD04CFA0D817FFA051DE9AFBEE3EEA57A4BD5440
33081068D508547574BBBFB019769B4DCAF7171B815A5D0123E1DC4B20F31E84
72A4935F68> |-
/q <1C60D8A8C9B7A73DB5CA143826BDEC322D77A4147008D5F0EF53D3235A21
373E6436DA7D2687BC795F1E93B6EF7E2E9F958F99F44B593FFC9E5E76F2F469
8C6273177A81213C53B84B4B347B7BF9ED3D71B2FCA6173F61E4AF91E1F9FBAD
7687CA95541682437D6EEBF187B46C4B7CCEABF497618C0D68DC9FC6522AE2BE
BB712C11161041FA5181E8E1B0A2439D23E75361051B19687AF16AF0D89B7809
E0B93BDFDD5527A5D3A0D8F4A558F7C423C5C79AAE669F694D0185064D7F8132
F1241B8313955570481F9D3CDAED824CD71BB450339B6EB5F3E1180B0F7CF137
5686DF7F5666975B9CDA5D57D7DB6462C68E31F5B09BE9963BAC78CEF4CD18A3
31C0> |-
/r <1C60D8A8C9B7A73DD1F6C11F71D71D9DB2F46F432002D709DBDD14940319
9A8DBE03B224DE8AA15DC8EA25B58BDB244428C90AD17FA547565A674DFD7939
DFEA9929C6C626ADA3B771CA303BB34934B7719D799C7E31657CB604300F1EC2
9D5838D9F9843DD3E0B059FBD948F4831296864D45217B4CD7E87B538C8A0DE4
485F95A2D87F71CF903E054E6D> |-
/s <1C60D8A8C9B7A73DCF243784A753C1A3B13286D314CA1EFAED5A0F4AEEB8
52DF3D9A20E1D9953271FE0F69DCB9CD3D5BD606B87544C1139EDF9B77ACB122
74EFCC1EB67BACD072B26977817DBED37B633C245005D0151D5A2F61D9ED1443
BE0DD30C35FC2FB61E60FC3B699053BB292EC709C5781E4BD0A4F3B69B218A29
578407A12F4E2AC3C81B94D264598B12A2ED3A1BA2248262EFC774627681B110
7DE3993287729C6AAC66DBCF765670986C75DA1F3F5D05DC0AB80EC9F0C206DC
E11B837673B9F73628A795534A189AD83017F84BE30F7EF946CF72A10B4949F8
E07912583DB1AD2B4FF0BC3CEC635510A85E0D7F4BF0EEF8AAAB57913D999629
966209EDCA8EB326FD7107BF6159A4000A7B4A15AABC75FF5029FBAF3CBA856F
6B3B463549C223BE55EBE71278883BB72C7EA893206D3AA19C3CE2906712DB2D
60> |-
/t <1C60D8A8C9B7A73DCCB620B2D260D5007CB68463D07DD9F061B36755D270
2AB43F2019A8B40F508FDC6EB727C80C290B0B09909EBD314CC64DD29B10BE4D
58BBB739A8640074A9DA349966CC7FA3C27DEA3F9BF1CC623571F39C30CFB24A
3A83EB09BE06F1E0B8F17CB09B707CA772A4102B81606206F783350B190232BF
63D7B999B9211CE7EA06EA4415C1462852> |-
/u <1C60D8A8C9B7A73DCED11ACE160A8FFB5A5E53C1733F57F4446A45A3A1EB
542396C162B7034BEFF55FC6D70838A9AFD13105F0D59147B32DEB82D5D57FC1
575980B880486A8445D1C0BA214B6D20DF4B42612CD74705C604B085B9F3E09D
EAA31E61106141E9EAA711608BE15BAD6F01C01AB6374CBB6A21EE3158632CC0
7D46AB677998518507843CAF0BAF132EE8F017B4AE1E4E437D633B5C27770876
BC3BD3B9586062FCE45F0A4D96FD5EFAE79612C650CBC6FD115A069DE0022FAA
4F0EF496DEA61E3780> |-
/w <1C60D8A8C9B7A73DD1F6C11F71D71D8BD08335677595DBFEF17D64E285FB
B7B1E8AB668D9805F574AAB9DB5FCB7C515C63B930880D1B7F6DA12DE6564FC9
90519180EB37C60704A758C35E4562FC19C0AFC37A2F30B53575E46DD513EECD
2721DB2C64E1DFDD682B8C94BB25975093ADC14236BEE3697E601478F857> |-
/x <1C60D8A8C9B7A73DEE9439F948AFA0F0152F93083C34AD047C37B0CFB16C
35E1354F1BDBDCEBFF80E3013350C7B5B2BA9BDC8218C47B78239A5416C71110
2BE89C6A5D85E4E9225BC3520F06F764A90D35550317C46F9FB97422F1A4D46C
9B7F1E25FBD592D64D1B8079F4> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVN+Inconsolatazi4-Regular /KAAAAA+Inconsolatazi4-Regular findfont ct_VMDictPut
/QOZGVN+Inconsolatazi4-Regular*1 
[46{/.notdef}rp /period 12{/.notdef}rp /semicolon 35{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f 2{/.notdef}rp /i /.notdef 
/k /l /m /n /o /.notdef /q /r 
/s /t /u /.notdef /w /x 135{/.notdef}rp]
QOZGVN+Inconsolatazi4-Regular nf
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 26.349 mo
(ld.weak)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 37.64 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
14.002 34.385 mo
(RLX)
[4.9529 4.27648 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
28.874 34.385 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
31.471 34.385 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 37.64 mo
(ld.relaxed.)sh
%ADOBeginSubsetFont: LAAAAA+LinLibertineTI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /LAAAAA+LinLibertineTI def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL \\\(General Public License\\\) with font-exception and OFL \\\(Open Font License\\\).
Created with FontForge \\\(http://fontforge.sf.net\\\)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 60 /less put
dup 62 /greater put
dup 99 /c put
dup 111 /o put
dup 115 /s put
def
/FontBBox {-634 -312 6171 893} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 429 442 460 474 567 578 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 567 578 645 658 688 698] def
/FamilyOtherBlues [-235 -227] def
/BlueScale 0.0366666 def
/BlueShift 6 def
/StdHW [39] def
/StdVW [76] def
/StemSnapH [39] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/less <1C60D8A8C9B7544E04FD63B89D50F8A37FC6E2C1E0346A76280FDB916
881B7C6037D84F32A6CC0> |-
/greater <1C60D8A8C9B7544E0B41C299AFD326A6C6D0C1B510A1CDECA3AFAE
D2E99B3029953AA7B0258B40> |-
/c <1C60D8A8C9B7361F74580CAA04A2FDB03976390908A21FA6A6CC79A37FD9
6C0A8CCA8FD58ADA2F32ED9B12991C17885EA0DFC87DB992233A46BBC8327E1D
828EA639C31BE27E98A9E0CCEC8F607DEF2A9D86F51221A20CA70751A5EB58E2
55276B497D898AE2E2AD33194DF9A9261DE65FC852400C72501B4DBB3AF8B36A
E442E7FDDE3B> |-
/o <1C60D8A8C9B77C8927A08D182562EE1D29F6404BED874DC716E1583F19FB
41A06DD983FEACFA9D859AFF33BAB4876DB81174B9979F885A27D346B382BE0A
63AC8AE1E62D3AC6BCCBA7CF084E96AFED144AD5F3FD3B198DB8EF2CA57A160E
332506AD3C1AB64B54B6702E93D4> |-
/s <1C60D8A8C9B80B0D3FFFEBEB7DF16C125E29A1E43B934D90363C0383FFDC
05AF8C9C85CD829996A90A637886329C1206B1533715AFD2E8D1FDE7A0FA98C1
3899C6A3DE8EAC9CFC1C89F7C49AF5CF3E98721C893136AA38FB643FCEF351F1
CD2A0C1A7C0A7A2751B3EB3734F075BAB7E30C78D2971443FA69C2DC94952E99
E9DE8DF211C3555342C87EBD6650A675F28952F5B3404BE4BEC6D6E2316141A3
1C969E5F> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4ADDDDDB8A4E
47F3F2F1CAAE4F43122CFEE2884275C84424026449C27071D4FDF833FCFC37BD
EAA9A891DE737DA59C1E8008FB0FD905E36128E58DBE941690CD39B139ADD52F
6B4B0641> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVO+LinLibertineTI /LAAAAA+LinLibertineTI findfont ct_VMDictPut
/QOZGVO+LinLibertineTI*1 
[60{/.notdef}rp /less /.notdef /greater 36{/.notdef}rp /c 11{/.notdef}rp /o 
3{/.notdef}rp /s 140{/.notdef}rp]
QOZGVO+LinLibertineTI nf
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
127.709 37.64 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 48.932 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.929 45.677 mo
(ACQ)
[4.93111 5.44753 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
29.994 45.677 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
32.591 45.677 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 48.932 mo
(ld.acquire.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
127.709 48.932 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 60.223 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.929 56.969 mo
(SC)
[4.18922 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
23.274 56.969 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
25.871 56.969 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 60.223 mo
(fence.sc.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
118.743 60.223 mo
(<sco>)sh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
138.137 60.223 mo
(;ld.acquire.)
[8.966 4.483 4.483 4.48299 4.483 4.483 4.483 4.483 4.483 4.48299 4.483 0 
]xsh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
196.416 60.223 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 82.474 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
17.447 79.219 mo
(NA)
[6.35664 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
28.589 79.219 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
31.185 79.219 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 82.474 mo
(st.weak)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 93.765 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
17.265 90.511 mo
(RLX)
[4.9529 4.27648 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
32.138 90.511 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
34.734 90.511 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 93.765 mo
(st.relaxed)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
123.226 93.765 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 105.057 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
17.265 101.802 mo
(REL)
[4.98927 4.77104 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
30.938 101.802 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
33.534 101.802 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 105.057 mo
(st.release.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
127.709 105.057 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 116.349 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
17.193 113.094 mo
(SC)
[4.18922 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
26.538 113.094 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
29.134 113.094 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 116.349 mo
(fence.sc.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
118.743 116.349 mo
(<sco>)sh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
138.137 116.349 mo
(;st.release.)
[8.966 4.483 4.483 4.48299 4.483 4.483 4.483 4.483 4.483 4.48299 4.483 0 
]xsh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
196.416 116.349 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 138.599 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
30.051 135.344 mo
(RLX)
[4.9529 4.27648 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
44.924 135.344 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
47.52 135.344 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 138.599 mo
(atom.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
100.811 138.599 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 149.891 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
29.979 146.636 mo
(ACQ)
[4.93111 5.44753 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
46.044 146.636 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
48.64 146.636 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 149.891 mo
(atom.acquire.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
136.675 149.891 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 161.182 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
30.051 157.927 mo
(REL)
[4.98927 4.77104 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
43.724 157.927 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
46.32 157.927 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 161.182 mo
(atom.release.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
136.675 161.182 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 172.474 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
29.979 169.219 mo
(ACQREL)
[4.93111 5.44753 6.12383 4.98927 4.77105 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
60.153 169.219 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
62.749 169.219 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 172.474 mo
(atom.acq_rel.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
136.675 172.474 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 183.765 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
29.979 180.511 mo
(SC)
[4.18922 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
39.324 180.511 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
41.92 180.511 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 183.765 mo
(fence.sc.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
118.743 183.765 mo
(<sco>)sh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
138.137 183.765 mo
(;atom.acq_rel.)
[8.966 4.483 4.483 4.48299 4.483 4.483 4.483 4.483 4.483 4.48299 4.483 4.483 
4.483 0 ]xsh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
205.382 183.765 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 206.016 mo
(F)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.014 202.761 mo
(ACQ)
[4.93111 5.44753 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
29.08 202.761 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
31.676 202.761 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 206.016 mo
(fence.acquire.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
141.158 206.016 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 217.307 mo
(F)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.087 214.053 mo
(REL)
[4.98927 4.77104 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
26.76 214.053 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
29.356 214.053 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 217.307 mo
(fence.release.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
141.158 217.307 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 228.599 mo
(F)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.014 225.344 mo
(ACQREL)
[4.93111 5.44753 6.12383 4.98927 4.77104 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
43.189 225.344 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
45.785 225.344 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 228.599 mo
(fence.acq_rel.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
141.158 228.599 mo
(<sco>)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
8.702 239.891 mo
(F)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
13.014 236.636 mo
(SC)
[4.18922 0 ]xsh
QOZGVM+rtxmi7*1 [7.273 0 0 -7.273 0 0 ]msf
22.36 236.636 mo
(;)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
24.956 236.636 mo
(sco)
[3.45463 3.68014 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [8.966 0 0 -8.966 0 0 ]msf
78.396 239.891 mo
(fence.sc.)sh
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
118.743 239.891 mo
(<sco>)sh
3.32199 3.79895 mo
232.403 3.79895 li
@
3.521 246.366 mo
3.521 3.79901 li
@
232.203 246.366 mo
232.203 3.79901 li
@
3.32199 246.366 mo
232.403 246.366 li
@
%ADOBeginSubsetFont: MAAAAA+LinLibertineTB Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MAAAAA+LinLibertineTB def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,\\012Open Font under Terms of following Free Software Licenses:\\012GPL \\050General Public License\\051 with font-exception and OFL \\050Open Font License\\051.\\012Created with FontForge \\050http://fontforge.sf.net\\051\\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 70 /F put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 114 /r put
dup 117 /u put
def
/FontBBox {-1082 -328 6171 1014} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 433 447 460 474 600 610 645 662 690 698] def
/OtherBlues [-238 -212] def
/BlueScale 0.0380768 def
/BlueShift 6 def
/StdHW [40] def
/StdVW [130] def
/StemSnapH [40] def
/StemSnapV [130 140] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/period <1C60D8A8C9B87645F1F676016340247831DFFA59052F7DDA1BC781C
7CAE164BFA7BC43F1DACE51C8C7> |-
/one <1C60D8A8C9B7B9B9AF88E3717D6280D143E98D941BD042EE4A9C33AEFA
E51EA40B55C285508B8C1156FF89334CD1F450D910ABB0A25E852E0CD60B7704
8C82A884CFAA3D4AFB801A54C7C6FB39648FDD6A4CE63D46C0793732F0CDE2FF
043DA43234011B9F6182A49259BCAE70F87DEBA154BFF8787A2B8BC30C387A0E
E4BB4362FBBDCAF1E5288EF465BB2676EBF7F9B76A68AF11FD> |-
/F <1C60D8A8C9B79AB82C22FE0E6BFDE806C98076C12E82B7FDC87D763E87E8
F7F6B9520B6EDA8F6949C8D5F8EE8F32D17A9F916C2037CDE95BC2E78B0A0F2A
3C4485D1C0EF45DD40BFC5280220D593A4C068C080A5F7B61F9BA11185B0CF5C
80049408C84162DD481950A4127B28659C2DC59117692B1F71866E94FB52D79E
56F3996971890874391DE133F3DABBEBD2AEB14E281DD406CEC2ADE76687B2E5
7DB6C9F84A0D00B5DDC0AE0D71F065A0FD5A7606F2BE02188A7A31A377D7F56F
C49092142060EDAA2E3CD9747B9A7BBDF80B47F0F51760DDF4EBC0F7A84C0216
F62F2FFB1C78DC4551381B2DF0D4272C16697A54F4FBC3A03445EC21A1B05E92
1EEEE1F9A4B5B30F744EE9C5E6AECCD19789A02E6DEAE6> |-
/e <1C60D8A8C9B752AB3DBBCCC311DDF8FAE54E4C835B484EB2FA791E781C62
9FD2C14916FA1485D2FE74D83B70B91CF7A787211081A1D6231ECC0C771178DE
D4692BC3C2DA2CF6A91F274C0E384BE24FF305E38EB267C3E944F1ED852161B0
3FBC42E7CCDACC7ABF3C0B3CD85EE589492970A945085EE294D29B390833B2F6
4D89580F080681> |-
/g <1C60D8A8C9B7B202A65BF9B14401C583DB2CF5D03F4A29A34CACF1F3BCD0
DCD9596A96D021D6328AB0E4B8348B550798A9381EEDCC4F321720A0E229337B
195FB718220D2560DBB495A16337D204AC8105745F822DECD815E210166AA92A
E704BD704234E4CB128983445981947893E1157A3F26F7958D4EB7103F98C506
6CAF404ED9A828173663CCF34F6C7B219AEBB7EC9ED91AA8DAADA64FF4C6C3CD
E439C93E1FE5F43BEDC64E7276F104F2C104699696EEBDCC34B2512D356CD02D
A0771FA74FCB6ABF3AD4B7C7D25400F8DBC22305D3FBA5D5685719841C7607AD
578260C0C77C045DFAEC65C426B04F9376F97E7CAB5D1C8CFC9BAAD08CA2BCD2
A6EC724E79E99A337EB665E07D41636EB9C00C978AD910353633B349B8AFDD22
26632DB590CCE236A2F9CAE0C07C9744CCA5E1AA5775B3797755B329FD214B84
9FB8C112CAC891EA3508E51A454F7D28D4F5BC746E5F592D6EABBA87E309EA63
C4717CDCD8BEE80F72D4936991902DC6EFF1BEAA9CFE9AE70D76C6859B926CBE
739FCA4FB319F09E22F149E38575FA> |-
/i <1C60D8A8C9B8286EFAD2D0AD1F5BF9A4B512228E42EFA6E2672C7AD2CC6B
9D16997FD19358A8E83FD67FA8811E54FF8CE56B803513A981BCD61A5A50625E
4364A3705A4A71DB279A2DDC70753BAC938FBA1635FFF5CEC111F99F7B446C70
7F511B884C9413673C020D6911678135A3880EA0931D34E23D99523B4FB5682A
0FF97243ECFC8760C714F7FA4D69654CA7C783F72707950DA94D09168836BF95
A062ECAF03FE67DF81> |-
/r <1C60D8A8C9B76F05D6D4476CFE9FDDE2C0B546616BABE4804F7BFFFF8C1B
B0BDB699481A5471D82F4B81EA100996EA140DA851CB08C572C5A6B5EAA676D5
1C6C497F3D5D9759ED0BA17603685D82232E26261863204354159111953BFA7B
996A7C525680DFC0D9B694CBBBECA61E80713C6022FDBEBB519CCF519ECE485A
7EC3ECED6ABE1D6EAFC84487CAE545214FFE70BB1A36B52F6D85A51269156525
B70C2995A1623D05176A2C58A6E10900E6C587832DCA7BE4DAE371CF9EB3666F
20B648> |-
/u <1C60D8A8C9B7C56CCD69AFC81B1B0248070EEC0CD08B65625E27C4FE6F5E
B3B49EC4C61EE6E0132F50841F6C8F6A2E744A905059A143C44CFB4729A68E98
061CC3DB4C37D2426C12BE24343398901F18CC4F57B6C129D0DEDDA6527CE0E4
11F2EB0FE2DDDB66195FB846D3B93E3C8CF701AC3E24C86E723932DFDEEEF29B
9C838D6785F85630EBD980458AC9594408EEC0B473804EC16B406C64F72D9865
0C1A4104551BCF028697D6253461BC67C6E0257508BBD1478613323338771DD6
3C4C82427E2CD42941D0960D77F074B8F2582A92AB9E4B4D3B338E66186EF49F
89E47F3A3226B98325B24D0C4D21569C20276AD5A2F1A58EB80499195B6762E5
B9D56F1A705D27EFDE0B08204225431A9A21DC5C2ECB6357ECA95DD0> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4ADDDDDB8A4E
47F3F2F1CAAE4F43122CFEE2884275C84424026449C27071D4FDF833FCFC37BD
EAA9A891DE737DA59C1E8008FB0FD905E36128E58DBE941690CD39B139ADD52F
6B4B0641> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVP+LinLibertineTB /MAAAAA+LinLibertineTB findfont ct_VMDictPut
/QOZGVP+LinLibertineTB*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one 20{/.notdef}rp /F 30{/.notdef}rp /e 
/.notdef /g /.notdef /i 8{/.notdef}rp /r 2{/.notdef}rp /u 
138{/.notdef}rp]
QOZGVP+LinLibertineTB nf
QOZGVP+LinLibertineTB*1 [9.963 0 0 -9.963 0 0 ]msf
26.102 266.889 mo
(Figur)sh
50.073 266.889 mo
(e11.)
[7.36264 5.12106 5.12106 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f_i <1C60D8A8C9B7EB081C198E88F0A076F2E5698C7C7FC508F55E8DBB2257
90A87986092D399DE03899AF442E199FEAB2659E408FEBD1DD77CE4F55E5B459
D412815F66F3A89CB1B0E904EE55249E9D0D258F821EC9D157F20100883F01B8
9615D7B207F8B0B1BE442C494995CE6D21F8FFAFA7269CEC47877284C65DE1BD
3FD2C183FF5B220B7002D1F155FB5ED4C93C76171611B302255E9CC78A6AE13B
7588D1D34675AFD45F926EB869D972FFE1FA99A19859484AF7C66A7E5C67FCC3
670100FA40EF156DA906C2F558A73C71860B8909D40F7C392B232559526679D9
5BCC2DC83ACB04F5F70F4732FA6055241550354ACB3BD13E8E65F0E8EABBFF18
114AA6CB625887896525C4E3F7A5E080D3867632B5E9C21DE615E7997FC75650
8D3350733A6F5B213DC1310275B63B0AD7CB20869FC3CAD3ACE464> |-
/parenleft <1C60D8A8C9B840B092FC871B88A234C41DA92A7D3E083F757361
9151CC8E762E5BAEEDE313B3459CE6A24EA9E3E5BC840033D161B297DF18867C
EC5F7832AE09D53DA393F24FE6> |-
/parenright <1C60D8A8C9B840B0D2812EE6ED6921A1DCBEBB34CE19A30039E
D3F4E09480A826B2060A59DA8C58B7FAF5999189EDB85570A163278E717A4606
B1F1A288D9229821269D0CEA21D2B5B> |-
/plus <1C60D8A8C9B795A0B1527D9EF3CCDF6A315593F9457AFC0C49B0234A5
A6DC38DB6F1FD70EE820759C2FAB4259A38A04595F288154FC9A0AA7903CC16A
F7DF55F8DD3CEBEC161DE2F62A35A772E4FB645819338619A4827E3B85892> |-
/comma <1C60D8A8C9B88EAF98C7420007358A92F2F02EA92D80F1DA0483CA45
A39F4EE3241A8BB3972915982E5473AF63A3E6792B06352AD0D7C554A09AC37D
485E5E467BCE921D6A> |-
/hyphen <1C60D8A8C9B81871CFA59A6C56D136998A2FD851148F2D9DBBDB0E9
C4A14C2B51BA48015C6BD200B431E6D50B2E1> |-
/period <1C60D8A8C9B88EAFE27C08487AEF355FD43805358408451289FA7DA
B5EF7FEF47EF8A9B1F5AE56> |-
/slash <1C60D8A8C9B8293C45BA998C6DFD9E57CDC99AADA82B5C4C0DC8F0C5
67F8FB37> |-
/zero <1C60D8A8C9B74A3E856A1813A481F12D1C7EB9DFCE179CE4B60BC17B3
F37A085081604CDD43E82ECB6A618315A1665BD6739FBDFFDAEDFB622F9FEB24
009C15929C30E5DE9FB3AAA8A088E5B9B86285BE6D3F024DEEB73E91F81C4E79
AA5BF641016CEEAC91B25B67EB61F2561BA987727C87A4DD2> |-
/two <1C60D8A8C9B74A3E8F18031D37013B923DFE4448136B91669488614029
1CE45DFC8E64AF93DF9CD83491D29F834F53C85EAEE8B45445DB0B2C57D39303
12DBEC9A52B24DA3D8D3263D4BA09EDFCE91E713AB1FED29795CD43C44882006
9E5C6F4CF3ACB7A9C373E404B1BEC4CF971748147C780D9300CD56631D1A2121
22B102414A07153E7BD4BE22D9754011BC62C5C60B1E50F8B0E3B1EE484F4FCD
4A3AD381B2094CE219BFF9D6B49BB76FE41BF23FC52B1275850E7E3E27B0DD19> |-
/six <1C60D8A8C9B74A3E8458FAF875E7E40A01840F552188C7EE2CF835DC38
83CFB7B35F982DDF0495C63F30F7CB64C682E50A6DDC7B01FEC0719DEEC7985F
E25798D38CA61B4F22A6FDC66573EF27DC8E3E2E57D46B2C291D1B21463CD03A
FDAF8DB3CD983D25184DDD19B0160939EF234D989DBFA5CEFAF6F1D78E7AA1> |-
/colon <1C60D8A8C9B87EB6FFACF2F24A0CBF0AF39F6E4442B655AC6E754704
3158E58DADB04C16E794F3FC0C4C6730755AA183348A53941053A7E38DF4D4AC
2DEFDC2594BA70B1> |-
/A <1C60D8A8C9B62AC6AD5BB614E98CC0B2EBFD2AA4CC8AC02AA3E43F64875C
93A6048ABC96306262DAAF491BD2A57DABACCA65F6A7ECB1B6249C0C8E0620D5
94CBD49F72E440C35FA1986C16AA33342790BB75D47A8CF8E13BB5BA0AD3E130
D83AFA65DFBD4871EFF12AE5D866938A242C4981A66D8355F65619AB9FD13A84
C7CE897886257BC8020F30762B20B7AE2533CCCF2714D0BB95A0B6BE679AED0C
C75316A76FFE95FB8791C7EAD415D664CE9F687178E244211561956992AF9B1D
CA93261A9E6DCBB3C798A3528D511ED80C648065C9EB3CF2EC549CBB2E9A64> |-
/F <1C60D8A8C9B756EDD472A6CDE264A9BD76202DF2745FD9B4CC9EF89CDA9A
6861A179C6DF61FDCB7106A2CE6431E542F30A8705D72767EADCF38BED00C295
F28E6F4E7CDB5FDBCA6444A4752AFB4C09E5AF17BE4A5B8D52915EF7F75005F1
05C396F8567882309C05BDFF26350B13E4317D60EA18A81B7BE117914445CFC9
3D482555960ACAF9D6FF6D4FDA563970542C3A043A9772EC908B1A6739D3E88F
2576C2F7622946CF16ADECA19092502A741F3BAEC514E97D032A2BA6A3E03216
51011190121DD5EFB67352B0EFBC8396C68BAD358D5053C7A38517A652ECA896
3F16BAFC66B4C01310ED134BB7B870D093662A48DC9F983B19> |-
/I <1C60D8A8C9B84325560C5412E249E77EF87CF25E787B074EE47C862018E8
5198D8CF59D2174AFF30C847BF7596225678A09DC0F9A332AE08794B7EB701D2
7DABD8FB7088AF936D9316100490CF9E7414F742DB43EA5D069FC84A27D0B061
1D5E3900EF4A3C4721B25B50C5B47DF440A2A1EFEFA65E42270F05A7F0DF4DB6
054C54912A53F99C7756D663C684FA193D799D00FEB27C742C79FB1FCC2F9740
09D64DD7569AAACCC2DD10> |-
/L <1C60D8A8C9B78B91ADCDFE651D774FC096B3CE413744C433DF60DD4D7185
1C96D1958B6E39BE14A5D022B78C54F6C0CF5331C7A14744ED2BDFE5FACC752B
95A60475BF18FC4B869812ACF5038DB7BC058B62ECC955C28AC5152632E69B75
AEAAAF0263572E8E7DBC0CBDCE56137B412D5CBE37B8A89D50649060CB06CC47
ED91884CEBE9F2D587E2CA4FB0FBFA8D6B7431711C43F87D62623B9A7DC3D785
A3E51D91FCBD41ABA7A6D28DA1CEF0D5C6AC6078B39309927C76FD13C62F6F26
8CBC49CA43916B90E5F58F77E3E01DFE3021B7B6942133FA03E3435A01C4C002
04> |-
/N <1C60D8A8C9B62E09AE150BAE1C0966FCA5B5854B94E7A3E47D7C12DE5F1B
66E98AC3796AC5C9C37AB266CD1E01EA37C2C76E610E759D2052BDB3D0CBD713
6628BC0823F4BC82827E555204D4E98DF95DA38949F9DCFC92A5E1AB50C21763
65064F79CA070183076A5E55DB10095BAD47244B7CE603C2EB584B960DBDC0C4
F45CFFEC898A428BC1E5E157BDC6200B6760C6E6D1FB0326F5C87B65E60F844C
C96C479CA9BB09DBC9CDE802DC50F1593E04028CFB08AB1DC917F69D9710C8AF
A6C1FC40B6A4F166C6C6E7552BEFB8575ED07FE9DED6244D8D1A2F480333850F
C602B78E8F342CBD28F2C0B8695C113761D839558E501AFEF2593C7441A98ACF
58CA25EA5B5F2C543FF1963048425E8F4A73D8BB0439> |-
/O <1C60D8A8C9B6330068A617A89CFB9571E01280E923C29C0DA3C8D0100975
CF5254C29CD7357FBA96866A482AB7965A45D14581D55B494D3CB202F3F09D5C
5BB68F8A39AC7DFE1BD774872889C3AA0BF76407D7EC94D6F07AF3A81E99C256
1DD3206D236AD89AFA505DD868> |-
/S <1C60D8A8C9B756EDDCFE5FA8BC64FB917CD90D11D54449E792C4A079A7C3
ADA074BE91DDF0B4315358205B04BD01380F3130B3A36F72D70214AD0284CF56
17A9EDFC217086E1D5EFEA3E9D5E00317EDD9F1A4FA55537A63ACA72660A92F2
D6D0F8547BD69BB7A24541AA8910E8BB0FF509A680D52DAECEF8EDB38FC16896
FA0DFDF38401BB10607CC98E6ED25C66> |-
/b <1C60D8A8C9B7AED8021178C4D60A3DF39803EB2ED1432445E89A1C2EFB60
D8FD10EA66B4489131C6A639AB0EF9314FC7D7D27EE2FD6576A98AF7833D986A
AD49CED7252849A3594AAB74DAF0DF5CECEF5B795EE25AC5C36399C8004BBC16
516B8B1910467418F00C6BF8F8264EF6236BDE9324E2C664CD35CBA061295F08
1347D38512D90E6B6878EFE3757C302EFDD29A9FE8D09BA8BF2627EFC33E73A0
59B02510C1468D83CF6A4A1CF61F7A51AE> |-
/d <1C60D8A8C9B7A15727142B70799A829D694A3BC16FE61AEDBF606E97F8C1
AA16A3D44FEFFD027B8D4267A75BD9772A849C1E4690E3EEF7EB2CDDCDF0768F
9793F9F695BB3CAE15C0C2E5CF6DB8B43B335D1A98693686C5367B707F5FDEDD
125148C3A1D2E353EB005AA9C8464848AA1A8717A231EA0053233425C283257C
9ABF5510A8DCDC5960694BF95093CA5B6BF0C37EA9DD126B3CDB49A5698DDA7C
22608BEB14ACF9A7E8BF1932D0D0044A57ABB8E63D770A3033643748D854921C
AE2E145BD47FD31C07B2A66AE099F4F18CC441264FE64EB76EEBC8611111ABAF
0C896B120E538D55BBBEAE6D226C056C4C092DA1AF24D921D8E8B601B4F2C161
67492C> |-
/e <1C60D8A8C9B77C8927AC386467079745259E6AFC906A9D0A9453C01F9A9A
2E80E7FD9DAC2858D035CDF3E1977C5A096371574A74966BEACFD9290EC6BC2E
93C32A9E7E55B78ECDBB050470DC50FB844345B04FFC3864C8871830B34147BE
AC930076B967450DE495DECB3722D92A3CA80D98293B066A0A21DE6318B28DDF
37> |-
/f <1C60D8A8C9B8341DE96B43529CB9E0304392B2643A74EBE2A3D3846679F1
6B0DDB61BDD14A08210FFF3011896831ED6AA72D402454FD7778511A02AFB89A
011983ED50A996AB87BFA0E812110058DA9C05EFCD800AD4833B7385FAB71A4C
8F49FD33F91AFF6D4B6926E9D3E72EC81C750FAD2389D83A6B0D388A4A162DB8
85EFA6F7B70CF6B1468C7B2AC3EB527191874E755A64E14263726A3E84E35FF4
BD4E968B40018A668BE49B35BDC74A254B31F041947897F4805D091EF5A72A0C> |-
/h <1C60D8A8C9B78181BE83D23D1B3D117082CFC0A765A5304D7CB3B0AD9E8E
FD5E2688E0EE44CE14F79AA7AC090E34F92766ED9F904ADC537BCFA303B5ED3C
94BD5AAEFC80984465DAE95442765062BB45272AECC45E1CD927FF7B735F152C
3716642D53F93298A94527844316053B71668475B9329248AD39DF84DA4FE0A9
2F0C0B5DA8BBE708D383563AFDE172ED5769AA0D21E6049F89E2F5698C27B61F
DE7032A73A4582D4BC78A787E6052DE99D1D7127F3F0E0DC1EAC261922D8E28F
199960429DF1C3980D3AD56F0318DAB978FAAA2E1DEBD300E07C0CF801815DA3
45A55858AA5EB7D8C39AC6D7C2F0105E4D5BC678A439E4C5439FEAEDF626E578
372A56E8E628FAFB18674AF6C9B2207C065E5DCB> |-
/k <1C60D8A8C9B7BB5CD4F001C298FA89C39E6F6D7FF9FDF8B19B2CD2C759FB
CD2BB2AA413187B49538356691EF6A8AB1091D5B08859A1806ED4E4F2574EEE3
0CE2F9327D602DF19E853338106C4980B537E82BA07E506151566A81DAE0A82A
87A5EA1738ACDB0480547F21E2C8886C89CC46B73C0B35D952EADF81C323D32E
E8F2A2CBCD3FF77B5B980776A6A06C563D02817C0125FB489345B15813177D25
5DBC4A9C6F6C240683858F8BB20530225755E243F6399908EB6ADF873FA0E035
8BFAEAF5CA4ADD4AD9AE38A0E4404D66C52B78A10D508C54926B6196F5C46175
DB3CA1CA17529C8CF2AFF2F62B35D32E960EA20D3B3C5DF7B6AFB49DE3955914
DE44E76F1FCEB8E7EBFD15E57CD8014332BE1A5A9D35965C9F1A2A05A7B90624
4E9D7AC16643EB99F17D82D4BE4C1E40> |-
/l <1C60D8A8C9B8622A135B30995216F83333B2A1996C171BA0EFEC59E039CE
821B867F4712CA3E29233C238EC39BD0D5F76B377D6644D28F39B51CE58CCD97
2A5AEB28BAFC4BF0330A9D9D63B7C8E114EE2B8CF9D0311DAC7B2AE8A7A5C75A
CE84AB1F3D309F8CBC190DB7F1C43C65AD003A85CFE2C35F6CF92849BC60EAFA
B221764152> |-
/q <1C60D8A8C9B7A4C86FE5C47845090A2A650685385C9BC098966D50C08D6E
B6BC642FE204532FF1E35A9D5A5FC0DE4C41B78051284798766361530839C48A
71EDB5B7A281E57DB040944BABBAFFCF0929B0D5759E340F88CFE6A4C8E54E99
8CE559CCA3B7891B5B4572862432893DD4F07731F6E808DFF096604E797988F8
3031998D37D31814E1297C25170E85C44907659EF6674E979AFC3E111ED7290B
367C0FB906882241EF440E75F7B058D857921DCE0C78FDD4E6FE617F9EE53873
FD7BFAA2EE0E38D1993D95C17E1A549BA2> |-
/v <1C60D8A8C9B7AA914D0605B1EDA30C3877999F85B7474A2CBA303B9F8969
841362B2FCF030AA6C947DA260FA35E214D7E8CE330338D0170EF163FEDBAA78
6EADDC04126264B57B6ACE0890AE5952FA43F58D377ABDBB780E5E3ACD67EAA9
E4CC503EB00F28A6A37A1A0C351DF5ECCFE78B994799BE7B0A9601B9F09CDD2E
92DE6C7AF7F709341531291C5264993541AB281309C46DAAFF690347E0D37D96
F346DBD7A1AB9F7531854064F2E74B33BDD113608B0FEC21460F81D3CB3AF481
F91BE7F952C6DA1B> |-
/w <1C60D8A8C9B61E1305C643589C8171E754BB066FF7D8E84B3287D2F851A1
5CE4104C4FDA6A082F9F7CA23AF2B06E5C07CC38A323F52DBA3AE1AE35FBC0B6
76FAF8C217F1EB7A13C1C7E5AC3B4360243AF1A811CDF2B31A1929B14ADBB933
955E55F82923AF4C80A927093FBBA861EB48EE2E653C1B36A8F0F228E2A92112
7360B3CDB0DAA51426EB1E6D8CF7C339166400475CE553CE466F6C09D9F49EDA
DFFB5999F66F9CE57841824D9D60D193E295DC8AD7D4D598BA2D93B0EF291270
56DB9D50C7AAA52CE9E94F9BE909C006B306593E5111EC856FC6864697787F6C
DA67DCEF6849E04C5C7C7BFBD77BE1AAE51B231C32D83B16CC39211E2B2952B5
7DD766F7D211C3A601445A09DD3D84C189DB87EF0C60B01A181B83EAFCB58652
A8CCD34D1459BB2253291462B90215E0F72C8292C0> |-
/x <1C60D8A8C9B751D576C5B71A8BA006DBC82C4E0FEFE340F843365DB93DFC
175170B13501B53FD9A5497B810D428260913CE1AFDA8C68209FB58321E37274
EE9F0CF8A9781EE3A7E300696ABCC5F651122B65C2B211778ED03871E1C3FACA
13494083AEF26577CBDBA83D28D076BA7E70D1E0437FD71EBD65CFC6FCF6D6CC
E113CC6849A188E99677F8B481447DA0A2425938C83904E1D3D61A8CC0A1841C
1504B864B8A742791932CA916D3121C1177CB285CAC46AC387703A4DD51C5560
030A4104F34F578AE48613F4573C9ED80C32273DBF6D07032CE16AB90E137AB8
17FF22D7D256762C57F016AFB7159E18D98EDA3C81CB13A492430887A7A7A46C
C6C8A4F7597C2D4997B0367279C6A29AA31B9CB17E65C8FCA5CDC7B3676E7102
24EDB6A953B5A8BDF1FDA05C5FC93BD4333D5578292479E44B97B5D11AAFED4D
1DB182AADFDBAC1CCA936FC2D910261BBECB4EB83B7A9F0A4C6FF245FA> |-
/y <1C60D8A8C9B7B8EB26E4106E112117DA36F208F2452F3233402924026821
4230AE95CD5EFF2AD0DEC95FF12DAEBF1E15D0AE37CC0AF917EC7B91A2AE8E35
401C7453AF8E9CC1794E5B3D55932CCDDA97C31509287E87F64132D9F03B9334
7394E581FE7EBA9464F674358FE4B4191E036025CC71302CA1A7C7BBD6595604
DDD79679FF0A02BB49DF4BA8E2FF95C475069086050116AEF20D67A6CD464229
661CD1059746A9BD8C028F3E830B17EFCA3AB887AE56532930015DD09CA54B34
C7F7F4896F9015C4400FB6B69C1DD9819EB492C92DAD9EA57A8A621F5DCAF871
28F812C17D31D32FAC6F9194912643CE2AC3D66A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 32 /f_i put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 50 /two put
dup 54 /six put
dup 58 /colon put
dup 65 /A put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 83 /S put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 107 /k put
dup 108 /l put
dup 113 /q put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i 7{/.notdef}rp /parenleft /parenright /.notdef /plus /comma 
/hyphen /period /slash /zero /one /two 3{/.notdef}rp /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
2{/.notdef}rp /I 2{/.notdef}rp /L /.notdef /N /O /P 
/.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
134{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
72.597 266.889 mo
(Our)sh
91.0783 266.889 mo
(mapping)sh
129.416 266.889 mo
(fromC/C++toPTX)
[3.08852 3.62646 5.02133 10.3615 6.43605 3.21803 6.43607 5.47968 7.97043 3.14825 7.51208 5.38998 
5.94791 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
7.803 300.487 mo
(Notably)sh
39.3526 300.487 mo
(,althoughPTX6.0hasnativeacquireandrelease)
[4.67952 4.52122 2.6119 3.12621 5.32252 4.98618 5.25337 4.94664 7.8255 5.35226 5.90628 9.03258 
4.60033 2.17653 7.10333 5.32253 4.52122 6.36136 5.36221 4.52122 3.12622 2.68103 4.82785 6.92535 
4.52122 4.23424 4.97636 5.25339 2.68103 3.60109 6.92535 4.52122 5.36221 7.50897 3.60107 4.42236 
2.61188 4.42236 4.52124 3.85834 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1224 0 0 -9.963 0 0 ]msf
-2.16 312.442 mo
(operations,itdoesnothavenativesequentially-consistent)
[5.10167 5.32436 4.52477 3.76548 4.62595 3.19862 2.74313 5.10168 5.48642 3.94773 4.70693 2.74313 
5.68874 5.1219 5.17253 4.52478 6.42772 5.48643 5.10165 5.67862 5.4458 4.62595 4.9498 7.01489 
5.48642 4.62595 3.19862 2.74313 4.9498 7.00476 3.94774 4.59564 5.09163 5.37506 4.52478 5.48642 
3.19862 2.74313 4.62595 2.67239 2.67239 5.21303 3.42136 4.33232 5.10168 5.48639 3.94775 2.74313 
3.94772 3.19861 4.52478 5.48645 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
-2.16 324.397 mo
(readandwriteoperations.Thebene tofnativeSCopera-)
[3.699 4.54259 4.64416 7.74361 4.64417 5.50802 7.73345 7.59114 3.7803 2.75393 3.21122 7.13397 
5.12175 5.34532 4.5426 3.78029 4.64417 3.21121 2.75394 5.12175 5.50803 3.96327 4.83725 6.06686 
5.46724 7.13397 5.11159 4.54259 5.50803 4.54259 5.69084 5.81274 5.12177 5.74164 5.50803 4.64417 
3.21121 2.75394 4.96928 7.14413 4.92873 9.15613 5.12177 5.34531 4.5426 3.7803 4.64417 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
-2.16 336.352 mo
(tions)sh
19.5154 336.352 mo
(wouldbecomeapparentiftheunderlyinghardwareISA)
[7.21535 4.92091 5.1846 2.57771 6.87363 4.91113 4.4328 4.17882 4.92091 7.71328 6.2879 4.46204 
5.06735 5.06737 4.46204 3.55394 4.36444 5.29202 5.01852 2.64594 4.95018 3.08528 5.25284 6.29767 
5.18462 5.29201 4.94043 4.36446 3.63205 2.5777 5.02832 2.64594 5.29202 6.80533 5.25284 4.46204 
3.55396 4.94041 7.29346 4.46204 3.55396 6.2879 2.89981 4.73541 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.84344 0 0 -9.963 0 0 ]msf
-2.529 348.307 mo
(weretosupporta ne-grainedmechanismforkeepingsuch)
[7.27425 4.40008 3.58295 6.89047 3.11047 7.45147 3.83894 5.22693 5.10872 5.17762 4.96107 3.66171 
5.60086 6.9987 5.5123 5.33522 4.40009 3.32706 4.92172 3.6617 4.49846 2.66754 5.33522 4.46898 
7.47115 7.77625 4.46899 4.21292 5.29573 4.49846 5.33522 2.66753 3.83894 10.2666 3.05144 4.96107 
6.1521 5.03978 4.47882 4.40009 5.10873 2.66751 5.33524 7.41211 3.83893 5.22693 4.21295 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.81356 0 0 -9.963 0 0 ]msf
-2.16 360.263 mo
(operationsorderedwitheachother.Lackingthis,wesimply)
[4.94601 5.1619 4.38673 3.65058 4.4848 3.10103 2.65943 4.94601 5.31902 6.3101 4.94601 3.57207 
4.96563 4.38672 3.57207 4.45541 7.45827 7.33067 2.65942 3.10104 7.76247 4.38672 4.4848 4.20015 
7.76245 4.94601 3.10103 5.27965 4.38672 3.07158 4.64183 5.18155 4.4848 4.20015 5.02448 2.65944 
5.31902 7.3896 3.10103 5.27965 2.65942 3.82729 4.65164 7.25215 6.86954 3.8273 2.65945 7.75262 
5.0932 2.59088 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 372.218 mo
(use)sh
13.9602 372.218 mo
(astandardleading-fencemappingforthoseoperations.)
[7.04385 3.88557 3.14825 4.55309 5.40002 5.04124 4.5531 3.62647 7.53199 2.63031 4.45352 4.5531 
5.04124 2.69994 5.40002 4.98151 3.36746 3.0885 4.45352 5.40002 4.2641 6.94427 7.8707 4.55312 
5.17076 5.17078 2.69994 5.40001 7.47226 3.0885 5.02133 6.19693 3.14824 5.36005 5.02133 3.88556 
6.94427 5.02133 5.24049 4.45355 3.70618 4.5531 3.14825 2.69992 5.02133 5.40002 3.88556 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
7.803 384.173 mo
(One)sh
25.9734 384.173 mo
(particular)sh
66.5611 384.173 mo
(mapping)sh
103.351 384.173 mo
(requiredextraattention:)
[3.55394 4.4328 4.91121 5.1846 2.64594 3.55394 4.4328 6.60027 4.2961 4.78429 3.0853 3.63205 
6.12187 4.46204 3.08528 3.08528 4.36446 5.29202 3.08528 2.64594 4.92091 5.29202 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
200.782 384.173 mo
(.release)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
-2.16 396.128 mo
(annotations)sh
46.7661 396.128 mo
(arenotredundantwithaleading)
[4.46204 3.55395 6.02428 5.29202 4.9209 4.75489 3.54417 4.44257 4.94043 5.1846 5.29202 4.94041 
4.46204 5.29202 4.74513 7.29344 2.64594 3.0853 6.91267 6.12187 2.5777 4.36446 4.46204 4.94041 
2.64594 5.29202 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
175.5 396.128 mo
(fence.sc)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
215.351 396.128 mo
(,even)
[3.80786 4.29611 4.77441 4.36444 0 ]xsh
-2.16002 408.083 mo
(though)sh
28.8495 408.083 mo
(the)sh
41.4837 408.083 mo
(ymayseemtobe.Figure12providesanexample:)
[7.44974 7.71329 4.46204 7.45949 3.80786 4.4328 4.36444 10.1445 3.08527 7.35208 4.91113 4.26682 
4.56943 4.73543 2.64594 4.88187 5.18462 3.55394 6.79561 4.54012 6.97127 5.06735 3.55394 4.8428 
4.85252 2.64594 4.94041 4.36446 6.23903 4.46204 7.72319 4.29611 4.78427 4.46204 7.71332 5.06735 
2.5777 4.36447 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
-2.16 420.038 mo
(RC11)sh
23.0322 420.038 mo
(considers)sh
65.3681 420.038 mo
(\(d\)tobepartofthereleasesequence\()
[2.85564 5.14207 6.23967 3.21121 8.33304 5.11157 7.75388 5.27419 4.64415 3.7803 6.42249 5.12177 
6.36154 3.21123 5.46724 7.75386 3.69901 4.54259 2.68292 4.5426 4.64415 3.96327 7.75388 3.96327 
4.61372 5.11168 5.39622 4.54257 5.50806 4.34937 7.75388 0 ]xsh
/1 
[/DeviceCMYK] /CSA add_res
1 .903593 .0955215 .455177 cmyk
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NAAAAA+LinLibertineTI def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL \\\(General Public License\\\) with font-exception and OFL \\\(Open Font License\\\).
Created with FontForge \\\(http://fontforge.sf.net\\\)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 114 /r put
dup 115 /s put
def
/FontBBox {-634 -312 6171 893} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 429 442 460 474 567 578 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 567 578 645 658 688 698] def
/FamilyOtherBlues [-235 -227] def
/BlueScale 0.0366666 def
/BlueShift 6 def
/StdHW [39] def
/StdVW [76] def
/StemSnapH [39] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/r <1C60D8A8C9B807CA2DAA5BE2879CF03E62803AD16F98B94D9480628E1D4E
74C0E6D9947100EF2FEEF786C01DCFAAB3D5A6A86DEF422B78BC4BE7CFB69827
339E2CDFDD097E230E3FD60BB9541CA3892D16868BC05305FA1A0AB2B9E6478C
A089B635E4624B081D65C26C9333920604E4F6FBDC00FF29402F07A4867CDA3C
079E8B56F9E62B388615D8E475FE91EB> |-
/s <1C60D8A8C9B80B0D3FFFEBEB7DF16C125E29A1E43B934D90363C0383FFDC
05AF8C9C85CD829996A90A637886329C1206B1533715AFD2E8D1FDE7A0FA98C1
3899C6A3DE8EAC9CFC1C89F7C49AF5CF3E98721C893136AA38FB643FCEF351F1
CD2A0C1A7C0A7A2751B3EB3734F075BAB7E30C78D2971443FA69C2DC94952E99
E9DE8DF211C3555342C87EBD6650A675F28952F5B3404BE4BEC6D6E2316141A3
1C969E5F> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4ADDDDDB8A4E
47F3F2F1CAAE4F43122CFEE2884275C84424026449C27071D4FDF833FCFC37BD
EAA9A891DE737DA59C1E8008FB0FD905E36128E58DBE941690CD39B139ADD52F
6B4B0641> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI /NAAAAA+LinLibertineTI findfont ct_VMDictPut
/QOZGVQ+LinLibertineTI*1 
[114{/.notdef}rp /r /s 140{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
228.137 420.038 mo
(rs)
[3.55673 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B60F082FF066052C1D148E7DE59596040EA09D7CE5D9BDE0B2
69A0258B6353CE99BB62838D283B7E9FF9557145DCFF92406FFCD9ACA321B47A
557BFA4614EEADD2DE827F28B990CA3CFBDEED93FDE13135C76FDBE820C73917
0BC70EC347E9B7EFEC1FAB8FB2A8FC17DB1A7A539D7FA8536FDF68933E91A971
A787F96FED67B04296B13BF93629F5B2FB94CC225087CC31AF2A28D156F404A3
DAE3AED08E91A5A60DCD7F05787CA08FF92BAF47806A9E22655FFD881BD5C6ED
6020FACD790974349269D36187ED4D8D7C663D6CF2E712ACCB725A316BF3DBEB
3522B7AB8743C2343B08F76B2B7A5411D6195AD4F14FF9176328E34C61F53BB2
25277FD075CA9D262F9D5A77AD890912C174A7FC5C704036FC9AC84A738D3217
02BD25E2E3D178045FF4F039A25156DFD802493412AC6503A49726E869C3D442
B78956FD7524E902986B77BD58B14CCD> |-
/z <1C60D8A8C9B713D44022B0D8069739CCA2588F12C799613B49B8BB3CA3DC
DAF5D50E8A093BAE6284EB3BBAE6F0B264102DA572D583960FE84FA7C0134609
92ABCA7971BEDA50D438C15E3787C3E51AB436932629C59EC704B7297AB92E99
5C7D5B317A1F337F9B411108008C8183D17EDECA820E8B01419EEEAF9D7B3FC9
8454968FB9285A0C85FA35B6DD7D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 72 /H put
dup 122 /z put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i 7{/.notdef}rp /parenleft /parenright /.notdef /plus /comma 
/hyphen /period /slash /zero /one /two 3{/.notdef}rp /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
/.notdef /H /I 2{/.notdef}rp /L /.notdef /N /O 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 133{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
235.454 420.038 mo
(\))sh
-2.16008 431.994 mo
(heade)sh
22.2497 431.994 mo
(dby\(c\),so\(c\)synchronizeswith\(e\)evenwhen\(e\))
[8.35335 5.00995 8.455 2.85564 4.34938 3.0284 5.45714 3.96328 8.33303 2.85564 4.34938 6.24985 
3.96326 5.23357 5.50801 4.3494 5.46724 3.69899 5.12177 5.50803 2.75392 4.30876 4.54259 7.17456 
7.59114 2.75394 3.21121 8.68867 2.85564 4.5426 6.23967 4.48161 4.96928 4.5426 8.71928 7.59116 
5.46722 4.5426 8.72943 2.85565 4.5426 0 ]xsh
-2.16008 443.949 mo
(readsfrom\(d\)ratherthanfrom\(c\).Combiningthiswith)
[3.699 4.54259 4.64416 5.14207 7.24569 3.15028 3.699 5.12177 11.3105 2.86581 5.14207 6.31081 
3.7803 4.64416 3.21122 5.46724 4.54259 7.06271 3.21121 5.46724 4.64417 8.79044 3.15027 3.69901 
5.12175 11.3105 2.85562 4.3494 3.0284 5.52827 6.56479 5.12175 8.02812 5.00995 2.75394 5.50803 
2.75394 5.50801 8.36354 3.21121 5.46722 2.75397 7.24567 7.59116 2.75394 3.21121 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.0029 0 0 -9.963 0 0 ]msf
-2.16 455.904 mo
(happ)sh
18.2457 455.904 mo
(ens-b)sh
40.4521 455.904 mo
(efor)sh
56.7067 455.904 mo
(erelationshipsfrom\(a\)to\(c\)andfrom\(e\)to)
[6.96205 3.64098 4.47134 2.64083 4.5713 3.16084 2.71074 5.04141 5.42163 3.90109 5.38147 2.71075 
5.19144 6.38182 3.10086 3.64098 5.04141 10.3929 2.86087 4.5713 5.4716 3.16084 7.53212 2.81084 
4.28116 5.46159 4.5713 5.42162 7.55214 3.10085 3.64099 5.04141 10.3929 2.81085 4.47134 5.47159 
3.16086 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
-2.459 467.859 mo
(\(f\),weconcludethat\(a\)happensbefore\(f\),whichimplies)
[3.0284 3.91245 3.02839 4.80676 7.50985 7.11365 4.34938 5.12176 5.50802 4.34939 2.68291 5.39622 
5.14207 7.11365 3.21121 5.46724 4.64417 5.78227 2.90645 4.64417 5.6096 5.46724 4.64415 5.27419 
5.33516 4.54259 5.50803 6.54449 5.10141 4.5426 3.15027 5.12175 3.70917 7.11365 3.0284 3.90227 
3.0284 4.80676 7.59116 5.46724 2.75392 4.34938 8.04846 2.75394 8.02811 5.27417 2.68292 2.75394 
4.5426 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 479.814 mo
(that)sh
16.5404 479.814 mo
(\(f\)mustreturnthevaluewrittenby\(a\).)
[2.96902 3.8457 5.45976 7.8707 5.29041 3.88557 5.639 3.62647 4.45352 3.14825 5.29041 3.70618 
7.89077 3.14825 5.36005 6.94427 4.95154 4.5531 2.63031 5.29041 6.94427 7.44231 3.70618 2.69994 
3.14824 3.14825 4.45352 7.89078 4.91171 7.62169 2.84947 4.5531 2.96901 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
7.803 491.769 mo
(Now,supposewecompile\(c\)tothesequence)
[6.8249 4.85256 6.70763 3.80787 3.80785 5.1846 5.06735 5.1357 4.92091 3.80785 6.02429 7.21535 
6.02429 4.17882 4.9209 7.71329 5.06737 2.64594 2.5777 6.02429 2.74365 4.17882 4.56947 3.08528 
6.58073 3.0853 5.25282 6.02429 3.80786 4.43279 4.91122 5.1846 4.36446 5.29201 4.17883 0 
]xsh
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
184.025 491.769 mo
(fence.sc.sco;)sh
-2.16 503.725 mo
(atom.acquire.sco)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
77.541 503.725 mo
(,i.e.,elidingthe)
[3.80788 2.64594 2.14803 4.26682 2.14804 3.80788 4.36444 2.57771 2.64594 4.94041 2.64594 5.29202 
6.5417 3.08528 5.25284 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
139.737 503.725 mo
(.release)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
179.588 503.725 mo
(.Thisproduces)
[3.81764 5.82895 5.25284 2.64594 5.46768 5.06735 3.55396 4.98926 4.9404 5.1846 4.17883 4.36444 
0 ]xsh
-2.15987 515.68 mo
(the)sh
12.8567 515.68 mo
(executioninFigure12b.Here,thereisagapbetweenthe)
[4.28634 4.78429 4.44257 4.17882 5.18461 3.08528 2.64594 4.9209 7.59627 2.64594 7.60603 4.73542 
2.64594 4.88188 5.1846 3.55392 6.6687 4.5401 4.5401 4.81351 4.46204 7.12747 4.36447 3.55392 
4.26682 4.45229 3.08528 5.25284 4.36446 3.55394 6.67845 2.64594 6.11209 6.77605 4.88187 4.46204 
7.38136 4.91112 4.36446 3.08528 7.21536 4.4328 4.36444 7.59625 3.0853 5.25284 0 ]xsh
1 .903593 .0955215 .455177 cmyk
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVQ+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7551CBDC4D92ED46752CA03F33166ED904EB79369163706EE
9D9D75BA69026571F2B01F23C25627958CF9D376125357FB36F7C4937F7D9D66
568B59A8FFA6E4512C0702749138C628112CEB81446B3B0B4F4DB98761E125F4
69B0E5906457B39EA32629962DB382230426D729B29022D0FD8FE84208E7FD30
251C22F74174E3966B6AE39C2CEBCAAF6E40A563BAA8F2BF30BFD44AFD> |-
/c <1C60D8A8C9B7361F74580CAA04A2FDB03976390908A21FA6A6CC79A37FD9
6C0A8CCA8FD58ADA2F32ED9B12991C17885EA0DFC87DB992233A46BBC8327E1D
828EA639C31BE27E98A9E0CCEC8F607DEF2A9D86F51221A20CA70751A5EB58E2
55276B497D898AE2E2AD33194DF9A9261DE65FC852400C72501B4DBB3AF8B36A
E442E7FDDE3B> |-
/e <1C60D8A8C9B70A9A18F7184021E3816740F535EF2C41EC680BDA0FC0E886
EDC63838624975FC710D0AD54DE237D6FFBD6C5AAF252094BDB357219FB44821
069BA515EFD6FCC3AA51D8113EE04C5A41B3A6458A97921085E683ED50975EEF
E557C55730B9284BC19024A73398EFC92CBF6F55> |-
/l <1C60D8A8C9B86086155F726C13518AE77D018C979CD61851A3A9F322CDE4
B74426CCC9D7835B9A957A89AA9C4ABD6887E5A56CD3548F212AF084D52F3FA4
7EB8FCDB3A4AB34A4F204D29CC4932C101C3BA65CCE9886516BEB1A8CF99D166
A50816F22C467272E4AF4E181B4033CA8E6E756549766D7DCCE7> |-
/n <1C60D8A8C9B7B5770588B497E14C7506E338263C9E1D23C9617753D76106
781F210A4990999B6E92081E202362DB47B582B35B8B8061E2444CB1A5366E22
1B007DC220B2670FE6F3CA21007F74862D7EA2F80C9AD2414B4E58E57B433B15
D67D67AB59C8E33E9BB52604BDA434F276DFC9B6C5C997C1E2D4C3321657E339
929E2E95BF7EFDF02A9A2EE68B22A389347518B01749C0BC86AD58952DB42462
E62BE5D0499609754B9E71F98A6A507158ADAA1CE9D4196DCC96FD4274ACA45C
0A5A13C0DCD38ED6A3BB9E88D496F7B9834B133134307482FC1B3900B0ACDC57
3DACD06A1D224F9BD18C1A5EF968613EE544875D8A801E4B46F614> |-
/q <1C60D8A8C9B7500425B3E12BE8E4C4F73BDF685EC197661D7045542139EC
F60ED56DD407C8F38261FBD3E75F161C53094322D4964334323F11FC37C23242
AB610484CA85FFF13C2C809E54617F1744BDA730E5B343BED057033A4FC1BCD3
8341A6D022923FDDE841A16F2F898D219ADA9B8FD24861C13D0B128E3C8A2315
12AAAE6C24B3DEFE7DF3A741956FE46D1B298A02BD12078A34947BF2997F9C86
2A4A004A49467FF45FEDAEDF43F7CFDB1A7DF358E5CC0B> |-
/y <1C60D8A8C9B7A4C86FE5A073F24E2EDB48B00D54B739B2C8F3CD6318890F
714F5D93CBDB95127C016FC8EF1F7CEB6B366607759BEA442912CDFB0458C09E
3AEE339432778F6FD70F0DF8AA6D7E705C96EE297DAE85DC11296D34E6CE4685
52315AFED0434DEE57CD53E6400485A7566E33AA5EBD9864CF433D93CFE063B7
57096EF07BD1EB9C6E6D6AF882F32F3B40BB812E6502FA0708E2E5ACF1351D0B
8BD5CA6B5DC4D0742397237AC06DEB1C015F36AB98> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVQ+LinLibertineTI /Encoding get
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 113 /q put
dup 121 /y put
pop
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e 6{/.notdef}rp /l 
/.notdef /n 2{/.notdef}rp /q /r /s 5{/.notdef}rp /y 
134{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 527.635 mo
(sync)sh
QOZGVQ+LinLibertineTI*1 [7.273 0 0 -7.273 0 0 ]msf
15.404 529.193 mo
(acqr)sh
27.8771 529.193 mo
(el)
[2.91648 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QOZGVJ+LinLibertineT*1 [9.85341 0 0 -9.963 0 0 ]msf
36.045 527.635 mo
(edgeendingat\(c1\)andthe)
[4.47351 4.98579 4.9267 6.89745 4.40454 5.34062 4.98578 2.67024 5.34062 7.41962 4.50302 5.60654 
2.76884 4.21719 4.5818 5.42926 4.50302 5.34062 7.47871 3.11362 5.30107 0 ]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVQ+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
147.222 527.635 mo
(sync)sh
QOZGVQ+LinLibertineTI*1 [7.273 0 0 -7.273 0 0 ]msf
164.786 529.193 mo
(acqr)sh
177.259 529.193 mo
(el)
[2.91649 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QOZGVJ+LinLibertineT*1 [9.85341 0 0 -9.963 0 0 ]msf
185.427 527.635 mo
(edgestarting)
[4.47351 4.98579 4.9267 6.89745 3.84283 3.11362 4.50302 3.66541 3.11362 2.67023 5.34064 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.84344 0 0 -9.963 0 0 ]msf
-2.16 539.59 mo
(at\(c0\).Thisbreakstheexpected)
[4.49846 5.59101 2.76605 4.21294 4.57716 2.93339 4.64612 5.87653 5.29572 2.66753 6.32933 4.85278 
3.57311 4.40008 4.49846 5.03978 6.32933 3.11047 5.29572 6.88063 4.33118 4.82335 5.17761 4.46899 
4.21292 3.11047 4.46899 0 ]xsh
1 .903593 .0955215 .455177 cmyk
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVQ+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B7B202DCA3EC89F1EC8B574B55E6FDCD6EAA3EF32F7383B422
2CC1FBF95F789FD3A3F15B99CF97BD2617719A1A22F7373226639871CB2AA097
D6805EBFDB270EC7F473886A6AD3FDBFF86F31C40895E9D044ADA0EC3BDDF37C
6F0A86739BF81F9F84D96D6101C330376114A11E0EEF1325825EE3839E25A93A
05798227744ABF76553BB3ED8D1415EB69D64E6DEB089F42253ED3FC2A487BDC
6F4777F016FB5BDA904C67327120FF87DAB3E2B149F05CED60DD637E835B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVQ+LinLibertineTI /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e 6{/.notdef}rp /l 
/.notdef /n 2{/.notdef}rp /q /r /s /.notdef /u 
3{/.notdef}rp /y 134{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
129.268 539.59 mo
(cause)sh
1 /0 /CSD get_res sepcs
1 sep
QOZGVJ+LinLibertineT*1 [9.84344 0 0 -9.963 0 0 ]msf
153.399 539.59 mo
(relationshipbetween)
[3.58296 4.40007 2.59874 4.49847 3.11047 2.66753 4.96107 5.33522 3.83894 5.29572 2.66753 7.58928 
4.9512 4.40009 3.11047 7.27423 4.46899 4.40009 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
-2.459 551.545 mo
(\(a\)and\(f\),leadingtoafailuretomaintainRC11require-)
[2.90645 4.64416 6.34129 4.64416 5.50803 8.45496 3.0284 3.91245 3.0284 5.54861 2.68291 4.54259 
4.64416 5.14207 2.75394 5.50803 8.39403 3.21121 8.43466 7.95705 3.15028 4.64417 2.75392 2.68292 
5.39621 3.70917 7.8555 3.21121 8.43466 8.02812 4.64415 2.75394 5.50803 3.21121 4.64417 2.75392 
8.82092 5.9653 6.56479 4.7254 8.0383 3.69901 4.61374 5.11169 5.39621 2.75394 3.69901 4.5426 
0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
-2.16 563.5 mo
(ments.)sh
26.5161 563.5 mo
(If,)sh
36.8656 563.5 mo
(ontheotherhand,the)
[4.9209 7.55721 3.08529 5.25284 6.62963 4.92091 3.0853 5.25284 4.36444 5.89725 5.25284 4.46204 
5.29202 4.94041 4.42299 3.08528 5.25284 0 ]xsh
QOZGVK+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
127.165 563.5 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
150.336 559.884 mo
(SC)
[4.18922 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
162.847 563.5 mo
(mapping)sh
200.242 563.5 mo
(keepsthe)
[4.99899 4.4328 4.36444 5.06735 6.08279 3.0853 5.25284 0 ]xsh
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 575.456 mo
(.release)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
37.691 575.456 mo
(,thenthedotted)
[4.33511 3.08528 5.25284 4.36446 7.48886 3.08528 5.25284 6.55153 4.94043 4.9209 3.08528 3.0853 
4.4328 0 ]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVQ+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
104.701 575.456 mo
(sync)sh
QOZGVQ+LinLibertineTI*1 [7.273 0 0 -7.273 0 0 ]msf
122.265 577.013 mo
(acqr)sh
134.738 577.013 mo
(el)
[2.91649 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f_l <1C60D8A8C9B79FB0BCA442190BC376147D223B9A69770A56E38F1857E8
2B233FD36259D9799FED017CDA9FD4C885F0364A6C98AE7EC46A8C630AD42D94
B207815B60EFA3FBA083452F995FE3AADE3796E456C771571C50C031EB6CCE1E
85EB7E25EE9C31E729E95E204B07C15DCF78FBFBA2B2AE4A3C8D420719A284B1
D51351449276634CA2846820E4A2114BEC88071A5D729235E3456F2C1CC40A1F
4ADF71E5809C3ACF670BDAA0F9EF2FCE1BB725FE2C1BECE59174404122469B76
3E2867AA6B642CDBFD3D1F3B74C52DD93835EE224EAD54F2177EA398F6D960CA
1948DCF9BA8347DE75C287C22116C86A3658F423BF61A7DD0CFD963129975F88
716422BC822CD9BA8E05B49BE4BD23BFC9027ACE3AF4> |-
/W <1C60D8A8C9B5D940FCAE99AC1E04E3998F3343241D3DC08700DE12B88DEB
F8B4DA98677EC005BCC1FE96E131C430C2DB05D755F1D4008B4FA3B95FA52209
C320E5D72D336785FEC310E3DC2E96C14497B584578EB2D96951EB13DC3CD3A6
58B9EB2D76FE3D2F5777146463D2F5C70FD2F3A144ADB344C7F9180330DCFB16
ED71AFCFC9581B462974B15670A636491E518DDF6EE365CFFF5915545347A223
977B19736CB9A7F10D07FA684C2170426B670FBFFA271EC191F60655F8806E27
D47D8A5F602A63E35575EBF1846B4046AF29799499CA79DFCC94176CE4459F2A
205C91A4F115C9873925D69DF1501017BFC07112DF82AE972195287BA9846EFF
979674A61148B70B5AF583D5D84E7AFF6C0EEA802D90FD62709BDA8D6B7F07A2
FB97083D906E080C905C534501606E4FCD2ACD8BCB7932CB560EE79B9EADD742
E2E1F434FA6C2309E89274E01307BA1064> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 33 /f_l put
dup 87 /W put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i /f_l 6{/.notdef}rp /parenleft /parenright /.notdef /plus 
/comma /hyphen /period /slash /zero /one /two 3{/.notdef}rp 
/six 3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 2{/.notdef}rp 
/F /.notdef /H /I 2{/.notdef}rp /L /.notdef /N 
/O /P /.notdef /R /S /T 2{/.notdef}rp /W 
/X 8{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 133{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
142.603 575.456 mo
(edgestartingat\(c2\)will)
[4.4328 4.94041 4.88188 6.56128 3.80786 3.08528 4.46204 3.63206 3.08528 2.64594 5.29202 7.06894 
4.46205 5.27234 2.74365 4.17883 4.5401 5.09671 7.29346 2.64594 2.5777 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 587.411 mo
(also)sh
16.4211 587.411 mo
(beenforced,closingthegap.)
[5.01134 6.94427 4.45352 5.40002 3.08851 5.02133 3.62646 4.26411 4.52326 5.04124 4.68262 4.26409 
2.63031 5.02133 3.88557 2.69994 5.40002 7.47224 3.14825 5.36003 6.94427 4.98151 4.5531 5.07114 
0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
7.803 599.366 mo
(Notably)sh
40.2206 599.366 mo
(,thisexamplepushesthelimitsofwhatcanbe)
[5.22341 3.21122 5.46723 2.75394 6.94083 4.48161 4.97957 4.64415 8.02812 5.27419 2.68292 7.52014 
5.27419 5.39621 3.96327 5.46724 4.5426 6.95097 3.21121 5.46724 7.52014 2.68291 2.75394 8.02811 
2.75394 3.21121 6.95099 5.12175 6.13799 7.59116 5.46725 4.64413 6.18875 4.3494 4.64417 8.49573 
5.11157 0 ]xsh
-2.16036 611.321 mo
(teste)sh
17.3817 611.321 mo
(dempirically\(seeSection6.1\).Wecaughtthiscorner)
[7.80458 4.54259 8.02811 5.27419 2.75394 3.7803 2.75392 4.34939 4.64416 2.68291 2.68291 7.90623 
2.90645 3.96329 4.61372 7.20509 4.92871 4.61374 4.34937 3.21123 2.75392 5.12177 8.17053 4.7254 
2.23572 4.72543 3.02838 4.90839 8.8717 7.20511 4.34937 4.64417 5.39621 5.08115 5.46722 5.87372 
3.21124 5.46722 2.75394 6.63596 4.34937 5.12177 3.7803 5.50803 4.5426 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
-2.16 623.276 mo
(case)sh
16.9086 623.276 mo
(only)sh
36.9927 623.276 mo
(with)sh
57.5257 623.276 mo
(Coq,notwithAlloy.Thisanecdotehighlights)
[6.30734 4.98925 4.91122 4.41322 5.29202 4.9209 5.34071 7.29346 2.64594 3.08528 7.50826 6.78589 
2.5777 2.5777 4.85255 4.44249 4.40346 5.82896 5.25284 2.64594 6.07303 4.46204 5.29202 4.4328 
4.17882 4.94041 4.92091 3.08528 6.61989 5.25282 2.64594 4.8819 5.25281 2.5777 2.64594 4.8819 
5.25284 3.0853 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
-2.16 635.231 mo
(animportantbene tofcombiningempiricaltestingwith)
[4.64416 8.53637 2.75393 8.02812 5.34532 5.12175 3.7803 3.21121 4.64417 5.50802 6.23957 5.11157 
4.5426 5.50802 4.54259 5.69084 6.23956 5.12177 6.17862 4.3494 5.12177 8.02811 5.00995 2.75394 
5.50803 2.75394 5.50801 8.1095 4.54259 8.02812 5.27417 2.75394 3.7803 2.75392 4.3494 4.64415 
5.71127 3.21121 4.5426 3.96327 3.21121 2.75394 5.50803 8.1095 7.59113 2.75394 3.21121 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
-2.16 647.187 mo
(formal)sh
27.2009 647.187 mo
(veri cationinasinglework!ow.)
[4.87185 4.45353 3.70618 2.69993 5.57926 4.2641 4.5531 3.14825 2.69994 5.02133 7.89077 2.69994 
7.89078 7.04384 3.88557 2.69992 5.40002 4.98151 2.63031 6.94427 7.36258 5.02133 3.70618 5.101 
5.37994 4.9516 6.85448 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
266.339 17.0059 mo
(\()sh
268.903 17.006 mo
(a\))
[4.09747 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
277.915 17.006 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
286.66 13.751 mo
(NA)
[6.35663 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
300.942 17.006 mo
(x)sh
264.784 45.225 mo
(\(b\))
[2.77951 4.4202 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
276.897 45.225 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
285.461 41.97 mo
(REL)
[4.98926 4.77106 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
302.273 45.225 mo
(y)sh
346.051 16.878 mo
(\(c\))
[2.51947 3.8374 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
357.322 16.878 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
378.599 13.623 mo
(SC)
[4.18921 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
391.084 16.878 mo
(y)sh
349.295 45.225 mo
(\()sh
351.815 45.225 mo
(d\))
[4.53677 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
361.265 45.225 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
369.828 41.97 mo
(RLX)
[4.95291 4.27646 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
387.841 45.225 mo
(y)sh
435.671 16.878 mo
(\(e\))
[2.51947 4.00787 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
447.112 16.878 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
452.338 13.623 mo
(ACQ)
[4.93112 5.44751 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
471.544 16.878 mo
(y)sh
438.314 45.352 mo
(\(f\))
[2.67191 3.46085 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
449.361 45.352 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
454.842 42.098 mo
(NA)
[6.35663 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
469.124 45.352 mo
(x)sh
285.837 22.0052 mo
285.837 33.5752 li
1 .903593 .0955215 .455177 cmyk
@
.319 lw
1 lc
1 lj
287.431 32.3797 mo
286.833 32.4797 285.937 33.5757 285.837 33.8737 cv
285.737 33.5757 284.841 32.4797 284.243 32.3797 cv
@
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVQ+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B75D88A4492BBF8B86836ACCBB4602643FFA2DBF4C68D78181
9C66BB5BB7ED34B96F40F44B5D3A370ABD3B4893DA68DFFB7001076CE1A429CC
564AE7245A7B035669A3EE22C8A30E779ADFA0125402C893A716668868E023A7
AEC38336578CF125A862D83A94B2422A8B0A6B9D2FEADD56BF8FD7ED5BEF1556
2C0685EBD5008EFA740229B52BBEC9486E6A43108EE6573B7F12D5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVQ+LinLibertineTI /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI*1 
[97{/.notdef}rp /a /b /c /.notdef /e 6{/.notdef}rp /l 
/.notdef /n 2{/.notdef}rp /q /r /s /.notdef /u 
3{/.notdef}rp /y 134{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
275.073 31.097 mo
(sb)
[3.16498 0 ]xsh
.398 lw
0 lc
0 lj
370.877 22.1329 mo
370.877 33.5749 li
@
.319 lw
1 lc
1 lj
372.471 32.3797 mo
371.873 32.4797 370.977 33.5757 370.877 33.8737 cv
370.777 33.5757 369.881 32.4797 369.283 32.3797 cv
@
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
360.112 31.1609 mo
(sb)
[3.16498 0 ]xsh
.398 lw
0 lc
0 lj
455.918 22.1329 mo
455.918 33.7029 li
@
.319 lw
1 lc
1 lj
457.512 32.5074 mo
456.914 32.6075 456.018 33.7035 455.918 34.0015 cv
455.818 33.7035 454.922 32.6075 454.324 32.5074 cv
@
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
445.152 31.224 mo
(sb)
[3.16498 0 ]xsh
.398 lw
0 lc
0 lj
310.078 34.18 mo
345.776 22.278 li
.946685 .780606 0 0 cmyk
@
344.136 21.1428 mo
344.421 21.679 345.745 22.1829 346.06 22.1835 cv
345.809 22.3728 345.051 23.5706 345.146 24.1702 cv
.319 lw
1 lc
1 lj
gsave
[.949631 -.316589 -.316589 -.949631 344.136 21.1428 ]ct
@
grestore newpath
%ADOBeginSubsetFont: LAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVO+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B625CE07B6637C0BEB4B159573AF2A893DFF4A903D0DAB7004
E29767EA647B9661C2FF1559B6627874CA34A22577A4164CE7CBDB25DF6B877A
5D1621BCD25D123F86300552B593010453540E84B8E770AB7A35E2771A600DDC
D68A6853D5328B3D635115C75AA9A7B174029EE294361A1633DEDAD83E38560C
1E5A7826E29606FB4672151895CA76CC1FC8F3EB210A6EC4F63FFE011E838FE7
2EF61FF497CDC34BFADDF0A4EF08E2F0614EAF9C863B436F988EFD587C253CF9
F01C7E65641E965349C5DAF2D5DC02FBEA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVO+LinLibertineTI /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/QOZGVO+LinLibertineTI*1 
[60{/.notdef}rp /less /.notdef /greater 36{/.notdef}rp /c 11{/.notdef}rp /o 
3{/.notdef}rp /s 3{/.notdef}rp /w 136{/.notdef}rp]
QOZGVO+LinLibertineTI nf
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
323.478 24.8199 mo
(sw)
[3.16498 0 ]xsh
.398 lw
0 lc
0 lj
398.891 13.9098 mo
432.027 13.9098 li
@
.319 lw
1 lc
1 lj
430.831 12.3158 mo
430.931 12.9138 432.027 13.8098 432.325 13.9099 cv
432.027 14.0098 430.931 14.9058 430.831 15.5038 cv
@
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
411.019 10.574 mo
(sw)
[3.16498 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: MAAAAA+LinLibertineTB AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVP+LinLibertineTB dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B831A98FA4D3F4FBFD5E482C95FFADE3200E1C2FBC
7B3B06514BAC526D175F67D256808C91D4C0EA0B55F629BF6146929D37F553E4
7FDF4BF73187DBB273828D> |-
/parenright <1C60D8A8C9B831A98FA766E10E25012EC3F9C45B9F79760BFD4
160E0A8E38B75C7F05592B8F76E75F9E8E23686DA934178D785267C6AA7D51A3
F038191154EDBF7D0AEA8BF125F> |-
/a <1C60D8A8C9B7A157277F73D9EF6A4E787CBC22A41C54985430F48A227C6F
9AB6EE7364C783FB8BAE62B959B3FA3CDDF71BB7DA453E81AC79A042309BBB80
2F4B5EA44CAEEF2C7E3EC2F17B2377CF8FAB302A5802A5AE0D37CA664D5BDA9F
2659BB5754B57AF2B05B4CDEC2132E5ACB60C96A10914944260142582DC4A414
F24D6A677DD439E67C1877C40245005E8B43A8404309C2A1EA0B62A92000A92B
6C443677B735D9EB108A819EDEA00EA22C87> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVP+LinLibertineTB /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
pop
%ADOEndSubsetFont
/QOZGVP+LinLibertineTB*1 
[40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one 20{/.notdef}rp 
/F 26{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef 
/i 8{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]
QOZGVP+LinLibertineTB nf
QOZGVP+LinLibertineTB*1 [8.966 0 0 -8.966 0 0 ]msf
332.045 63.929 mo
(\(a\))
[2.71671 4.53677 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
344.365 63.929 mo
(The)sh
360.791 63.929 mo
(original)sh
391.553 63.929 mo
(C/C++)sh
418.137 63.929 mo
(test)sh
266.339 115.223 mo
(\()sh
268.903 115.223 mo
(a\))
[4.09747 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
277.915 115.223 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
286.66 111.968 mo
(NA)
[6.35663 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
300.942 115.223 mo
(x)sh
264.784 143.441 mo
(\(b\))
[2.77951 4.4202 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
276.897 143.441 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
285.461 140.187 mo
(REL)
[4.98926 4.77106 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
302.273 143.441 mo
(y)sh
355.879 86.876 mo
(\()sh
358.399 86.876 mo
(c0\))sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
371.319 86.876 mo
(F)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
375.631 83.621 mo
(SC)
[4.18921 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
348.632 115.095 mo
(\()sh
351.152 115.095 mo
(c1\))sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
364.072 115.095 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
369.299 111.84 mo
(ACQ)
[4.93112 5.44751 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
388.504 115.095 mo
(y)sh
347.56 143.441 mo
(\()sh
350.08 143.441 mo
(c2\))sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
363 143.441 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
371.563 140.187 mo
(RLX)
[4.95291 4.27646 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
389.576 143.441 mo
(y)sh
349.295 171.788 mo
(\()sh
351.815 171.788 mo
(d\))
[4.53677 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
361.265 171.788 mo
(W)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
369.828 168.533 mo
(RLX)
[4.95291 4.27646 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
387.841 171.788 mo
(y)sh
435.671 115.095 mo
(\()sh
438.191 115.095 mo
(e\))
[4.00784 0 ]xsh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
447.112 115.095 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
452.338 111.84 mo
(ACQ)
[4.93112 5.44751 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
471.544 115.095 mo
(y)sh
438.314 143.569 mo
(\(f)
[2.67191 0 ]xsh
444.447 143.569 mo
(\))sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
449.361 143.569 mo
(R)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
454.842 140.314 mo
(NA)
[6.35666 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
469.124 143.569 mo
(x)sh
.398 lw
0 lc
0 lj
285.837 120.222 mo
285.837 131.792 li
1 .903593 .0955215 .455177 cmyk
@
.319 lw
1 lc
1 lj
287.431 130.597 mo
286.833 130.697 285.937 131.793 285.837 132.091 cv
285.737 131.793 284.841 130.697 284.243 130.597 cv
@
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVQ+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B77C8927A08D182562EE1D29F6404BED874DC716E1583F19FB
41A06DD983FEACFA9D859AFF33BAB4876DB81174B9979F885A27D346B382BE0A
63AC8AE1E62D3AC6BCCBA7CF084E96AFED144AD5F3FD3B198DB8EF2CA57A160E
332506AD3C1AB64B54B6702E93D4> |-
/p <1C60D8A8C9B752AB4715521239C264317F756C49624F60AC13CB00DFCEF2
47C012D0109DB1E2FD24F1BCB401A8BC7BEE58245FCA681AF32E2F330D373354
EACF42777388C5F4C5B52F282CCFDCB7607AE652842B44F180C493CA7BFBABE5
D3D2844002401B82250EBC32D66B58E369FFA49105574777A409279A078D6C75
833A24C344D1E3ACA9BE40E70FF484D5E2A8A76B30C19EB88F91ECC558583F8A
0571F1538A5828A14E57AAF924EC6DD8D16356E2447AC6506F09DB3CC60D682A
90093A37B69F0A87EB6C1EF27D83B4E06E8ACDF77F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVQ+LinLibertineTI /Encoding get
dup 111 /o put
dup 112 /p put
pop
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI*1 
[97{/.notdef}rp /a /b /c /.notdef /e 6{/.notdef}rp /l 
/.notdef /n /o /p /q /r /s /.notdef 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
274.037 127.339 mo
(p)sh
278.484 127.339 mo
(o)sh
.398 lw
0 lc
0 lj
370.877 91.8754 mo
370.877 103.445 li
@
.319 lw
1 lc
1 lj
372.471 102.25 mo
371.873 102.35 370.977 103.446 370.877 103.744 cv
370.777 103.446 369.881 102.35 369.283 102.25 cv
@
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
359.077 98.992 mo
(p)sh
363.524 98.992 mo
(o)sh
.398 lw
0 lc
0 lj
370.877 120.35 mo
370.877 131.792 li
@
.319 lw
1 lc
1 lj
372.471 130.597 mo
371.873 130.697 370.977 131.793 370.877 132.091 cv
370.777 131.793 369.881 130.697 369.283 130.597 cv
@
%ADOBeginSubsetFont: NAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVQ+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6C25602559E531BB8B64FE5EE7DDE09813D2846545AC0F6FF
F9A7584558CADDA9815939D9BFEF56137F5874693182D2251DEC169E43AB8F67
68382C7530599C50E703F8053F5F88E9A060109F49F670FBDB354D5A9719BC05
5C7B2D88A6B60B9F97E5C1E0A477A7D48B938A9C3F3C698602EA0C658FF1A66B
22948964D06FCA73BACCAC951D5C2D65B635DB39A02711B9CD2F3143586D6DC0
9F36B5115B0DB5D380E6078CC7A1F36B9BC7B45469E6CFE8C2B3471BD9695083
201E5749C1125B110D71C430AB84CF1BC26D1FA0113BC678DC448E348692551F
DC147CE425FA8775CD211CC2AF7EBED23EE67EE3C9BF81012993803978AB62B5
9FBE57F743707EBB7EDA56B0369A791E08744D6EFCADB7A532F7216245E27AAB
80E83C42606DE0C19ED908416CA7CA9F130B6AEA4A64E566838B25E41FF045DE
F6B292A15123F691F86938EBA6> |-
/w <1C60D8A8C9B625CE07B6637C0BEB4B159573AF2A893DFF4A903D0DAB7004
E29767EA647B9661C2FF1559B6627874CA34A22577A4164CE7CBDB25DF6B877A
5D1621BCD25D123F86300552B593010453540E84B8E770AB7A35E2771A600DDC
D68A6853D5328B3D635115C75AA9A7B174029EE294361A1633DEDAD83E38560C
1E5A7826E29606FB4672151895CA76CC1FC8F3EB210A6EC4F63FFE011E838FE7
2EF61FF497CDC34BFADDF0A4EF08E2F0614EAF9C863B436F988EFD587C253CF9
F01C7E65641E965349C5DAF2D5DC02FBEA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVQ+LinLibertineTI /Encoding get
dup 109 /m put
dup 119 /w put
pop
%ADOEndSubsetFont
/QOZGVQ+LinLibertineTI*1 
[97{/.notdef}rp /a /b /c /.notdef /e 6{/.notdef}rp /l 
/m /n /o /p /q /r /s /.notdef 
/u /.notdef /w /.notdef /y 134{/.notdef}rp]
QOZGVQ+LinLibertineTI nf
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
359.077 127.402 mo
(p)sh
363.524 127.402 mo
(o)sh
374.064 128.223 mo
(rmw)sh
.398 lw
0 lc
0 lj
370.877 148.697 mo
370.877 160.139 li
@
.319 lw
1 lc
1 lj
372.471 158.944 mo
371.873 159.044 370.977 160.14 370.877 160.438 cv
370.777 160.14 369.881 159.044 369.283 158.944 cv
@
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
359.077 155.749 mo
(p)sh
363.524 155.749 mo
(o)sh
.398 lw
0 lc
0 lj
455.918 120.35 mo
455.918 131.92 li
@
.319 lw
1 lc
1 lj
457.512 130.724 mo
456.914 130.824 456.018 131.92 455.918 132.218 cv
455.818 131.92 454.922 130.824 454.324 130.724 cv
@
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
444.116 127.466 mo
(po)
[4.44711 0 ]xsh
.398 lw
0 lc
0 lj
310.078 132.397 mo
345.776 120.495 li
.946685 .780606 0 0 cmyk
@
344.136 119.36 mo
344.421 119.896 345.745 120.4 346.06 120.4 cv
345.809 120.59 345.051 121.788 345.146 122.387 cv
.319 lw
1 lc
1 lj
gsave
[.949631 -.316589 -.316589 -.949631 344.136 119.36 ]ct
@
grestore newpath
%ADOBeginSubsetFont: LAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVO+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7B5770588B497E14C7506E338263C9E1D23C9617753D76106
781F210A4990999B6E92081E202362DB47B582B35B8B8061E2444CB1A5366E22
1B007DC220B2670FE6F3CA21007F74862D7EA2F80C9AD2414B4E58E57B433B15
D67D67AB59C8E33E9BB52604BDA434F276DFC9B6C5C997C1E2D4C3321657E339
929E2E95BF7EFDF02A9A2EE68B22A389347518B01749C0BC86AD58952DB42462
E62BE5D0499609754B9E71F98A6A507158ADAA1CE9D4196DCC96FD4274ACA45C
0A5A13C0DCD38ED6A3BB9E88D496F7B9834B133134307482FC1B3900B0ACDC57
3DACD06A1D224F9BD18C1A5EF968613EE544875D8A801E4B46F614> |-
/y <1C60D8A8C9B7A4C86FE5A073F24E2EDB48B00D54B739B2C8F3CD6318890F
714F5D93CBDB95127C016FC8EF1F7CEB6B366607759BEA442912CDFB0458C09E
3AEE339432778F6FD70F0DF8AA6D7E705C96EE297DAE85DC11296D34E6CE4685
52315AFED0434DEE57CD53E6400485A7566E33AA5EBD9864CF433D93CFE063B7
57096EF07BD1EB9C6E6D6AF882F32F3B40BB812E6502FA0708E2E5ACF1351D0B
8BD5CA6B5DC4D0742397237AC06DEB1C015F36AB98> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVO+LinLibertineTI /Encoding get
dup 110 /n put
dup 121 /y put
pop
%ADOEndSubsetFont
/QOZGVO+LinLibertineTI*1 
[60{/.notdef}rp /less /.notdef /greater 36{/.notdef}rp /c 10{/.notdef}rp /n 
/o 3{/.notdef}rp /s 3{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
QOZGVO+LinLibertineTI nf
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
308.708 119.501 mo
(sync)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVL+LinLibertineI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B784FA19132D8AF997F35EE1DA1861523B731AEE5C932ABF0A
E4242AF7550235CEB342E23419665073C7E0CCD41315D576611D35DE81486D54
6BC6E373A37896833219EB13C27CC36920CE26D7B0EF577A4064FA69DD3373E9
39708036FFD56E3C96B6AEC327CF33A569A26F08D54DD709790C8BC6B023C809
C4E6C3ACCAE8BFCF9D90516B5843825BEC8F9C0E91AC3402497148DA4AFE6E12
28D3D2446E7D966DBD37F5ACF366C7C5D334674BC1B8C85EDF43577361BB01FE
B5D5D83B26> |-
/e <1C60D8A8C9B760FDCDF83C56BE01966D5EA34E5C834A1F19998525E75713
A38A39E9655C91A638A1A14665BD37B7360025EC4EE4A31479E64577E0912125
6EF0D62E2026188BF2BB0A51C1DA5A5E74B4C0918D3186A798594B7F99E360B9
4AA15A1D7923C9181041677F27663D4D71E15FF039793A> |-
/l <1C60D8A8C9B8469EC15E2D4D75609901A3B1EB62E4875F1CD6795BBF5327
06C8A21BCD413B89ECA26B6BF059DEE247B5806B0F6B6597FD483A499991B326
7D5F59ABC0D63527DD358871F7D004503D08E552FAF504383DF6530133BE4E61
78392FCF4715C4BBD98C26F7B11A040C68FF598EB33A4B13F2DE3C> |-
/q <1C60D8A8C9B79C5FED858981D79725E8E5A5310CFDA71BF636D59E2210D3
103DACAB19617CCF7922FDCBDB967D7DE1FF970976B6FFF787DE5E685F7E0A8E
D98D8C7B925F75D0D023300071C0B5E34C1968BE9929D1552E5E988B8A1B6BE7
DD53F975D3189EF2853A719FBF3A45054EA93561773F42B17A5D4426893F92DE
E8B90B20FB53F4F0ED908C3E79AB9EF634F853A2435E0690926482DD68A49872
3B22DDB56D0CDA67009D0918125F0E33787A28B7555BC13389437CB24D853D11
269D5EEFA770CE52199A91770D755227CF5DE0EBAA77D4A96C34E3E1603AD528
8E> |-
/r <1C60D8A8C9B737EC4AD59EFDBDFD4A26C608B1F65360A217E64181514C75
103FD5C972E4516DA08362DCC0A513BCE1966F3C06FA55EE69EED6E1D60C08F8
BD4D0A7A106B253ACAF54B65BBB90D0E6A083EDE37AA731EDDA73EE9C2825F4D
7ACE72A6A0F5FFAAC8897BAFD3D035358FF9C62BFA41EF0707693F4436214921
B4A680E6D3AD424B8DF6E02791FC4CDA1C6CA9F1E2149AB0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVL+LinLibertineI7 /Encoding get
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 113 /q put
dup 114 /r put
pop
%ADOEndSubsetFont
/QOZGVL+LinLibertineI7*1 
[65{/.notdef}rp /A /.notdef /C /.notdef /E 6{/.notdef}rp /L 
/.notdef /N 2{/.notdef}rp /Q /R /S 4{/.notdef}rp /X 
8{/.notdef}rp /a /.notdef /c /.notdef /e 6{/.notdef}rp /l 
2{/.notdef}rp /o /.notdef /q /r /s 140{/.notdef}rp]
QOZGVL+LinLibertineI7 nf
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
324.458 121.465 mo
(acqrel)
[4.18201 3.68015 4.31287 3.73105 3.7601 0 ]xsh
.398 lw
0 lc
0 lj
389.063 89.8395 mo
432.049 104.179 li
@
431.419 102.286 mo
431.324 102.886 432.081 104.084 432.333 104.273 cv
432.018 104.274 430.693 104.777 430.409 105.313 cv
.319 lw
1 lc
1 lj
gsave
[.949631 .316742 .316742 -.949631 431.419 102.286 ]ct
@
grestore newpath
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
391.336 90.21 mo
(sync)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
407.085 92.174 mo
(a)sh
411.267 92.174 mo
(cqrel)
[3.68015 4.31287 3.73105 3.7601 0 ]xsh
.398 lw
0 lc
0 lj
[.398 1.993 ] 0 dsh
395.535 132.25 mo
432.049 120.076 li
@
430.409 118.94 mo
430.694 119.476 432.018 119.98 432.333 119.981 cv
432.081 120.17 431.324 121.368 431.419 121.967 cv
.319 lw
1 lc
1 lj
[] 0 dsh
gsave
[.949631 -.31665 -.31665 -.949631 430.409 118.94 ]ct
@
grestore newpath
QOZGVO+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
394.572 133.263 mo
(sync)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
410.321 135.227 mo
(a)sh
414.503 135.227 mo
(cqrel)
[3.68015 4.31287 3.73105 3.7601 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: MAAAAA+LinLibertineTB AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVP+LinLibertineTB dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B79D2DDE437EC30711B5E782E2840A49AA0D956F51B2AD5144
C62FCE9209E9D17C30AA762FE7DE38F76B59126F3BD2B94AFE789AD1AB45D229
A1FF54A35F8213882A7CCC74D8DBD82776C05F2A3B6E1E744287D50E2988C60E
650AE1E1B3F80B8CD3501B0AFEB3E886A851F78B3697004AACB4B41A84AAFA6D
BABA4355FE68309C845FF66A03D6C94FD6789C7B56C02D78CEA48B273BC776ED
F1AE68> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVP+LinLibertineTB /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/QOZGVP+LinLibertineTB*1 
[40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one 20{/.notdef}rp 
/F 26{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g 
/.notdef /i 8{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]
QOZGVP+LinLibertineTB nf
QOZGVP+LinLibertineTB*1 [8.966 0 0 -8.966 0 0 ]msf
261.517 190.492 mo
(\()sh
264.449 190.492 mo
(b\))
[4.85965 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.08256 0 0 -8.966 0 0 ]msf
274.369 190.492 mo
(The)sh
290.972 190.492 mo
(test)sh
306.548 190.492 mo
(compile)sh
335.885 190.492 mo
(dforPTX,withoutthereleaseannotationon)
[6.83911 2.81558 4.57761 5.61298 4.91364 5.4223 5.99451 4.23248 6.78464 2.46133 2.87003 4.88638 
4.57758 4.82288 5.10437 2.87006 4.88635 6.29425 3.30603 4.05994 2.39789 4.05994 4.15076 3.54218 
6.30334 4.15076 4.92279 4.92279 4.57764 2.87 4.15076 2.87006 2.4613 4.57758 7.15717 4.57758 
0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
261.795 201.608 mo
(the)sh
QOZGVK+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
275.702 201.608 mo
(RMW)sh
QOZGVL+LinLibertineI7*1 [7.273 0 0 -7.273 0 0 ]msf
296.979 198.353 mo
(SC)
[4.18921 0 ]xsh
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
307.222 201.608 mo
(.Notethegapbetweenthe)
[4.21402 6.2673 4.51883 2.83322 6.24933 2.83322 4.82364 6.24939 4.48297 4.09747 6.89484 4.50986 
4.00787 2.83319 6.62582 4.07062 4.00787 7.10114 2.83319 4.82367 0 ]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVQ+LinLibertineTI*1 [8.966 0 0 -8.966 0 0 ]msf
407.753 201.608 mo
(sync)sh
QOZGVQ+LinLibertineTI*1 [7.273 0 0 -7.273 0 0 ]msf
423.561 203.517 mo
(acqr)sh
436.034 203.517 mo
(el)
[2.91647 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f_f <1C60D8A8C9B7F51B6699E1A7352D6AE3586A9674814247C941EB6B9B57
CB6873A0C9465FDF328F5FEC335F2640C79BFAFA1E4A70CA868EFF78CE414CA0
AA76CAD082EBE01EAD056F689E484DCF6D8509239E9066C20CE4E93CAD75A49F
170FDB5953DE981D16F2D00C9B5D907332ACEA42EE2814D10CC4C8B2A17B2B7E
55530EB7DDF34587CEB4B07B478D1FD31FAB7DA3ED415BA206718E77FC9F4B20
E6F4C2E42167989CE76CB86C1A6EA254F996BE6CD200417D4544560EEB8EA136
9E26F9E40E7F90B6C80BF02172152BF983A014AF54328F5198D87A5F60F8130B
5E784EC40DA92A168CA62754B4800493BF8F55A9BCEB25FF27F6A36A20A22069
99012984945228DF09A8996B1335083223896C76C82BEC0A154658D49DD6140D
61B4E54A3E43497C9BC2CDB51107C3E12010CBD95C59B86BB636156A696E8632
5AFDB46D3555AD3848CB00E3F4683DCC4D5C6987B6955CA0ED8D9ECA6F41C64A
C322064F7919DB36D1C901667C568F93CCEA312B0871542561837A9D3D6F38> |-
/three <1C60D8A8C9B74A3E856A181C751C4977C45D75B4D5A848D42515A0FF
C131195D767A84E82F41A6B84082427BDA265B61B2654C121EF7C1F3F2F41A83
608B7598699BC438BAAE8A5CCBAD49F38B2B50ECD186450F04AB803A78105BBF
951055976F0A08FBA4A9D36C79772E8343320B97EC58D76D8B71D486792E9C3F
659116286B7696083370D557C243B75EAA55CF4197272C33315A1216B1CD8C78
63FF9FB53929D7179A322C69A0C6FB8A75827D089E6B7C0187A0B59242771848
8B241E> |-
/four <1C60D8A8C9B74A3E8D9B6E40768FEBA3E97CE10ABA9C8678023262E9B
CACCBA4EA8FA1D269A0254D1C73D395D7C9075AC5A8B360F8B7681BB43B820BE
B2C422E10ECB925FDA198572438AD1219C2F358F76B7C8D1F2E2368CFFE3625A
A35B2F5CB33A2062B9E86B7A54973A4F96ECDC1A16DF1F70F398644DBB015129
EA5D638E5C920AD4E552D42715961833360D85E29F852FB9BF8C7B9EAA061DEB
69A9B83A36C04B63B4F861C4C2FA1FA31DC3F3EA016B5> |-
/five <1C60D8A8C9B74A3E8458FAF84297A16A3A4CB100094D631F84571996F
21A7B37B5D0A321983B1FBD0BB4212117CC172557712AC0B85DEAD0138687867
10AED0E7F053793069C9E139C068E7ECCED2FB4CCC370C5A37974CA65D864ECF
543ABC71398DBCF9B01D7902D40BBD23903FF1FAB644F2569D1A547BDBE9E252
A9DE02BFB756E79CBD75A901FD0856B5CC271480A7208C5F50CAEB899252ABD4
7A078842A11A666F6C13542> |-
/eight <1C60D8A8C9B74A3E856A1813A481F14D195C5C3E6D7AD02F9FED0CA4
77DD5605C59C04BDE2B73815AFA4B5B8AEE20DE2D56FF42BD796962FC3F5366A
B7E7D136BD6D02A08EC5118A5EBA813C4CA2146B190F4126C145AAF51BA9D0D2
4B989A70205CE5415A851A045E2D4FB61D3F6CA52C87EABAFA37CEAADA098E8E
D9BFBE4BB932989EB6EAFB70644079DB5CB6F6011563BCE77E5ACCF4B9A1E65C
00384F435845CB24C98F03DE13670130> |-
/D <1C60D8A8C9B630AC42C06F0121B6448791961BC956EE75D34960037F9F95
512D8DEAD91853AA4AFE6E36B6E1A3848808A091E55077BC5E3F9A52DC8208DB
088EB11CC7A13DAB5F22056827505DC8C78B030345E55A4DCADCC25D095B65B2
1FDA71DDDEF245B2023AC69B4837C528355BAD818ABE0211CBF9678EB4C99F69
7EE75B51DF7B24C302EE501A514628D76008D176BDE99D232381A034369B6BEB
EF21F9D25FFEBAB85342772E4E5F2AD45164972DDD9393CEE62A0F123A801226
10> |-
/K <1C60D8A8C9B67031BECBB098099FEFE31FA94EE3D845B2D4A887FFB68432
B30BD5CC6BBDA745ED48AF0843639D186881DDF51DF25AAA05BD393D1F812378
96CCD11D022D60C544D5948A80B233CA2A2638459588E62F0A26EE202C513FF6
7A751A3CBD328F773135E4FC159F1AD5D8EDA0175C734810DEBEF3D2859FD390
49CA942619FEC4315F1B979816C41CA23E8B81A7844FE5BE8A558D1883232332
4340BDF1CA1958DCE5402622972EE55FBA00374597B1364E898B77885C771016
479F14BAA3702EA8ABC02F83A5411C5A6D7DA96AFE5D5E5BB98E02E907D1E399
EAAFB71B1B38B08A314DF2EF8049713777836815E2E5A92002F0AF51898D1763
1C5065673627670ECC91785D55A8DECEEE4F07843C2BF1643587068BC47ED882
29155CB88D978655E0614B3229ECD4136F1F5A14613C6AEDC60297843EA692E5
0C153186267912097345C378AC15F0> |-
/M <1C60D8A8C9B6BAE577E979693CB34EE49594A21E09AED32D9F31DF107181
4FE13BEC1FDAD26AC80E6C974FA5316CE50F421125A6483C64B2DAD60A7D4249
49B05DF69C51D8BFC5DB76A1FA05700624AFD0E7B34D4DE72514CBC9926485FD
D58A5C9DA75F85270ECA0CE3FD10C98CC72A00526E467A9F6C0018B00EB8AF09
12356D3251B7B352F73E1C38BE6D5D4F3FD340FAD49AA92CD2159205D9CBB027
70BDCFC92EC81719EF4E2F2442D05CA3B463E98EE79BBD26266486BD428AE612
F1D1A907AC4FB2524A144C7D166360C34B67E3866C37A9D07A40567F254DF278
AEAA9617F9197B8C8790F5ED736B2D68EC8E91B3275E005BEBC5A53E4A651CCD
4CC51972077D90FC211B3EFBF9> |-
/U <1C60D8A8C9B648F6706CE6546D87FAFF90B68C7D96E36929EE816DB921C9
5B580F2ECFAE67928D2B566C61BF0047E9BEDEF624B10529B894C340727D151D
93945356C991E39573C3F03C526FCFA3ECC3FF45D6D943E8581700BFCF0F8C7E
766A4F0B07D585697E0F0B9A6C1B9F6E1ED114F01CDBD66BC31B5D513D71AB29
BDD4960EBB786D5FFCA08E7BE058D3208308E4BA1FFD53DBE6D5EC3C6F484932
8F8518FF97FE658F8C4EA1480388367833FDFCE78B6E703F3C5CCD8418CE5867
5E65C9D8BFACA0E5491BA6904E8902F3F614173402C7BF> |-
/bracketleft <1C60D8A8C9B806F536850CC93CA780BE9C2175AF61314453CB
02871DAD5A231196382795315770CA8D3543AEA53EA940064CFB61388A275C81
4837D548C49A6823A6> |-
/bracketright <1C60D8A8C9B806F536847E1B0436679D933DABBBF1C6F3C8D
936D4C8EC92B624896EDF5178C398A7E286D424889483F8CD5956219ADA17335
ED21BBC73B3A1A83C78> |-
/quotedblleft <1C60D8A8C9B7248215E51529E3557596264E80FF0CB7231B9
04084C6F4EFB05AB3B7A4D8A27F08D1AFC703F69D6DC1C5A186D80CF16EFD5A6
E1B2C220548E4C2423CC3D2BEF0AC295AB5B20438F0F23A6C4FFE52558011159
38F5C3FC152C29C99870C1D6FAF8994738522FFC62B120D0D5CC6B47CFAE346C
BE54DBE> |-
/quotedblright <1C60D8A8C9B72482151FF7F63CA7CEB3FFD5D33B32F86519
9410C22C6334DD59382854A87F8385B5178510E1C7E21B5284B8C52A0C47B4E6
A91997E0A042BACB9D9E34F07B1DBAA2176A12955DE6B292C17A79E8775A0EE6
A83FDD8868600D5C205F4CC6CF0E039DDC9FBAA65386A2EBC642F945FFB44FEE
CF5EC4B7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 34 /f_f put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
dup 68 /D put
dup 75 /K put
dup 77 /M put
dup 85 /U put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 170 /quotedblleft put
dup 186 /quotedblright put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i /f_l /f_f 5{/.notdef}rp /parenleft /parenright /.notdef 
/plus /comma /hyphen /period /slash /zero /one /two 
/three /four /five /six /.notdef /eight /.notdef /colon 
6{/.notdef}rp /A /.notdef /C /D /.notdef /F /.notdef 
/H /I /.notdef /K /L /M /N /O 
/P /.notdef /R /S /T /U /.notdef /W 
/X 2{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [8.966 0 0 -8.966 0 0 ]msf
443.951 201.608 mo
(edges.)
[4.07062 4.53677 4.483 4.00787 3.4967 0 ]xsh
%ADOBeginSubsetFont: MAAAAA+LinLibertineTB AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVP+LinLibertineTB dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7B9B9AD522353F56D6BB648F0CCC02CF085526B2DD050C1
7A511CD81504E3B097ECE33B98836A7C4B1EAD1B406A2A3047C3CAA5311C8573
644D9263203F149D392F9E00C176E004AE68708CB8178AF3D9D8E4CD34A4AAE4
506D9F0AD4F570B83D61D5B4A04CB964FF9055749CEA2AC1414FB6C215E8972B
EBEF99FBD54071BA2C97FE3DF82E9A749B1740759FA50BBE69A10ED5280520A8
5BA695AABFC15570C788473B1A0A04F6DB7A99E7A31688ACA4D68921594FD9F5
D5AA7195> |-
/five <1C60D8A8C9B7B9B9A7063A0370A7E74A34502D9BB95204C59A1A4F5ED
32332380BF47755AB14E886D6F3354EF8CC12BB224B7EA6FCBC2FD9CF01A02F2
CD523FA7ACE4C0DA49853F67BADE43617AE524CABEC4546C5E90B723299CDBC2
441289043CF220C141EA9B48E748655B071E0AC6BF77B905E7E10E4B0C7E686A
BC221873CB6F27966BC444DC1583F3B2D19F2CA203D9749D8775115D4314C177
32C343C0158D9B0D95188B754650D9D7E10872EC4F6559E512E871A41C06B605
C775FF3A081307AC76F47837C0D1435308CECEC4E69FA54D9C32055759DF135F
56D> |-
/A <1C60D8A8C9B619181CBD95A0C3252F105DC88EEB90469CBDA281040E3224
474F5A89BB0C022C4A82E35F852D5E4D6FD29470B07BE7A8218692B2644384C3
F25FD057314A481255E572B09260AD4A4BE9AF9EF02736E7248BC3E7A03BEA38
1A0388D01490E13B8669D55E069D31FF8C40034E98AC82C5134518BC584CC1E9
8582005053C281E29E62BEEA0F0DC220E8DD9C946B46A1F2E17DAD17281F509A
65AD8D8575642F8BAC860AEC93FC1212A6DEE5964A81925C60E6C2427F3F9EF1
1070D2F3EF6FD75FFC73A6CC4EE8C2A3A64BC67C8AD0202442C4DBFE59EF4F80> |-
/C <1C60D8A8C9B6374B4C1A150282C6FD4021F8F77D614FC793AEA453689F6E
FD1F753EDC7533163E2171CEF1F72DCB555EF891BF70C9176A2F91DE81E15383
1598BBF22FD4E0CD414642C1F0686345E748FDD06193AEB07A738BE7C8F1FBF0
BA397DC85B6D1DA1911F746804782F9A2129D684ED75A51AE439> |-
/L <1C60D8A8C9B7FA130B84A2BC97897CE1A8BB70EA01DC5A123651F527CA5A
06A161B02B9E4C88456DC97BAACB1F5B695CC0C480E0A2B644A7D51685A52814
B076974872324832CFA66C7D119A85ABE190F13261059515C363F7E1C47CE35E
237604FDDE85E2FE2503EBE743FFC5BCBC28663E2FC535B3B0A22FF7A2D654AE
AD204B77D2D0D247F8A07CB7535F8EE5864C5336A8069529F8AD383F8C0BE94B
B76E841BDF28BBF6C99A6C0D75F4E1E2936A7CF3454042F5B8B5B756F38F87ED
1D5E84982B29352AD56F8E35FD80D2196ADE2D1A4F2CC510DD8F372997DF9E34
623FC7DAC1C687B22CB646> |-
/M <1C60D8A8C9B5859C6477B19466B096FC0DBCF5A767DDA6AF4175CABCBC38
F5802305D7C92BA48C8F0157BA89372AADFA07F49DD71D8371CBC7A28515BF92
7C6C6EA4DCEB1646226B9DB4AD049118CE245FA6E374FCE788030F6C7D1F7B82
1774D0FF834FE447EBC74F9916CF6DB999510608CCAFD1B46F417A2F64851301
DD22251D122FA40B52C0C507452BF49B0D5AE9E2F70080D658950AC16DBE7234
4D1DE23554BD699209523C8CDF631AE282DF87E9B6B3695890BFF904BA1BB677
597903FE7CFB179CEB55A6E5F06CB637EB6BBD74143FB81DF24CAEB56B347904
EE73ED2836812499B8F77045B97B735B365071E70E928F0BAD07> |-
/P <1C60D8A8C9B7D545095BDC4211B398CB7CDB1DE9C81FA75C57891FA37F03
FC512F6D683848027DB52CB7D57D25500E4219D208A2E6EE447ACA437A0AAB3F
2D787E4F549B4CD113597809684153B57C40CA6D24EAE688E63483B3BCD48090
17D3A54476CCB17802E5F78B3E20EAB980E7E11BC3EFD0B3847F2B2D06F6753F
68A08AD62253ED66DD30A232FCF946906F9C6008373839CA87C6FAB8B1FEE9CE
D0C08D6489CA63F4DACE3D2EA37415658CEF4961A3977C2346BF89C4535CBFF3
C4FCD4FE1D9B5507962F384E8A7EA05AE45D34F1BF252A3D8607BB72EBC2C44D
C4BE1C98396BBAE0DE952E2736ADACD423691AB01BEFE616E7EE28C3D11208> |-
/R <1C60D8A8C9B601B675DF8EF7C5F577F57A24DE2D708C2F810425F06ACAFE
C1D09B74319E631693DFE615A8B03FF67D8F1B50A2263EBAC4FEDFBCA433338B
23BD4B4E35B22B686D5F41C8430BC87B49674876E8D24415B38BFFC0BC9F07BF
A6219AECBC18FA6BC12BE9233B67ECB8FB620544EABCACA237116022ED37B869
9D65627C1CF35B70CF677FB2F435823C5670B117C4FC2D0B5E400A583B267529
7CB592CE532AFAFBCE809D4364A74C55BA97058DB8CDCD133A862C0C1288713F
B2421BCD406CE27B85E851C6553515A766B53BF950F4B83E4776043AAFB9682B
663D15CCB8D63A86C6DB48510FDE01ECC8D1A8EA94D353B245EDDE503ED34139
48159828C6347F21649CD0AF8CD565E948F03C9D760239DE56A09B0D104F041F
E92E9E80E984121D7364DDD477ED6CA20216AC6C6B23DAE57308A7232438C414
909BD66AC59D3FDAA4839B3DAD> |-
/T <1C60D8A8C9B6415B35B357322446E53FCBCF4C45915C1A952B1435894C9B
23564EC14DA2776CA39C0841F24FBC1C77E0D6B5A23416AE550725933C77746E
4E3F0BC4C370089FF0BFCBDC2616EFCCDD02A51558C3DF151C7BD3BC10F64709
8F71682DE7C80A3E4D5E472FDA1FBFD71D8DF6D880BD961FAFDAB3DE0BC38BB3
783416D4FAAA2693CC9C817446E6EFB28971622B4AFF3D34B9746091E38E1B7B
EB9D75A13A256DD060A57632B97BB4430CE301B7A34B5B8C6C80784A383294AE
AA0D86BDDF> |-
/U <1C60D8A8C9B611AF0507C815CAD1AEA069F923732E400D9602D8351D69AE
B29DC93763BEE411826805DBAA2B99B0062A4791AF60D42EE44C7487942EFEA6
4142AAFF4FBB5628684236E68AFFE768A060D079ED3A274C1D61771F3062B6E6
E7183E8769D8D297C8BCBD6E530B02A2E59C5B635A04408E12FD6E0A21170095
57D6BD9A50DB2557553729C1E16275BBEE7784DD0FA8BC76DE9E9B81BB2E32B1
B286F4935F8BCB3EC8F57A40BAC90FEC02903D3E8B278143936839AF91DFDE66
CACF1F0759B52BBDBD2A619CDAC7713920763EF5F25F122B29ED718E03FE1CBC> |-
/X <1C60D8A8C9B603550A8D8E74272087EE9131024A6E24FCD78AF11513CD17
889C17C618FE5F9A4019B1707398721C2DA6DB05426B9865D1528AE157430E83
BAAB3365284B78C2C1D2C71D32D4D96B8C339343D64A45BC04CEE410D9657832
B2B38A1E9F4246560231515BFCCF4E7C58447049A43EE01EBAC374BDF0721BAF
A989DED7B67B9FA3C4008D8D1F160733E23E5D606B62C697E29CB8CAADF67AF0
C8C42673F4CB81BDC0C1CCB535382131F57DBABDA29B80944C6512DA92F44A17
BB6EFE6A83C0B5EC5E5CB090EA27CE600EC72F2A21F1665986EFC96C270DF9BE
CA91F72619559D515E4E2EE59FB3022216D283FDF386EAEE768C6CE8EA0528F3
8D209D0BDA04B4DF0E0718787CDAE5C10C375AEF4898DF8032D0FE624584FE46
54CD32573A47D98EF63A0BD181CA970A14BA7A3A65E15FF580C36771300D691D
C94661B0F3596E4E6A8D1352021902B14F711260801D3AAF96E322CBBEA761BB
66D6EB036E7D87AEC3C7B87D63CA> |-
/d <1C60D8A8C9B7EA3ACD97469B05A104ACED2B626378BB7FBBE989DDF088D4
11174FDDC85272B194EBFA55A19532ED41420009EE7718D49EC90C3360BF6299
3C59CF27D6F581ED38FC7441723918090F07D181133AC18C2C0913A3527CD5F2
056041CF8E08EC984C0ADC550A7FD8A00BE29EE11ABF9B486887CF0D19D8594A
427547D50D27FA6AC0DFBCED2E4B850000A212C5255F2666DABEC1D0C82032EE
6BCC4D7B8934C298B3DB70B7D8F6E0C48C5A4A41AF243E56A182EC2589CCFCF3
9E61F81DFB4DFE4E7271EFEF5D6325D38621B02C824209015F064DA180B98DDD
840AFE6A684F8A54455D552F578CF012E1789E0B427FF59AB7> |-
/h <1C60D8A8C9B7D04D6635BA84196E09E44270747D2CB49AA2EC5DB4F40209
44436C0346A498C17C0DD2D754EC237BB969498A08BD17171436AC1712216A5D
BC14EF5D1F325F3DCD468EAF203043AF587F34476C908CD34B5A8EA9DF63283A
BAC63AB18EE409B75C53CF538F784AF8C4E0EAF1ABF6396C3530AE01A72DD4A3
AC33372ABE89EF0367F475842FDB069DEB897F59F2A825DCCC9E2A4FFB6FF10B
4600D831F6BCE303CA116427B68D7AA2C626E671C77AC76E1E45EA3B6E3259D5
D8E57B2AAB4DD38D1C5A9CDE86581641115C4113EB2BDE2C53FE619404B79FD3
24B0DC04DF67CEFA41FBBB9EF3424C935F9CDFF605F05A2DFBE5> |-
/l <1C60D8A8C9B827990CE548B898B6145A3364AE9DBC02316DDE234E395205
55DFD59E1D69CFAE5DBBEF81C9E46F62BC1591FEF6B2F18BD5B645A83F71EC48
1DA72B57E2C6ACF20DFB27AFD7A5259049E0758B6F228D592AD9F69E1FEBC1F8
E6BDA2AADAA9B9723FE723DDB413AF37202461FD8996E1580C2CA8F791C6D747
6D900C1112CF> |-
/n <1C60D8A8C9B7D3A60B31379A663E8A2F846A0D415DBFE129F231BD3D2993
0A4A80121F4828EAA2C37D276D7F5A993869A19837DD792315D9CA811B6D8885
32707550B30C510D4989102B292CBFD93D8C6986C22F43B7ED8BA88D0638BCB7
8F058C7519D7B3341206EE058DE02AF0EB4B0AA7BB0CCFB3F530A16E3060039B
10E1744C1EA753632DEA02D9E8C4A6E42A15D32D0983C287E943C92621A7370D
9AC301BFA04E6318DA3AB71E043E5EC4EF7AA67CA662F2378832377D28ACEFDF
518B7D4902FBEA26B487133286CB88699062323CC2E64E394855E26978EB35C8
BC02EADAC780E19334968798CFC408D4C1D3FA868590BA8B790BD1C58F2D5C4A
98392669F9773B21F74B1F5E6C18067B4116E66BEE57EDA866> |-
/o <1C60D8A8C9B794D34DBD4EED88CA69EFE58E5BD8AFBB83FD1E2BC584369D
0EE589F221958772FDB4ACA4F6937C31AEAF4A55D806E9E0A36575C1FBE0B158
FC3790EB9AF345CC009984F78126A029483BB140BF7F630E672D7930D742AB4B
73221DCA5AD56150> |-
/q <1C60D8A8C9B7FE5AD1E14D255DF87A872E2329438D690AED8D45669038B4
7517666187AED3DABB66941C76A97DDB59E40AA1DFCA3FE3C200BCFF506C30F8
9E40C46AC116FB10AFF8788B91FCE729B2C14E39F0D6FA836785E8054F0D742C
FC529D8EBBFB5858FDF77ADA3B943A45814EF5FE8D0583A0DAAA26C415C08FCD
E3214BCEB423F2CA5D28F0805FD66006C423F172A12BA966A3749FE66D4CD28D
2A5880A3C4D772A1C840D515C2EB4BC41C2562E065372327D22B5C7583969539
291A59AE> |-
/s <1C60D8A8C9B710635F024CE32F8477BA058AEE93D5034F1770A8123E05EC
8A27929A23205B389BB1D1668B341A12163D3223AE4F635132D0438A81B67081
0ADA289E9880A7FB0BABB3025D158662F6F91840759B732EF4C54D347E2FD785
6BD89A4E8BAAAFBE27CEBE60EC65D6E4D3ADD4EEA7788E8C0B9F909257B59CE0
ED988B2C8B81D147EADBB7BD4AADADBB5F3C1F911B92F71B31DACEE80537090F
2D7449CB3D520791494BC77AF3DF5C5B064D4D06C5DC9B48BBE4A201E4CB2F99> |-
/t <1C60D8A8C9B80456E33E0A1A7AEE6CDA51C0A17FD3BDF87D3808398611FF
AC0B1B15487768E6947FD6913EE016DE3B850B6EC2F6FAD4DAD349E7474E1427
F237DFF81483D5A225D0D5BDA233C2469A7430B90324029A665F005D840CC213
6A7277A26E79C1773C2A40C1A8ADD7D9821CA0488BF2EACE0E547E03AABD89F7
8D6696539466B8C561A5DB42643AE03E3AE4CD5996D19F> |-
/y <1C60D8A8C9B7EDAF8883374BDBBA26087CB6FECE8BB5512287EB53E5272F
40BFC1C7CE8692FECF817836E484CFFF1B40DB82390E6950AD60833A94CAA913
A1833E2245DF66790E9283FBD3B317AF25C43FA48B11AB0A0B98484B95813AB5
46AD9192AF671EB9C6E54844D82D87DA999D57F214D19547F243864F3959AC52
338E2B0171068013FBCA292C12ADAD74E529E8437300B9CF0369AFE5101EDF23
ABC97C63B17332210B5F5DAFA4292C5F84D9C3698F82B1938866C8280331C215
0206B15FCAAE424F79724A93378E541DEFCD1C0B5473DF376083C723919608BA
5A3CE1B9BB432839437E46AB45E08B2C1DFC9A041E3944375ADE4C820AD4B3B1
0C094CB6F43168B1> |-
/z <1C60D8A8C9B77771C383140451BEA59F49E6BED1049D2743B71B0B1AFB96
EE2BA2134D102F58795EE0FAE54B3F81DBB7479C25C5D20B7713375474C0B9B6
EE9C8152424523C7D62BB9AAAC91D61C541047D39C852B7CCF52CD6296E3FC53
B21C16DF6F081A51B29E2AA9CBCC0D82D0128614D965401F02EA07B0A96A3821
7B9159ECD57050513C629FA7828DBEA173D73241E119BF1DB06637A19868322A
A216726B0DB43CC6F725A97001> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVP+LinLibertineTB /Encoding get
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 67 /C put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 100 /d put
dup 104 /h put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
/QOZGVP+LinLibertineTB*1 
[40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one /two 
2{/.notdef}rp /five 11{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
5{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /.notdef 
/T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /.notdef 
/d /e /.notdef /g /h /i 2{/.notdef}rp /l 
/.notdef /n /o /.notdef /q /r /s /t 
/u 3{/.notdef}rp /y /z 133{/.notdef}rp]
QOZGVP+LinLibertineTB nf
QOZGVP+LinLibertineTB*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 225.572 mo
(Figur)sh
285.766 225.572 mo
(e12.)
[7.76114 5.12106 5.12106 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
309.085 225.572 mo
(AvariantoftheISA2litmustest,usedhereto)
[9.94891 5.0506 4.64417 3.7803 2.75394 4.64413 5.50803 6.09729 5.12177 6.03638 3.21118 5.46725 
7.42868 3.01816 4.92871 7.06284 7.61151 2.68289 2.75394 3.21121 8.02814 5.39621 6.84937 3.21121 
4.54257 3.96332 3.21118 5.12183 5.39618 3.96332 4.61371 8.02814 5.46722 4.5426 3.69904 7.42865 
3.21124 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 237.527 mo
(analyze)sh
295.231 237.527 mo
(the)sh
310.684 237.527 mo
(mapping)sh
349.021 237.527 mo
(ofRMW\()
[5.02133 5.57925 5.84836 8.35898 9.47485 0 ]xsh
%ADOBeginSubsetFont: KAAAAA+Inconsolatazi4-Regular AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVN+Inconsolatazi4-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7A73DB5AE08A8EED61B5B6516671EF12815F3558772D3DE27
13F28C03282B1A3FBE0C0C8BE0E45F2C1CD303BEE79DE2E02F364041BED8E209
B8CD481768130962FF92DBE5BB61C6078D98565655097A824C0718BC321D48E5
43126873E131B0E32AC6280FAD75561B85922AACF16FCCC8224AF60D76F02401
B01E041D1D09EBE354D4965E7483F8E05B278B4053B3C9F18752E4C0663E151E
3986A22489750744C8304DF2EF50150E2D006906207973DBA5BC470FB132F410
EFEBA1C6501E77FC3CD3D3846B6D44AEC0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVN+Inconsolatazi4-Regular /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/QOZGVN+Inconsolatazi4-Regular*1 
[46{/.notdef}rp /period 12{/.notdef}rp /semicolon 35{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f 2{/.notdef}rp /i /.notdef 
/k /l /m /n /o /.notdef /q /r 
/s /t /u /.notdef /w /x /y 134{/.notdef}rp]
QOZGVN+Inconsolatazi4-Regular nf
QOZGVN+Inconsolatazi4-Regular*1 [9.963 0 0 -9.963 0 0 ]msf
386.273 237.527 mo
(memory_order_seq_cst)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
485.903 237.527 mo
(\).)
[2.96899 0 ]xsh
QOZGVP+LinLibertineTB*1 [11.955 0 0 -11.955 0 0 ]msf
261.795 281.638 mo
(5AnalyzingPTXUsingAlloyandCoq)
[18.0999 8.84677 7.36426 6.04919 3.88535 6.67087 5.40359 3.84961 7.36423 9.21725 7.34036 7.79459 
11.5724 8.75101 5.1048 3.84958 7.36426 9.21725 8.84677 3.88531 3.88538 6.50345 9.65964 6.04916 
7.36426 9.69556 8.44016 6.67084 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
261.795 296.582 mo
(Inthissection,wedescribetheAlloydomain-speci clan-)
[3.01816 8.25183 3.21121 5.46725 2.75394 6.6969 3.96329 4.61374 4.34937 3.21121 2.75394 5.12177 
5.50803 4.97952 7.50986 7.28638 5.14209 4.5426 3.96326 4.34937 3.78033 2.75391 5.10144 7.28638 
3.21124 5.46722 7.28641 7.06284 2.68292 2.68292 5.0506 7.96722 5.14209 5.12173 8.02811 4.64417 
2.75394 5.50803 3.43481 3.96326 5.34534 4.61371 4.34943 2.75391 5.69086 7.0932 2.68286 4.64417 
5.50806 0 ]xsh
261.795 308.537 mo
(guage)sh
289.843 308.537 mo
(\(DSL\))sh
316.631 308.537 mo
(and)sh
335.228 308.537 mo
(its)sh
348.459 308.537 mo
(use)sh
365.674 308.537 mo
(indescribingaxiomaticmemory)
[2.75394 8.81076 5.14206 4.5426 3.96329 4.34937 3.7803 2.75394 5.00995 2.75394 5.50803 8.39404 
4.64413 4.97958 2.75391 5.12177 8.02814 4.64417 3.21118 2.75397 7.6521 8.02814 4.5426 8.02808 
5.12177 3.93274 0 ]xsh
261.795 320.493 mo
(models.TheuseofAlloyallowsustoempiricallytestour)
[8.02811 5.1929 5.14206 4.5426 2.68292 3.96326 4.9592 6.06689 5.46722 7.26608 5.39621 3.96329 
7.26608 5.12173 5.87378 7.06284 2.68292 2.68292 5.05063 7.95703 4.64417 2.68289 2.68292 5.05063 
7.59113 6.68677 5.39624 6.68674 3.21121 7.84525 4.5426 8.02811 5.27417 2.75397 3.78027 2.75394 
4.3494 4.64417 2.68292 2.68292 7.95703 3.21118 4.5426 3.96326 5.93469 5.12177 5.39624 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.795 332.448 mo
(scop)sh
279.838 332.448 mo
(edC++mappingaswellasotherpropertiesofthemodel)
[4.4328 6.95175 6.30734 5.37009 7.38141 7.71329 4.46204 5.06735 5.06735 2.64594 5.29202 6.89322 
4.46204 5.81918 7.21533 4.36444 2.57773 4.58902 4.46204 5.81918 4.92093 3.08527 5.25284 4.36447 
5.64337 5.06735 3.55392 4.9209 5.13574 4.36444 3.63205 3.0853 2.64594 4.36444 5.81915 4.9209 
5.03809 3.08527 5.25287 6.37573 7.71332 4.98926 4.94043 4.36444 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.97296 0 0 -9.963 0 0 ]msf
261.795 344.403 mo
(uptoacertainuser-de nedinstancesizebound\(usuallyin)
[5.29572 7.65921 3.1514 7.51959 7.04089 4.26837 4.45798 3.7099 3.1514 4.55765 2.70264 7.88867 
5.29572 3.88943 4.45798 3.7099 3.37082 5.0463 4.45798 5.58484 5.40543 4.52777 7.52954 2.70264 
5.40543 3.88947 3.1514 4.55765 5.40543 4.26837 6.9512 3.88943 2.70264 4.22852 6.94122 5.01636 
5.02637 5.29572 5.4054 7.52954 2.97205 5.29565 3.88947 5.29572 4.55762 2.63293 2.63293 7.62933 
2.70264 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
261.795 356.358 mo
(the)sh
277.861 356.358 mo
(sin)sh
290.097 356.358 mo
(gle)sh
305.249 356.358 mo
(digits)sh
331 356.358 mo
([)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
334.62 356.358 mo
(35)
[4.63275 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
343.885 356.358 mo
(,)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
348.971 356.358 mo
(58)
[4.63275 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
358.236 356.358 mo
(]\).)sh
369.973 356.358 mo
(Results)sh
402.544 356.358 mo
(ofthisempiricaltesting)
[5.12177 6.00589 3.21121 5.46722 2.75394 6.80872 4.5426 8.02811 5.27417 2.75394 3.78027 2.75397 
4.34937 4.64417 5.53851 3.21124 4.54254 3.96332 3.21118 2.75397 5.508 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.0925 0 0 -9.963 0 0 ]msf
261.795 368.313 mo
(areprovidedlaterinSection6.1.Toenablethistesting,we)
[4.61227 3.67365 7.00427 5.23798 3.67361 5.02606 5.0159 2.73505 5.10678 4.57199 7.60971 2.66452 
4.61227 3.18918 4.51141 6.24719 2.73505 7.96307 4.8949 4.58203 4.31955 3.18918 2.73505 5.08661 
7.96307 4.69296 2.22037 4.69299 4.72333 5.3894 7.58954 4.51141 5.47021 4.6123 4.97559 2.66449 
7.00427 3.18918 5.42972 2.73505 6.42889 3.18921 4.51141 3.93604 3.18921 2.73505 5.47021 5.04626 
4.7132 7.45831 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 380.268 mo
(presentacompilerthatconvertsAlloymodelsintoCoq,an)
[5.17078 3.62646 4.45352 3.88556 4.45352 5.40002 5.63901 7.03387 4.2641 5.02133 7.87073 5.17075 
2.69995 2.63031 4.45352 6.19693 3.14825 5.36002 4.5531 5.63901 4.2641 5.02133 5.40002 4.87186 
4.45349 3.70618 3.14825 6.37634 6.92435 2.63031 2.63028 4.9516 7.61176 7.87067 5.09106 5.04126 
4.45352 2.63031 6.37631 2.69995 5.40002 3.14819 7.51208 6.4361 5.09106 5.01141 4.68268 4.55304 
0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.795 392.224 mo
(interactiv)sh
299.961 392.224 mo
(etheoremprover,andthenweusethattooltobuild)
[6.27817 3.08527 5.25284 4.4328 4.9209 3.55396 4.36444 9.62701 5.06732 3.55396 4.85254 4.77441 
4.36447 3.03647 4.07147 4.46204 5.29202 6.85413 3.0853 5.25281 4.36444 7.20575 7.21533 6.27814 
5.1846 3.80783 6.27814 3.08533 5.25281 4.46204 4.99896 3.08533 4.98926 4.9209 4.49133 3.08533 
6.83459 4.81348 5.18457 2.646 2.57764 0 ]xsh
261.795 404.179 mo
(amachine-checkedproofthatourmappingfromscopedC++)
[6.62958 7.71329 4.46204 4.17883 5.25284 2.64594 5.29202 4.36444 3.30014 4.1788 5.25284 4.4328 
4.17883 4.99896 4.4328 7.10797 5.06735 3.55396 4.98923 4.92093 5.20404 3.08527 5.25284 4.46204 
5.25284 4.9209 5.18463 5.79959 7.71329 4.46204 5.06735 5.06735 2.64594 5.29205 7.04941 3.02673 
3.55392 4.92093 9.88083 3.80786 4.17883 4.9209 5.13568 4.4328 7.10797 6.30737 5.37006 0 
]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 416.134 mo
(onto)sh
282.877 416.134 mo
(PTX)sh
303.281 416.134 mo
(issoundforprogramsof)
[2.69995 6.37631 3.88556 5.02133 5.29041 5.40002 7.53201 3.0885 5.02133 6.19693 5.17075 3.62646 
5.02136 4.98148 3.70618 4.5531 7.8707 6.37634 5.0213 0 ]xsh
%ADOBeginSubsetFont: LAAAAA+LinLibertineTI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVO+LinLibertineTI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7551CBDC4D92ED46752CA03F33166ED904EB79369163706EE
9D9D75BA69026571F2B01F23C25627958CF9D376125357FB36F7C4937F7D9D66
568B59A8FFA6E4512C0702749138C628112CEB81446B3B0B4F4DB98761E125F4
69B0E5906457B39EA32629962DB382230426D729B29022D0FD8FE84208E7FD30
251C22F74174E3966B6AE39C2CEBCAAF6E40A563BAA8F2BF30BFD44AFD> |-
/e <1C60D8A8C9B70A9A18F7184021E3816740F535EF2C41EC680BDA0FC0E886
EDC63838624975FC710D0AD54DE237D6FFBD6C5AAF252094BDB357219FB44821
069BA515EFD6FCC3AA51D8113EE04C5A41B3A6458A97921085E683ED50975EEF
E557C55730B9284BC19024A73398EFC92CBF6F55> |-
/i <1C60D8A8C9B85677F50A7E2F72AB50FC7A9201223CDCC08C42FB97A4D974
E1828E3A09ACC7C8D0AFD79853606215F83E77C5AA4C00117C060D06F742CFB7
FC94A5CBAFD3F6FCEF885142E3BD856B76215C4A648757BE9D84F6FFECAC3DC6
A0C2736A886F574F55EB771C511C959F17AA9C68C2EC36C2085AD760D293488E
C07846CAF537AD4D6160571434C92344732A71C14925E8B67EA192D2ABDAFEA8
87D730CF15ACF9C8029C405FA3F57E5920D119> |-
/l <1C60D8A8C9B86086155F726C13518AE77D018C979CD61851A3A9F322CDE4
B74426CCC9D7835B9A957A89AA9C4ABD6887E5A56CD3548F212AF084D52F3FA4
7EB8FCDB3A4AB34A4F204D29CC4932C101C3BA65CCE9886516BEB1A8CF99D166
A50816F22C467272E4AF4E181B4033CA8E6E756549766D7DCCE7> |-
/r <1C60D8A8C9B807CA2DAA5BE2879CF03E62803AD16F98B94D9480628E1D4E
74C0E6D9947100EF2FEEF786C01DCFAAB3D5A6A86DEF422B78BC4BE7CFB69827
339E2CDFDD097E230E3FD60BB9541CA3892D16868BC05305FA1A0AB2B9E6478C
A089B635E4624B081D65C26C9333920604E4F6FBDC00FF29402F07A4867CDA3C
079E8B56F9E62B388615D8E475FE91EB> |-
/t <1C60D8A8C9B8391571A7D9B2933FC165BDFFAA3EB5E5498F83BEBC59DAD0
D368090CC6367D494BC1C69225133C1DDE2EFBADB52DE573BCBAB10F9E350395
EBE2207BBABA136C41F6BC9BCE8FD7F6A4C685FE837A969798DC04136BA4DD1F
E03A7DD37A7104C30DD3F6C11973B80902F01F99E4089AC4C094E969B1E41F23
B7CD25E1535F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVO+LinLibertineTI /Encoding get
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 114 /r put
dup 116 /t put
pop
%ADOEndSubsetFont
/QOZGVO+LinLibertineTI*1 
[60{/.notdef}rp /less /.notdef /greater 34{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 2{/.notdef}rp /w /.notdef 
/y 134{/.notdef}rp]
QOZGVO+LinLibertineTI nf
QOZGVO+LinLibertineTI*1 [9.963 0 0 -9.963 0 0 ]msf
405.695 416.134 mo
(any)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
423.2 416.134 mo
(size)sh
438.364 416.134 mo
(.)sh
QOZGVP+LinLibertineTB*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 440.96 mo
(5.1)sh
284.431 440.96 mo
(The)sh
304.457 440.96 mo
(Allo)sh
323.725 440.96 mo
(yRelationalModelingLanguage)
[8.05008 7.13354 4.87189 3.23795 5.04126 3.56677 3.20813 5.48956 6.13721 5.04123 5.7287 8.95676 
5.5593 5.58929 4.87189 3.23795 3.20813 6.13721 7.68143 5.74863 5.04123 6.13718 5.19067 5.95795 
5.04126 5.19067 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.446 455.904 mo
(Allo)sh
278.24 455.904 mo
(yisalanguagefordescribingrelationalmodels[)
[7.09824 2.64594 5.87778 6.53195 2.5777 4.46204 5.29202 4.88187 5.1846 4.46204 4.88187 6.43436 
3.02676 4.9209 5.70197 4.9404 4.36447 3.80786 4.1788 3.63205 2.64594 4.81348 2.64594 5.29202 
6.95181 3.55392 4.36444 2.57773 4.46204 3.08527 2.64594 4.9209 5.29205 4.46204 4.64758 7.71332 
4.98926 4.9404 4.36447 2.5777 5.87775 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
469.433 455.904 mo
(30)
[4.63275 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
478.698 455.904 mo
(].The)
[3.47589 4.21796 5.82898 5.25281 0 ]xsh
261.795 467.859 mo
(underlying)sh
307.977 467.859 mo
(logic)sh
329.536 467.859 mo
(for)sh
343.459 467.859 mo
(Allo)sh
360.252 467.859 mo
(yisa!avorof rst-orderlogicbuilt)
[7.37164 2.64594 6.16089 6.80536 5.27234 4.46204 4.77441 4.9209 5.97534 4.9209 5.37982 5.46765 
3.63208 3.80783 3.0853 3.30011 4.9209 3.55396 4.94043 4.36444 5.97534 2.5777 4.9209 4.8819 
2.64594 6.52209 4.81348 5.18463 2.64594 2.5777 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.7737 0 0 -9.963 0 0 ]msf
261.795 479.814 mo
(aroundthenotionofa)
[4.46658 3.55759 4.9259 5.18991 5.29742 7.44751 3.08844 5.25821 6.86121 5.29739 4.92593 3.08844 
2.64865 4.9259 7.7995 4.92593 5.53189 0 ]xsh
QOZGVO+LinLibertineTI*1 [9.7737 0 0 -9.963 0 0 ]msf
353.995 479.814 mo
(relation)
[3.41098 3.91925 2.59988 4.74994 3.00058 2.69757 4.3689 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.7737 0 0 -9.963 0 0 ]msf
383.805 479.814 mo
(:asetof)
[4.80859 6.96866 3.81174 4.3689 5.58075 4.9259 0 ]xsh
%ADOBeginSubsetFont: OAAAAA+LinLibertineI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OAAAAA+LinLibertineI def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,\\012Open Font under Terms of following Free Software Licenses:\\012GPL \\050General Public License\\051 with font-exception and OFL \\050Open Font License\\051.\\012Created with FontForge \\050http://fontforge.sf.net\\051\\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011) def
/Weight (Book) def
/ItalicAngle -12 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
def
/FontBBox {-87 -238 1011 767} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 429 442 460 474 567 578 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 567 578 645 658 688 698] def
/FamilyOtherBlues [-235 -227] def
/BlueScale 0.0366666 def
/StdHW [39] def
/StdVW [76] def
/StemSnapH [39] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/n <1C60D8A8C9B7B5770588B497E14C7506E338263C9E1D23C9617753D76106
781F210A4990999B6E92081E202362DB47B582B35B8B8061E247D0F1B9B92D4A
F4C3A8DC5C57CC11C26F7032FC6B3FA41CE37A2F46BEA81D5CC6C163E3E5AA63
2D453AA3D003B6DDFBAEF7B703947BF00272A187430B3B6FD4EF87C03DB4DD15
2A264FC75C5113B4B7A22FC14F3EA8E67C7C60A447BD05CD7E4E08BACBB7FC6D
6AAB426A4E0C859B166D1E2F612CA518CE1DD0B005697C74B5017621E901A5A4
74E6BBD9A7FC31D702A6CB0837867B3D35CBD751799DC7A678754E43400D2EFF
D944CAE87252AF4A0D9B55577C2F227F078046CBDF947EA70213A67A63C8A95C
63CEB19A3911764F43E36578> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVR+LinLibertineI /OAAAAA+LinLibertineI findfont ct_VMDictPut
/QOZGVR+LinLibertineI*1 
[110{/.notdef}rp /n 145{/.notdef}rp]
QOZGVR+LinLibertineI nf
QOZGVR+LinLibertineI*1 [9.963 0 0 -9.963 0 0 ]msf
419.401 479.814 mo
(n)sh
QOZGVJ+LinLibertineT*1 [9.7737 0 0 -9.963 0 0 ]msf
424.861 479.814 mo
(-tuples)sh
454.778 479.814 mo
(ofprimitive)
[4.92593 5.53186 5.07257 3.63574 2.64862 7.72119 2.64862 3.08844 2.64862 4.76953 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
260.669 491.769 mo
(\252atoms\272)sh
294.237 491.769 mo
(inthelogicaluniverse.UsingKodkod[)
[2.64594 7.54745 3.08527 5.25284 6.61011 2.57773 4.9209 4.88187 2.64594 4.17883 4.46204 4.8331 
5.1846 5.29202 2.64594 4.77441 4.36447 3.63202 3.80786 4.26682 4.39371 6.4538 3.80783 2.64594 
5.29202 7.1373 6.02417 4.98923 4.94043 4.99896 4.98926 7.19586 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
448.182 491.769 mo
(54)
[4.63275 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
457.448 491.769 mo
(],theAlloy)
[3.47589 4.4035 3.08527 5.25287 6.61011 6.78583 2.5777 2.5777 4.8526 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.91319 0 0 -9.963 0 0 ]msf
261.795 503.725 mo
(toolconvertsmodelsintoSATformulasandpassesthemto)
[3.13251 5.06561 4.99622 5.09546 4.2428 4.99622 5.37302 4.8475 4.43124 3.68765 3.13251 6.34442 
7.83136 5.06561 5.01602 4.43127 2.61716 6.34442 2.68643 5.37305 3.13251 7.47452 4.80789 6.2652 
8.39648 3.07306 4.99622 3.68765 7.83133 5.26398 2.61716 4.53033 6.34445 4.53033 5.37299 7.49435 
5.14493 4.53033 3.86609 3.86615 4.43127 6.35431 3.13257 5.33319 4.43127 10.3096 3.13251 0 
]xsh
QOZGVJ+LinLibertineT*1 [10.0128 0 0 -9.963 0 0 ]msf
261.795 515.68 mo
(ano"-the-shelfSATsolver.Anyinstancesorcounterexam-)
[4.57587 7.90018 5.04645 5.82745 3.38431 3.164 5.38684 4.4758 3.38428 3.905 5.38684 4.4758 
2.64346 5.58713 4.8562 6.32819 8.46082 3.905 5.04645 2.64346 4.89618 4.4758 3.13394 4.67599 
6.95898 5.42703 7.63977 2.71344 5.427 3.905 3.164 4.57584 5.42706 4.2854 4.47577 6.37817 
5.04645 6.20786 4.28543 5.04645 5.31683 5.427 3.16406 4.47577 3.64459 4.4057 4.90631 4.57593 
7.91003 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.795 527.635 mo
(ples)sh
279.682 527.635 mo
(aretranslatedbackintotheirrepresentationintheAlloy)
[4.46204 3.55396 6.43436 3.0853 3.63205 4.46204 5.29202 3.80783 2.57773 4.46204 3.08527 4.4328 
7.01035 4.81348 4.46204 4.17883 7.07864 2.64594 5.29202 3.0853 6.99081 3.08527 5.25287 4.36444 
2.64594 5.70197 3.55396 4.36444 5.06732 3.55396 4.36444 3.80786 4.36447 5.29202 3.08527 4.46204 
3.0853 2.64597 4.9209 7.36191 2.64597 7.36194 3.08527 5.25281 6.43439 6.78589 2.5777 2.5777 
4.85254 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 539.59 mo
(modelandpresentedtotheuser.)
[7.8707 5.09106 5.04126 4.45352 5.12106 4.5531 5.40002 7.53198 5.17078 3.62646 4.45352 3.88556 
4.45352 5.40002 3.14825 4.52325 7.53201 3.14825 7.51208 3.14822 5.36005 6.94427 5.29041 3.88559 
4.45352 3.11835 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.0626 0 0 -9.963 0 0 ]msf
271.758 551.545 mo
(IntheAlloyDSL,a)
[2.98859 7.94955 3.17972 5.41364 6.99359 6.99362 2.65659 2.65662 5.01117 7.6778 7.05392 4.8804 
5.31305 4.70932 0 ]xsh
1 .903593 .0955215 .455177 cmyk
%ADOBeginSubsetFont: PAAAAA+Inconsolatazi4-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PAAAAA+Inconsolatazi4-Bold def
/FontInfo 7 dict dup begin
/Notice (Created by Raph Levien using his own tools and FontForge. Copyright 2006 Raph Levien. Nine glyphs at end of font file were added using Fontforge and are Copyright \\050c\\051 2013--2016 Michael Sharpe. Released under the Apache 2 license.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.000999999 0 0 0.000999999 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 71 /g put
dup 73 /i put
dup 83 /s put
def
/FontBBox {-12 -190 517 860} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-18 0 467 477 623 639 675 675] def
/OtherBlues [-173 -167] def
/StdHW [96] def
/StdVW [112] def
/StemSnapH [85 88 91 92 96] def
/StemSnapV [101 112] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/g <1C60D8A8C9B7A73DB5AD213694469C3AB8BAE7FDA2685C9B07D6DE30EC54
0FB7C45D0E7C586D7F532966B6FD74CB028D2460D307FBA5F6DADA3B829B79EC
08BE43E345EAE7B70B756C04B60F68BD647F03594006FAA42173EF8BDDAB36A4
2B5BE978F660075C7E3C7572FBA8F8477F2EA6F71EC8417EC821BD1F08E6E84F
D4EE4B96C39B0037A63AA5B1C2B44DFDF083437E372ECD98F41D0D25AAC2EB87
C52BE98D8011740B9AEDE5832AECF312DF6793961CD180136AAF932811AEDEB1
4BD136EED72CF4C236668F69EBF0E1784296BE003F70886727AA07B2263741C1
DCE1311799A2E352DE0629DBF1C53A8078AC655E6C1FBE53816F33F820F37CED
88DF511AD7A18EAFD09E7F9AE93BB7949F0FFBD1E1D2960491FC758E5A554943
0DA36799064AA40B98500A7F4CB932E0465A138A96DBAA59869ECFF9D7B3E901
D0D2128A4F7FF267B71D8C7ED3FE4FBE8FCCCD09A80221B4985FEF8FDB17700A
44E50689CA68B326A1444B47100F6EAA46E331E39ADD99F4AA4F8B0BBAC6A8E6
0489A224A56ADF44D192A09DF8BDDB551C402267F15019E3859536138E6ED222
B6A6EBC9725DD843F12FAC24B07B4C3BEC6ECE073B78DB8E67FE8CCBBB563DD6
2CE084D8FD2D91CA79348238A5337D9A2988ABA979673A78B019896B779ABF5E
0E939CDA195F8896A5A2172F1FC99AC65FC65D32B726343623D3CFF5C6D6E53D
0ECA38FB25A2B5771E0B1160089C4AEC438B776EB0C38122CCA7B37B23C5D594
B832D8ABF14CE6FD55E66E050584080DDD32F3F33F5FC107AB6AEB0190F3E860
829CA4B9F879F83DDEBF733439256F177F6A4F46500C7BF86DC47A055AEBFA58
9BC342730F9501A4F3E17130B7861D694876FD709612BFB953CF7225EAD1750C
D8F844DA4BD54F7F722F40E1BC98332B5C322F88D3A87F858EFC4868B004E488
D4A2E5E76FFD8DEAA1D03635679F2F3CCD65DC352FE42502155BD00D5EEB5F4A
13> |-
/i <1C60D8A8C9B7A73DC531A8EBFB38E55065002F308964F8448AA5D7C5006A
FAAC75FEECF78208BAACFA95B74AEF1C8E7030A1847FC506C977FC8B35984DBD
A9A25F078431ADF578E7A3EBAB39417D7986E6EE6FD2BA78F21EE068C332BA4A
A5D5C3CE798EBCD5FABA5C30EE9DB461C175E35D436446617E55BBD0E6CA38BE
F89ABE83C7EFA047BCF066729190326A8B42FFF58101722E07AD907249D20277
C1C78EE187BD73085067A6DF18B816EF4DBBAC1FE28EFE33073FCF83F09EBED5
B4F3> |-
/s <1C60D8A8C9B7A73D35526B5DE3C3DE4CD30B7B186AF426366559A6FA934B
49286EDE68DA056D70695C6AC35DC343B2D442C6BAFCD9FCC2189F6A2D5DFB99
AC5049B6D5F47699450028FBD7D7CBD1FC8ECD096E9457A4003EC2CFAA0BB0CD
036C0EE5601368031261A8443B141F0357C77B6A3FA1F431E64EB33B036AF5DC
663D2AF11578F2ED8060285F2DC66C98B5B9143A16517C45EC3AC7F34ECBEEDC
7B8A2BB6FD67B1EED1513BB31A3DA8730888F9E25B8E69ECC4004A0457613E49
0B4941C88CF90BF657DF8D48491D7312D5BA1E20872D4159FA63BD386BFE49CD
EC879A569C622487E468426B59374DA39F14704E684B3C3189EFA438E6D65890
DF6F7F2D6C04121E8F86FEAC845B42472B48EF1202BC2D62A7902BDD8EF11FF4
8F54CECBB40126729CD77C5EC1CCA47960A4A19CDCFF8C3315FA364A661D5182
D54489C79906B809E54C24F7D51930F54077F07012AFA98304D497E00DBAC08A
1F8B6652B634636B3429DEC3132C55702CCD5E266E09> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QOZGVS+Inconsolatazi4-Bold /PAAAAA+Inconsolatazi4-Bold findfont ct_VMDictPut
/QOZGVS+Inconsolatazi4-Bold*1 
[71{/.notdef}rp /g /.notdef /i 9{/.notdef}rp /s 172{/.notdef}rp]
QOZGVS+Inconsolatazi4-Bold nf
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
352.329 551.545 mo
(SIG)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7EE7C1920D5218B62BFB1881AF44B6F070FE3CDD0AC0A9DDF
B5C808AD8795DAB82DECC08267982165EFF48710A7AD6B05FE0712D047F23496
C2223A32BDD07E3E4C37B2D7F70413F324E0D134F6A33413BCD090C12B9A6C2D
F413CFF883BDF60D44BA51B4B8D5A6E686E535032F36D5AB3F22BB0AC4A0C376
90D18F72382F8A79F697886C6DDA626E6CED4C5C3956C36A89FD2BEECF1C48A5
662C25AD75F695803C8B16586DFDE5D3D46087C50077E6E11276BE06E8398B88
AB935173346E04709A8230AE4409E0CA44BF23F355171F867E688D8F8332EB23
782865BAA0FA88D2FC8E68F63DB9E32639CAFA09231E8AD81BB91A642ED7B124
5137A4FA9BB7AB652997C6C7F9B89AF93CC2FCA6F41FC209D86A381DDC8ED78E
2CF27F589783505A055FD5811B9BD9FA26B8C02A71ED7F072A6C61C2DB16C70B
905B770A07E804A263F0F100BC0B139CA7104E273B541CC9F646> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 69 /E put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i /f_l /f_f 5{/.notdef}rp /parenleft /parenright /.notdef 
/plus /comma /hyphen /period /slash /zero /one /two 
/three /four /five /six /.notdef /eight /.notdef /colon 
6{/.notdef}rp /A /.notdef /C /D /E /F /.notdef 
/H /I /.notdef /K /L /M /N /O 
/P /.notdef /R /S /T /U /.notdef /W 
/X 2{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [10.0626 0 0 -9.963 0 0 ]msf
369.771 551.545 mo
(\(\252typ)sh
390.198 551.545 mo
(eSignature\272\)isacollection)
[6.99359 4.88037 2.72693 5.03134 5.45401 4.59863 3.17972 5.34332 3.66275 4.2666 3.7735 5.49423 
2.72693 6.41995 7.09418 4.30676 5.07153 2.65662 2.65662 4.56848 4.30676 3.17969 2.72693 5.07153 
0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
261.795 563.5 mo
(ofatoms.Each)
[5.12177 5.9957 4.64417 3.21121 5.12177 8.02811 3.96329 5.08115 5.66043 4.64417 4.3494 0 
]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
325.928 563.5 mo
(SIG)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B85AB9ED68AC9E86885DB5266D6CB3A52F5EAF3CB21B04EAD7
E97EE981AAE002B4C223379AD7B31250F8F9785350B3FFCD0B78223B97D0D37A
A15346824B5C6E8E59C1A635971FA04A698EE7DBFC1B615782B43ADAB79ABC20
D1B6476F8642388AE47C8B4ABD0029EED7B69C11DADE411DDE94A870E4606507
CC112240882F9AACF824106FB340F3BE2338A3D18CF147F95AD2CD348CBDBE28
5E19CEB756> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i /f_l /f_f 5{/.notdef}rp /parenleft /parenright /.notdef 
/plus /comma /hyphen /period /slash /zero /one /two 
/three /four /five /six /.notdef /eight /.notdef /colon 
6{/.notdef}rp /A /.notdef /C /D /E /F /.notdef 
/H /I /.notdef /K /L /M /N /O 
/P /.notdef /R /S /T /U /.notdef /W 
/X 2{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
343.717 563.5 mo
(may)sh
364.468 563.5 mo
(bedecomposedintooneormore)
[5.11157 7.38803 5.14206 4.61374 4.34937 5.12177 8.02811 5.34534 5.12177 3.96326 4.60358 7.98749 
2.75394 5.50803 3.21121 7.96719 5.12177 5.508 7.38806 5.1217 6.62573 8.02814 5.12177 3.69897 
0 ]xsh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.795 575.456 mo
(disjoint)sh
294.074 575.456 mo
(subsigs)sh
325.318 575.456 mo
(which)sh
352.226 575.456 mo
(partly)sh
378.374 575.456 mo
(orentirelycomprisetheparent)
[4.92093 5.91678 4.36444 5.29202 3.0853 2.64594 3.55392 4.36447 2.5777 7.32278 4.17883 4.9209 
7.71329 5.06735 3.63205 2.64594 3.80786 6.64917 3.08527 5.25287 6.64917 5.06732 4.46204 3.55396 
4.36444 5.29199 0 ]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 587.411 mo
(SIG)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GAAAAA+LinLibertineT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVJ+LinLibertineT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B85EE3A53F333B8A8F23BB48F6C9D0B7E3354A075
58108A7EA732760F03492D76569429D683EA395BC3C011D45BCB6BA2276A0CAD
1D02F6388A2D46DFD0EB5A6DB1FA9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVJ+LinLibertineT /Encoding get
dup 39 /quoteright put
pop
%ADOEndSubsetFont
/QOZGVJ+LinLibertineT*1 
[32{/.notdef}rp /f_i /f_l /f_f 4{/.notdef}rp /quoteright /parenleft /parenright 
/.notdef /plus /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /.notdef /eight /.notdef 
/colon 6{/.notdef}rp /A /.notdef /C /D /E /F 
/.notdef /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /.notdef 
/W /X 2{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
QOZGVJ+LinLibertineT nf
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
276.739 587.411 mo
('s)
[2.67014 0 ]xsh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
286.3 587.411 mo
(atoms.)sh
316.512 587.411 mo
(For)sh
333.351 587.411 mo
(example,wede ne)
[4.47147 4.97955 4.64417 8.02811 5.27417 2.68292 4.44098 5.24374 7.50986 7.5506 5.14209 4.5426 
5.69083 5.50803 0 ]xsh
%ADOBeginSubsetFont: PAAAAA+Inconsolatazi4-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVS+Inconsolatazi4-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7A73DC5384F7F6861F8F06C750B8C3256D70FA4D1A92CD003
7826D9D17C7E96527308CB9BC003AA45963642E041BF1BA9BF2EEB7155> |-
/e <1C60D8A8C9B7A73D35519DACC74D9A08916EE87C6E9491FC7E38314E7A72
DADF16747AF0D65556591150680AD0931AA48332CE3D0E978B0B8D6B0A923DD5
DB1F274BE1D2373CC021B33994EA83D6E930F1F9792ABF8F95693C39AA9DAEBC
6123FA01DC5DE5FCB41DE7B1F867AB510D6863A35FF2993B429CA17626B07E63
D56ED1DD40BC6C7F87500DDFE2BC8B6B3C1E0E1593CE4A344C909AF3A7E9F260
ED6FB0F25208B589FAD00DB7967E8C8464DB763677A32AEE1DC2A8950B7B2898
648925E304824C382145DF6CBCB399BD8C4E8A5F6D81AC25C04808FD040B2A01
69C87ED99950DD80023F1DF2A7E34A9857C7AD7DA0F3442D19996AE37792> |-
/n <1C60D8A8C9B7A73DEE9439F9002D61C6AE68F81CE80B52F2B653F602408D
E90C7A0D817D81C7CACAB42DD05947494D8CED7DDD2DE32BD17C92AF75792AF0
71CE002390C2EB30420CE77450E5701E042D96F14D6916EAD84D725AD405789E
1C4F8BF43F1100162131EDA605EF5ED498825DAD36AA25556DB1173CA416DC9A
3C56AC7E74AC4672B77370A271122EDC47C3AE19E84AFCB4D89183013B324DE6
E69D8D2473AE> |-
/t <1C60D8A8C9B7A73D3558406FF5AE6B205486107EFD8293351CA6DD086F84
192F5305D335CDE553BAAE3EE2B3D92241F92087D30B43F6C306B322A8F3E59F
CBDADBEFDB6F106A8316A17E8104FD283E1218378B6DE5E01E8E426823A11485
081EC5E997C440FB837B5E268C124C7C12F7138F323606FA536B6462976D481A
5D9A480C4C1E5725507E61241B5D909A57900EC633C81D5A67529A65D5531A7F
9DEC3BE1AB4DD1478CAE4343D88E4CB1C695FE> |-
/v <1C60D8A8C9B7A73DEE9439F972C17BB26BD4C27AC31871A6526435500059
0A4924D4CAE2F49ED6C8FA1F436ED4E03C8858B418D7703E733A173A7DC95AE0
D637395F806FF8B4D1EC116216542310EBF8D8C9E39583B2B85E89CFC6F72F40
28728C9B787B403E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVS+Inconsolatazi4-Bold /Encoding get
dup 37 /E put
dup 69 /e put
dup 78 /n put
dup 84 /t put
dup 86 /v put
pop
%ADOEndSubsetFont
/QOZGVS+Inconsolatazi4-Bold*1 
[37{/.notdef}rp /E 31{/.notdef}rp /e /.notdef /g /.notdef /i 
4{/.notdef}rp /n 4{/.notdef}rp /s /t /.notdef /v 169{/.notdef}rp]
QOZGVS+Inconsolatazi4-Bold nf
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
416.599 587.411 mo
(%VENT)sh
QOZGVJ+LinLibertineT*1 [10.1623 0 0 -9.963 0 0 ]msf
444.511 587.411 mo
(asaprimitive)
[4.64417 6.97128 7.64203 5.27417 3.78033 2.75391 8.02814 2.75391 3.21124 2.75391 4.97949 0 
]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 599.366 mo
(SIG)sh
1 /0 /CSD get_res sepcs
1 sep
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
276.739 599.366 mo
(,)sh
%ADOBeginSubsetFont: PAAAAA+Inconsolatazi4-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVS+Inconsolatazi4-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7A73DEE9439F61EC2E9D24B90401606AE3F82D3DE75877FAD
05135DF8AFAB3BB304B3C42F50B94226CA2207A6FF41ADC6> |-
/M <1C60D8A8C9B7A73DEE9439F84340DE0FC68A6DD7CD7B292C9AAAEB29BB24
F0E22FEFB9ECAF9E36D61D00DC4E8E4A0CC3DA7FBC8EA93EA665CAED612472BC
34FE8D> |-
/R <1C60D8A8C9B7A73DEE9439F63CB652B0DC76A96DF63C08AA8D629E3C07B2
1E0DC95E7AC0767E592DD3B1F885AC1F01D195276905C62D049E1CCA582A32DE
03287B8BA7184A5F573F1FC36EE1DCA8BA54A9E44361D6A58B2A759212AC8904
52478C93081BA9FFB59554AB6BA287AB4C0670E5E65AE6B2B37EFCDF9BCCEC70
65F47CEBDBE741651195A8064BCC68F314DA9E7ED3A488770B11F869E04AB681
1D7A8C9FB74A> |-
/W <1C60D8A8C9B7A73DEE9439F8447398A58BEEB21743F4FDF562B74271A622
2AE0C41CD6F77EB48B21E8C95AC5B8D7E64597D4265C087B3110D1F7300325F7
3203FA0A5411337BDABD02DFAAE541221E92689503701A5B> |-
/a <1C60D8A8C9B7A73D319CAD7BE98E22E532A550B461A7BAC8B56FE888B997
6EA39BE443616193AD4F54FC7CC5BAB45B71214A0FEE54AD50C743A9DD79D668
839920B597026F25F73E53BB7A15640D17E216E47615EC95F124AD0916F37577
96048C3D3A4F76922D46F785B74A3EE3539EDCBE30AFEA286574E2DDC875B080
C437BE157AC354F3D655C2C61FBA2F5228BE27D327449244D04211DCBBBE0A1F
4CA98CBFB08E4C01DACAD24A9F7DCD1395A99FE923E9F565AA70DB25D038BE6C
76812496754A6FBF19294E1D5607B2A32D6118F7A699CCDA345CF48FC861248F
2210E33334E0064BDD119BF23A9098D62A3FF960F14CB5DDCA6564DC632BC12A
5DA84844AA0D9B7E212225AA8F49560AE3BF58534FB65FD218180E98FE59484A
09EA277401A45DA35B5ECCEF410E864666932FEE7ECD0534652F3C412D37CD53
1996> |-
/c <1C60D8A8C9B7A73D355E16AFB85FF0438A56000963ABA020192A232CC44A
3309508E07C81C1A147A1B96C37A8A57DDF518BCD7B59794BB723727D150A799
85F3D3E45D0BFCBCD9ABE234648BC5253810CC4E650B2EB0CF5BFE9060CD65D6
04D2CAE8D534ADEAD0AAEDF206B8D59966ED68013DE4D09153CFA76D92444578
56065A3D84497F81E9DF3F5C452AEB1FFEA33705DD84A1A9364194852A3FAA6F
5B242EC402896BA5E5C4BFB270F44315B96BB66CB2334D3610268BC8AEBD2988
51EA7295C3991ADCA371F9007A9D4B4B352568976C5418E774F24217EA30C560
70973BCA89451F4E6333A5A9DAB911E7BFF23669FE1D3AF0598746743FDDAA98
E0AD> |-
/d <1C60D8A8C9B7A73DEE9439F903D30B868E29E5D7A061057160F9B785D3BC
ED238C5A70F2C1705AF9F782BB4886F194F27080A47DEA19E662C6538E29A9E1
6F75F13B97072ABC29E8976FA5FC329A105F2BC5C1F9DECBA478EC18F5BED5AD
1738AE8EEEE34977289729C2347236CF0CC123137F16B558E0555FA7ABECA94F
50FC3CA5A8CCF5B3267D90FA6998B4D6B233E53E75FAAFF664F81B6AF67AB588
29B1EA82DFA3E8A6A5C88EC81BE28C2D2D3DCF2BC392A3FD92D7FF5012E102C4
0302F7EBED1843DCCB874A035B4366BC76C0943E732AB8391A2348013A62B955
3727438DB16BD90D0051A79BB73F00D521684FDBD1F1410552F2773FB7BB7DEB
95FBFF57920443D77B8E7ECC03E15B01F3C527DB538CADCCF3A64E70FF7CB492
ACE1A0A310511D84EB225509937742E1DBED6B90F36E35EDF04D2CC314E4CB59
DD89561773248EF02A1B2D4B1854231B09F3E64EE32A1380DA6127A7A33877FE
4F05820D0088B72E7366394E629EA9C3005880B664668B0A6B4AF4F98B1A4515
36B63AC6B0A31371D995> |-
/m <1C60D8A8C9B7A73DEE9439F936B66B29E317E23F5C1EC1BC2BC3522A8447
27CDE13D36E2EA8316092423766987FDFBDFD0BE4BEC2626C3DA03E1DD8A975C
441262978FBCA09935EFA5FAF135F10DF5EE0641DA9A5491AD3F1D6CF8B3A372
3FAAB4F7164F93E90640E510150A1747E97053A739DD6F2C05C48690DA5A7FEA
59A6AEF63F96D79B7E8064C88CF9ECE2382F5AEFB00C7BCC8389776AD899DF35
3866511BDBB04C3D4AF6A3F6ECD44874BECEBC03404371AE4B4DDEC21EDC2175
47BB637EF3078173532CAD996E68E3428A5FFBE561E10DDD0939FF6AC5F95A4C
4113CFB1E421EB28366A86ED> |-
/o <1C60D8A8C9B7A73D355338E7ADDF135B2C35B33B8D271BB777E532F83061
3A4FB9572F6FF9AC3476CD3C55307F18B4FC95E462A9FB30C112C5CD464F6A21
D518ADBF4BFE663E484ED55B02227F3ACE9023925966EE805AC2434365DFF577
9AA223914879794D045A57DDEC1FCD7A3AA64B0AD19947B9071F6D0E65BFD592
07C616B0EF7F0735BE5B9935E782E3DAEE46E8A1511557B44F6788350C580DCF
6B0C1640BEF33057258E5E1B99ACA9BA8D8CD9EE5040892E1813BA9ADECA9924
EB0C20F13F9F39A21BB30003EE5E160C5E4303AF1876ECFE13C2306450BB65BC
1CE7183D8BEBA27F686B87CB2B4323A7F9E1FF7B9E7D2803> |-
/r <1C60D8A8C9B7A73DEE9439F972C17BA11720E9876835BD725561CC904DB0
0943A28DC81D206FD019898C77D89FA1B9B09D2A3492EF10E4A8634C15180AEC
7E76EBF690C2713BED69488472B5EF6AE9571A83CC12B99CBBE48BA0DD88AD08
AEEBDDF1D4CCFD435F764DD06603A0AF20D8A05FA9BFF691C320993FDC4FED3C
F3A9182D71DD1A72580EF8EF7353C469C6E00253D54C1EA0> |-
/y <1C60D8A8C9B7A73DB5A920FE41462CEA7AC1DD0DA608D9DB65658A6ABAA6
3CF426096642D73759E0D21B9385D07E251F5196CEF41250AB52F578DAF2695E
959CA0AA754B70A8BD924EE708EB2441A5B0CA647ACD539E6E5AE6FD69C00059
87D74A06F7DD9FF7EC36CD8BF40B6C0D6CE00D1C9187D257A3409E1625825DF0
8B97B3EA8164483BF26850FC04C5E01C3822C6B36BB2019366E7BA29C7BEC3C0
C0952B98F94A406546D564AF855AEBEAD68D192C2F043649BF30722BF5ED142D
937BC19872BDABFD6541B9EFF29F5C70874542EBADA243FBB62F447B89E20176
2F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVS+Inconsolatazi4-Bold /Encoding get
dup 38 /F put
dup 45 /M put
dup 50 /R put
dup 55 /W put
dup 65 /a put
dup 67 /c put
dup 68 /d put
dup 77 /m put
dup 79 /o put
dup 82 /r put
dup 89 /y put
pop
%ADOEndSubsetFont
/QOZGVS+Inconsolatazi4-Bold*1 
[37{/.notdef}rp /E /F 6{/.notdef}rp /M 4{/.notdef}rp /R 4{/.notdef}rp 
/W 9{/.notdef}rp /a /.notdef /c /d /e /.notdef 
/g /.notdef /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 166{/.notdef}rp]
QOZGVS+Inconsolatazi4-Bold nf
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
281.3 599.366 mo
(&ENCE)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
308.62 599.366 mo
(and)sh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
325.727 599.366 mo
(-EMORY%VENT)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
382.935 599.366 mo
(assubsigsof)
[4.46204 6.21948 3.80786 5.1846 4.81351 3.80783 2.64594 4.8819 6.21948 4.9209 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
435.34 599.366 mo
(%VENT)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
460.246 599.366 mo
(,and)
[4.55969 4.46204 5.29199 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
481.915 599.366 mo
(2EAD)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
261.795 611.321 mo
(and)sh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
278.694 611.321 mo
(7RITE)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
306.304 611.321 mo
(assubsigsof)
[4.46204 6.25854 3.80786 5.1846 4.81348 3.80786 2.64594 4.88187 6.26831 4.9209 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
358.832 611.321 mo
(-EMORY%VENT)sh
QOZGVJ+LinLibertineT*1 [9.76374 0 0 -9.963 0 0 ]msf
413.627 611.321 mo
(.Relationsarede ned)
[4.59872 5.73138 4.36444 2.5777 4.46204 3.0853 2.64594 4.9209 5.29202 6.26834 4.46204 3.55389 
6.81519 4.94043 4.36444 5.46765 5.29205 4.4328 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.8833 0 0 -9.963 0 0 ]msf
261.795 623.276 mo
(intermsofadomain)
[2.67834 7.84741 3.12305 4.41791 3.67651 7.80774 6.35495 4.98117 5.55438 7.00726 5.00092 4.98117 
7.80774 4.51666 2.67834 0 ]xsh
1 .903593 .0955215 .455177 cmyk
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
348.08 623.276 mo
(SIG)sh
1 /0 /CSD get_res sepcs
1 sep
QOZGVJ+LinLibertineT*1 [9.8833 0 0 -9.963 0 0 ]msf
365.518 623.276 mo
(and)sh
382.883 623.276 mo
(arangerelation.Forexample,)
[7.01715 3.67654 4.51666 5.35681 4.94165 6.90848 3.59747 4.41791 2.60925 4.51666 3.12308 2.67834 
4.98114 5.35684 4.66492 4.79343 4.98114 6.177 4.34869 4.8429 4.51666 7.80774 5.12939 2.60925 
4.31909 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
261.427 635.231 mo
(wede ne)
[7.31107 6.91544 5.00595 4.42236 5.54019 5.36221 0 ]xsh
%ADOBeginSubsetFont: PAAAAA+Inconsolatazi4-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
QOZGVS+Inconsolatazi4-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B7A73DEE9439F65F71CDDD1E370852C3F1052FD6081D55EF2E
D369D2D9721A46F066C9F1BAE544D25873FE0E79193D2AB4525C03CDC7046D6E
D17C6BD28DAC8473B748EC2A4AD4715D29304D0634FD82DE19D5DEADA7879041
6C3B4BCFC28AD9CEF604215D5A777C5D58E9383C332A1447646635E5C4151EE5
06D4CB2D9F2B9089957DDFF05F6F17CD44F81856D6459C2338ED> |-
/p <1C60D8A8C9B7A73DB5CA1438DB8D64E0AA170A20B3EC9DF1BF59A897D629
AC44C74208FEE45ECEB7A7D97B9E5EF769DCF62CF4814A26F21C264AE3C662E8
F35410752A4A5397D8156E26582BBD8FED396797A855A476D0001C6D27AE7C17
EE9DA5D76B04E5582DC17984655E9B2E642B7639FEA3998F643A7CFF8C917507
876B9EDB61866AF144DEF08E2126855922AA78FD5180DD56B1C7486ED3A97A71
8C09711B117CDFB1D51F4D7E7D2B49AB321A5A5E21E9F076B98A29C39CC07BA9
35CDA4B3C195CD7550CD29D47FBB25F1CE2E5DDB55776EA9E2D22FC09B7D18F5
07BECF01399FD86DFD74FF5096351B7DCDCE5A48FDC6F181AF09C8BEC242DEFC
54BCEECC1414593C25B4B3F5E86D2C424ACC3B32D80B83B91A44B909BC407A62
0C15EF5E33E5A401EE7D1980E7B3C08C2863A535838A49D988C025948C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QOZGVS+Inconsolatazi4-Bold /Encoding get
dup 70 /f put
dup 80 /p put
pop
%ADOEndSubsetFont
/QOZGVS+Inconsolatazi4-Bold*1 
[37{/.notdef}rp /E /F 6{/.notdef}rp /M 4{/.notdef}rp /R 4{/.notdef}rp 
/W 9{/.notdef}rp /a /.notdef /c /d /e /f 
/g /.notdef /i 3{/.notdef}rp /m /n /o /p 
/.notdef /r /s /t /.notdef /v 2{/.notdef}rp /y 
166{/.notdef}rp]
QOZGVS+Inconsolatazi4-Bold nf
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
302.901 635.231 mo
(PO)
[4.98151 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
315.358 635.231 mo
(asarelationfrom)
[4.52124 6.35144 7.01434 3.60107 4.42236 2.61188 4.52124 3.12622 2.68103 4.98618 7.86523 3.06686 
3.59122 4.98618 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
389.017 635.231 mo
(%VENT)sh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
416.419 635.231 mo
(to)
[3.12622 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
427.026 635.231 mo
(%VENT)sh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
451.932 635.231 mo
(,and)
[4.66965 4.52118 5.36224 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
473.987 635.231 mo
(RF)
[4.98151 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.89326 0 0 -9.963 0 0 ]msf
486.445 635.231 mo
(asa)
[4.52124 6.35144 0 ]xsh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
261.795 647.187 mo
(relationfrom)
[3.62646 4.45352 2.63031 4.5531 3.14825 2.69995 5.0213 7.89078 3.0885 3.6265 5.02133 0 
]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
317.666 647.187 mo
(7RITE)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
345.312 647.187 mo
(to)
[3.14825 0 ]xsh
QOZGVS+Inconsolatazi4-Bold*1 [9.963 0 0 -9.963 0 0 ]msf
355.972 647.187 mo
(2EAD)sh
QOZGVJ+LinLibertineT*1 [9.963 0 0 -9.963 0 0 ]msf
375.898 647.187 mo
(.)sh
-8.88 -4.75 mo
513.06 -4.75 li
513.06 -27.48 li
-8.88 -27.48 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
gsave
-2.16 -21.6004 mo
93.936 -21.6004 li
93.936 -32.8876 li
-2.16 -32.8876 li
cp
clp
set_def_flat
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QAAAAA+LinuxBiolinum Initial
ct_T42Dict begin
-1.082 -0.266 6.168 0.891
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+LinuxBiolinum
Type42DictBegin
[<00010000000c000c000c000c4f532f32574a00f8000000cc000000566376
7420162a141200000124000000766670676d0fb42fa70000019c00000265
676c796697c3690c00005734000a9148686561641e3335f7000004040000
0036686865612fe032560000043c00000024686d7478381ffe3b00000460
000027006c6f636132bb52bc00002b60000027046d6178700ae90e390000
5264000000206e616d65987dfa8f000052840000044a70726570fd56ccb6
000056d00000006167646972000000000000000000000000000103500190
00050000053305990000011e05330599000003d700660212080202000503
000000000000e0000aff5000e5fb00000020000000005066456400400020
fffd0727fe080000072701f8600001bf000000000000fe2f0000036f03ae
04cd05290581005a00a400a400d30049004b007000c8005d00bb00560050
008a0064008c00580095009e0086008300ad00430045003500a800290052
00540060003e00a10069004e008e00bf0032003c004700910098002e006c
008000620075001400100012006e000a003800930000b0002cb000134bb0
2a5058b04a7659b000233f18b0062b583d594bb02a50587d5920d4b00113
2e182db0012c20dab00c2b2db0022c4b5258452359212db0032c691820b0
40505821b040592db0042cb0062b582123217a58dd1bcd591b4b525858fd
1bed591b2321b0052b58b046765958dd1bcd595959182db0052c0d5c5a2d
b0062cb12201885058b020885c5c1bb000592db0072cb12401885058b040
885c5c1bb000592db0082c121120392f2db0092c207db0062b58c41bcd59
20b00325492320b004264ab00050588a658a6120b0005058381b2121591b
8a8a6120b0005258381b21215959182db00a2cb0062b5821101b1021592d
b00b2c20d2b00c2b2db00c2c202fb0072b5c582020472346616a20582064
62381b2121591b21592db00d2c12112020392f208a20478a4661238a208a
234ab000505823b0005258b040381b21591b23b0005058b04065381b2159
592db00e2cb0062b583dd61821211b20d68a4b5258208a234920b0005558
381b2121591b212159592db00f2c2320d6202fb0072b5c582320584b531b
21b00159588ab0042649238a23208a498a2361381b21212121591b212121
2121592db0102c20dab0122b2db0112c20d2b0122b2db0122c202fb0072b
5c582020472346616a8a2047234623616a602058206462381b2121591b21
21592db0132c208a208a8720b003254a64238a07b02050583c1bc0592db0
142cb3004001404242014bb8100063004bb8100063208a208a5558208a20
8a5258236220b00023421b6220b00123425920b0405258b2002000436342
b2012001436342b02063b019651c21591b2121592db0152cb001436323b0
004363232d000000000100000001199965071b365f0f3cf5021f08000000
0000ca25e93000000000ca25e930f758fddb315e07250000000800000001
00000000000100000727fe080000322df758f860315e0001000000000000
000000000000000009c0040000000000000002aa00000200000001d20075
02b0008103c2003703b800540570008105ae005a0185006d0266005a0266
002b0376009a0437008701c2006202a9004401c2006f0295001f03b80050
03b800dd038d004303b8007103b8002b03b8006003b8005e03b8008103b8
005003b8003901c2007d01c2006203e500640437008703e50064033d0058
072800790508002104ed00c1056a006a05ae00c1044d00c1040800c105bc
006a05ce00c1025a00c1028fffac050800c1041e00c30716008305be00c9
05ed006a047800c105ed006a04cc00c1040c00660451001f058900c1050c
0021079b002104a5002f04a7002104f9005802e300e10256001702e3004a
042400e503e3000a032200c503d9005c0408008f036e004e043d0068039f
00460283002703fd0042046400a6021400a4022dffac040600a6020400a6
06740096044f00980400004e042f0096042d006402d700a0032b004402b8
0027044b009803a7002905bc002903a30031040c0039035300290237001d
01ae00a602370014039700350200000001d200790400009a040000280400
003f0400000901a300a603dd006603080066051000460260003504580098
047a003102a9004405100046032d00790222004604370087027c004e0281
005e02ba00b403e3005a04d0007502000091045301ba031200e502ca0050
045800a4054700c9054700980547005a033d004c05080021050800210508
0021050800210508002105080021066a0025056a006a044d00c1044d00c1
044d00c1044d00c1025a002f025a0091025a0033025a001b05ae002305be
00c905ed006a05ed006a05ed006a05ed006a05ed006a043700d905ed006a
058900c1058900c1058900c1058900c104990021045c00c1045c004c03d9
005c03d9005c03d9005c03d9005c03d9005c03d9005c057e0050036e004e
039f0046039f0046039f0046039f004602140039021400a6021400100214
000a03f50046044f00980400004e0400004e0400004e0400004e0400004e
043700870400004e044b0098044b0098044b0098044b0098040c0039041e
0096040c00390508002103d9005c0508002103d9005c0508002103d9005c
056a006a036e004e056a006a036e004c056a006a036e004e056a006a036e
004e05ae00c10476006805ae0023043d0068044d00c1039f0046044d00c1
039f0046044d00c1039f0046044d00c1039f0046044d00c1039f004605bc
006a03fd004205bc006a03fd004205bc006a03fd004205bc006a03fd0042
05ce00c1046400a605ce005404640035025a001202140018025a00100214
0012025a001b0214001f025afffe0214ffd1025a00c1021400a604b400c1
044900a4028fffac022dffac050800c1040600a603f70096041e006d0204
0083041e00c3020400a0041e00c3025100a6041e00c3020400a6041e000a
0204000c05be00c9044f009805be00c9044f009805be00c9044f0098044f
0033058f00ba043d009805ed006a0400004e05ed006a0400004e05ed006a
0400004e06b400560633004604cc00c102d700a004cc00c102d7009a04cc
00c102d70098040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b00440451001f02b800270451001f02b800270451001f02b8
0027058900c1044b0098058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098079b002105bc002904a7
0021040c003904a7002104f900580353002904f900580353002904f90058
035300290251003b040800100537000a0487002303db000a0493002f03e1
0019056a0031056a006a03f1004e05ae002306390004047e005603f30046
03eb0046047a00b0052600560422004e040cff7b0399ffe105bc006a04ef
000005b6002502510029025a0027051800c103d400270204000803f3002d
06d90033058fffa6042f002b05ed006a05ed006a0400004e070e004a0585
004a04ac000003d4000a0483002303d4005a02f7004c04bc002902700004
02b8002704b40014026e0029048f000e05850000044b0098055300310535
0000052000000502001704f900580353002904dd005604dd005e0395002f
0395005a03810043036e002d036e005402f1002904280019017a0096024b
009602a7003301d200750a2000c1089100c1072d0068062400c3062b00c3
03e100a6082400c9078500c9060800980508002103d9005c025a002b0214
001f05ed006a0400004e058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098039f00210508002103d9
005c0508002103d9005c066a0025057e005005bc006a03fdfffe05bc006a
03fd0042050800c1040600a605ed006a0400004e05ed006a0400004e04dd
0056031c0029022dffac0a8d00c1090400c10724006805bc006a03fd0042
073300230451001205be00c9044f00980508002103d9005c066a0025057e
005005ed006a0400004e0508002103d9005c0508002103d9005c044d00c1
039f0046044d00c1039f0046025a00000214ffa2025a00190214002305ed
006a0400004e05ed006a0400004e04cc00c102d7004404cc00c102d70087
058900c1044b0098058900c1044b0098040c0066032b00440451001f02b8
002703d4009a0310004605ce00c1046400a604d2002b05160046046e0060
03be005404f1005203a500460508002103d9005c044d00c1039f004605ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
04a70021040c0039030a002f054b002b02fd0029022dffac05fd004605fb
004a058d0021056a0056036e0019041e00100451001f032b004403a70014
04ed000c03a5fff50410004604100012040a009e036e003303a1004e043d
0052044d0052036c0046039f002104ba00310335005a03470052048b0052
03d20046025eff46044b004e0418004e0402004e03f9003903330031044f
0093044f00a4044f00a402c6000c02510087022800ae024b000a02dd0025
020400a4044900a402c6002b06310093067e009604b4ffd3044700980428
009a04000052054b004e05b40046048d003102d7002902df002d0322002d
02df00a002df00a002ac008102ac002d037a008d037a0093032b00270256
ffd30256ffd30256ffae0256ffd302b8002102b8003904100037046e002d
03ef00ac03a7007305bc005803f7003b032f001403f3002903a70029031c
0029031c0029038100580381004a03810058037a004a05ed006d03b400ae
03ce00520412004e047c00ae0208ffd303e1001903450093044b004e0381
004a0381004a067600520676005206890068051a003903ac003905350039
05e10039045a00a4044900a4038f0029032d006404ed002d04fb002d030e
009c030e009c023d002d0241009a02410023028d002502b2009304260029
02a900390185002102cc006f0158003b016600420158003701f1006401f1
005e02a3007702a3008b042400db042400db042400e5042400e302ca0066
02ca0062010a0052036600830231005a023100a201a3008d031e006f020e
004a0226005c01ac004a01a1004a01890042018900460212005002120050
02310052023100460289002b025300c302e300c102ac00b40256000a02cc
006f028b005002df006402c8003901ce009c0235004e029d002902a3008b
027e001b03e3000a030600680000fe190000fe170000fddd0000fdb20000
fd2f0000fd2f0000fda20000fe270000fd460000fe250000fdd90000fd9a
0000fd5c0000fe8d0000fd730000fd9e0000fce90000fd420000febc0000
feee0000fef80000fedd0000fd4a0000fd850000fd5c0000fd5c0000fcf6
0000fe640000fd770000fd480000fd480000fd330000fd330000fe0e0000
ff750000fdd70000fd0a0000fd960000fd960000fdd30000fd710000fdbc
0000fcec0000fcbe0000fd5c0000fd6d0000fce70000fce90000fd3f0000
fcf60000fc8f0000fd0a0000fd3f0000fd7b0000fc8f0000fc620000fae5
0000fe230000fd000000fd420000fcbe0000fd1a0000fdb00000fc8f0000
fe190000fe170000fce90000feee02f100660000fe390000fd000000fc8f
0000fdd70000fde60000fd270000fd270000fd040000fcb00000fd790000
fd9b0000fe3d0000fce90000fd220000fd9b0000fd9b0000fca50000fe5c
00a1ff790000fe620000fd680000fdc30000fd0e0000fd0e0000fcdd0000
fcdd0000fc5c0000fd0e0000fddb0000ff680000ff790000ffcf0000ff62
0000ff6a0000ff7d0000ff600000ff6d0000ff0e0000ff980000ff960000
ff5c0000ff6001c6006a0189003102a501060391002f038f00500391002f
01c2006201c0005802f10066050800210206008d0541ffb4065cffcf0302
ffb605edffdf057effba05b8ffcf0241fff60508002104ed00c103d900b4
0516003d044d00c104f9005805ce00c105ed006a025a00c1050800c10500
00140716008305be00c9052f005c05ed006a05a900b8047800c104c00029
0451001f04a70021056a004a04a5002f058d002d05990064025a002104a7
0021048900460335005a044b00980241008703ef00ac04890046041c0064
03f3002103e3004e0335005a03760050044b009803ed0050024100870400
009803f3002d044d008f03d40071036c004e0400004e0499003b0439006f
0399004e0493004c0387003703ef00ac04b80050041e0000051a00a40585
00600241fff003ef00ac0400004e03ef00ac0585006004120050046800a0
046a000a053bffc5046a000a04a100480589004c03fb003105ed006a0400
004e04120021034700480410002f038d006f044b0064044b0064066a0014
03f5004803fb003103ba0046038f00500212ffac05ed006a035e004c035e
004c044f007904ca005004be007f04ca004204ca005004ca0042044d00b6
044d00b60591001f03d900b404d40050040c0066025a00c1025a00230314
003b0756005807ba00ba05a1001f050e00c105d200c104a3005205a900b8
05080021048100bc04ed00c103d900b405a90037044d00c1076400480456
004a05d200c105d200c1050e00c1051600290716008305ce00c105ed006a
05a900b8047800c1056a006a0451001f04a300520560004a04a5002f059d
00b8051000ac07ae00bc079500bc05c80066064900bc047600bc04d40056
073d00c1047c000003d9005c03f7005603b400ae032200b2042b0031039f
00460549001903c4004c049d00ae049d00ae03e300b6043f003705660091
047c00ae0400004e049100bc042f0096036e004e03910042040c0039059f
005403a30031049100b204140075067400b2068100b2045c0042057200ba
039f00ba03780056057c00aa038d0019039f0046039f00460428004a0322
00b203780056032b0044023f00bc0237000a022dffac05620035060400ae
0458003903e300b6049d00ae040c0039048300b207a1006d0562004605ae
00140445001f06c600c1054700aa06ba00040543000e099500c107910037
075e000a066a000a09f100c1087c00370456006403370052057e002d051a
004605ed006a03a3004c05620000044b001205620000044b001207a1006d
0562004607a1006d056200460000fccb057a001f0414002b047800c1042f
009603e70021032d003703fb00270322001f04be00b4041600b206ef0048
057c002d0456004a0360004c050800c103fb0042050e00c104740046050e
002303d400230604001f048b003105990023047c004206d200c105ca00ae
07b800b8064b00bc0568004604740048056a006a036e004e047effe30391
003704a700210497001404a70021049700140528000603d4001406e70014
05c400460512003b04200044051200ac0420007505430023045800420674
0016044500350674001604530035025a00c1076400480549002504d40023
043b004605b40023047c004205ce00c1047600ae0512003b042000440508
002103d9005c0508002103d9005c066a0025057e0050044d00c1039f0046
05260056039f002105260056039f002107640048054900190456004a03c4
004c04dd0056031c002905d200c1049d00ae05d200c1049d00ae05ed006a
0400004e05ed006a0400004e05ed006a0400004e04d400560378005604a3
0052040c003904a30052040c003904a30052040c0039051000ac04140075
03fb0021035a0037064900bc057200ba000000e90000005e0000004c0000
00310000010c0000009a0000009c000000ae000000ae0000005200000052
000000480000010c000001290300007f000000ac025300e9000002890000
ff9a02d000b4029b004a03d9003d03be002902ae002b0381004403d20044
02470037024f004e03d4004803e300390228003703cc004203b4003903ce
0017043700600428004c02410044028900210414005803fd003b03ce0033
03ca003303db004403d7002d03f9005803e9003504e50044041e00290474
002f045c00370443003701c000660314006602f70042026000350274003c
0278005c02780033027c0037027c001d02740029018d00930283006203e1
005c0274002f0241004802be005c01c200230333008503e1006402a50029
0249002d01eb00230260002b0508002103d9005c04ed00c10408008f04ed
00c10408008f04ed00c10408008f056a006a036e004e05ae00c1043d0068
05ae00c1043d006805ae00c1043d006805ae00c1043d006805ae00c1043d
0068044dffb3039f0046044d00c1039f0046044d00c1039f0046044d00c1
039f0046044d00c1039f0046040800c10283002705bc006a03fd004205ce
00c1046400a605ce00c1046400a605ce00c1046400a605ce00a004640064
05ce00c1046400a6025a001902140012025a001b0214000a050800c10406
00a6050800c1040600a6050800c1040600a6041e00c3020400a6041e0014
0204ffdf041e00c30204ffec041e00c30204000a07160083067400960716
008306740096071600830674009605be00c9044f009805be00c9044f0098
05be00c9044f009805be00c9044f009805ed006a0400004e05ed006a0400
004e05ed004d0400004e05ed006a0400004e047800c1042f0096047800c1
042f009604cc00c102d700a004cc00c102d7009a04cc00c102d7006604cc
00c102d70023040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b0044040c0066032b00440451001f02b800270451001f02b8
00270451001f02b800270451001f02b80027058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098058900c1044b0098050c
002103a70029050c002103a70029079b002105bc0029079b002105bc0029
079b002105bc0029079b002105bc0029079b002105bc002904a5002f03a3
003104a5002f03a3003104a70021040c003904f900580353002904f90058
0353002904f9005803530029046400a602b8001405bc0029040c003903d9
ff580251003b0251000c0251003105a100be041e004c0508002103d9005c
0508002103d9005c0508002103d9005c0508002103d900090508002103d9
005c0508002103d9005c0508002103d9005c0508002103d9005c05080021
03d9005c0508002103d9005c0508002103d9005c0508002103d9005c044d
00c1039f0046044d00c1039f0046044d00c1039f0046044d00c1039f0046
044d0068039f0038044d00c1039f0046044d00c1039f0046044d00c1039f
0046025a008d02140083025a00c1021400a405ed006a0400004e05ed006a
0400004e05ed006a0400004e05ed006a0400003805ed006a0400004e05ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
05ed006a0400004e05ed006a0400004e05ed006a0400004e058900c1044b
0098058900c1044b009805850000044b009805850000044b009805850000
044b009805850000044b009805850000044b009804a70021040c003904a7
0021040c003904a70021040c003904a70021040c0039063d002304450054
045e005c03d2005604a30000041200170489004604890046048900460489
004604890046048900460489004604890046054900210549002105e3ffc5
05acff98059dffd3059dffd905b8ff9305bcffc50335005a0335005a0335
005a0335005a0335005a0335005a0560ffc5052bff9306a7ffbe0685ff98
0689ffbc0674ff8b044b0098044b0098044b0098044b0098044b0098044b
0098044b0098044b00980653ffc70653ffac07a9ffc30793ff9c0799ffb0
0785ff980764ffb60778ffa602410087024100870241fffc0241ffec0241
fff80241ffee02410000024100020310ffba02ebff9c0468ffba042fff89
0443ffa60441ff96040eff8f043dffa20400004e0400004e0400004e0400
004e0400004e0400004e05dfffc305f9ff960726ffac0737ff8f0704ffbe
06dfff9603ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef
00ac03ef00ac05a5ffa606ebff9c06ebff9a0676ffaa0585006005850060
058500600585006005850060058500600585006005850060062000060656
00000753ffae072fff8906dfffba06e7ff9e06ccffa00702ffba04890046
048900460335005a0335005a044b0098044b00980241005e024100870400
004e0400004e03ef00ac03ef00ac05850060058500600489004604890046
048900460489004604890046048900460489004604890046070e002106f9
0021076cffc5073dff980739ffd3072bffd90747ff930758ffc5044b0098
044b0098044b0098044b0098044b0098044b0098044b0098044b009807ed
ffc707f3ffac0937ffc30924ff9c0941ffb00926ff980914ffb60924ffa6
058500600585006005850060058500600585006005850060058500600585
00600783ff9a0791ff5c08b0ffae08a3ff890885ffba08a3ff9e086eff7b
0895ff960489004604890046048900460489004604890046048900460489
004605080021050800210508002105080021073900210172004202a50108
01740042035e00ae02f1006a044b0098044b0098044b0098044b0098044b
00980585ffcb0562ffd3066effc1065cffb0072600c102b4004802b40048
028f00520241ffe70241ffe10241fffc0241fff60241ffec0241ffec026e
0023025a000c0328ffbc0316ffcd02ae003b02a5003902d9006603ef00ac
03ef00ac03ef00ac03ef00ac0439006f0439006f03ef00ac03ef00ac04a7
002104a7002105a5ffb80583ffba04c6ffc10300006602f1006601e9006d
05850060058500600585006005850060058500600622ffbe05edffc90628
ffaa05b8ffcf07160064019700500158003b03fd000007fd000004240000
060c000002a7000001fd0000015300000381000001c00000010000000035
00000000000002a9004402a90044038100440445005c05ef003b0760003b
0239007b03e3000a02240096022400960224009602240096031400620314
0064031400640310006604b400a804b400a802ce007f0300009601c2006f
0364006f05fd006f01c2006f0100000007490081099b008101fd0096030c
00960412009601f3007102ed005e0400007102e7009802e700a404970019
03490075038300560362004a04d40029005afe21063f005804c0005804b2
00750381007904d0001f01c000580274005002140091024d002702990075
0274005c029f00a202720060027400750274003902740048027400500193
004a01930035028d005c02740050031200e5027c004e0281005e024d0027
029900750274004e029f00a2027200540274006602740039027400480274
00500193004a01930035027c0046027c004602df004e029d0029027c004c
030e009c02a3009101ce009c0487008f0349008f0322008f0235004e01c6
0017038100310381002903810023071e002106470021043d006803b80000
087e00120381002b05a3004605a30046056a006a065a005a060a0071060a
007105c8005a049f0031068f00c1044f0054044f00540458001002a50014
06be00ac07660008053f002305b2006a05a9002f053f00230600002d065c
001b04fb001f0553006405530029041a003d03d9003d03be002902ae002b
038100440249004808780019054700980547004e05470098054700500547
005c05470014054700980547007305470098054700620547006d05470098
02d00098023b003b03e9003705a9003b064f003b0491001d0668001d0818
001d09d4001d068d003704f7003d0683003d0839003d03df003904b40042
052b00290685001f022800ae03a500ae051600ae059d00ae03a70029055a
0029070e002908a50029056400ae04080031056e003106f90031020400a6
036e004e043d006806740096090c007705ae00c1090c007704b4002d035e
0025090a007903870050090a007903b2006408c8006403b4006406b40064
06ba006406b4006506ba0065090a0079090a0079090a00db03b4004a08c8
006408b2007908b2007d08b2007908b2007d08b2007908b2007908970079
09f100790897004a0897007903b200680897004a03b2006209fb007903b4
006806e5006406ed007106e5006906ed006503e700120391006003b2003b
033300480333003d0522003504ac001404ac0019040c003b040c003b0300
003b040c005a0402004c0300003b0591003b05a9006404bc003104370087
0437008704370087043700230437002302ba004202ba0091020600960485
00640485005e04850014055c004c0647004c0453007f01a100a4020c0025
02b000a402ca002903d9001f03d9001f03e9008903e900890308001f0437
01a80437007304370073043700870437006f0437006f0437008704370087
04370087043700870437008b0437008b06450064064500640437008d0437
008d0437008b0437008b042d004c042d0050042d004c042d005004830073
048300730483007304830073054d007b054d00330508002905080029034d
007b0206009101a10068054100910487007306eb0096056e00e5047a0031
030800d50308001406fd009605c80096039d0154039d004606fd003b0200
ff2b048d005a043700750200ffdd06120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
0612006506c0007406c0006806c0007806c0008906c0007806c0007606c0
005e06c0008706c0007a09e1008509e1009109e1009109e1009109e10091
09e1009109e1009109e1007c09a9009109e1008709e1008d061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120064
061200640612006406120064061200640612006406120064061200640612
00640612006406370059063b005906370059063700590637005906370059
063700590637005906370059064b005906120064049b0096049b00960453
005a0453005a04140096041400980453005a0453005a0414005a0414005a
0553003b0553003b04830064055600870483006404830064048300640483
0064048300620483006204830064048300640483006402d7006402d70096
02ce006404e1005008d9003107f900310726003104b000460524003b0483
007d0483007d0483007d058b0052040e0029040e003b0474007704740077
0474007305560077052800640414005004ef0050067a003b03f500640722
0050064d006405be006406b0006405cc0050061c006405e50068056c005a
052b00460691007906a300870528008705c6004c0637007105cc00500528
004602d400500445005005c8005005c8005003bc00540341003106b20077
07640077066a00770556007d0610005008d9002f06120064061200640612
006406120064061200640612006406120064061200640612006406120064
05080029036600c90366000e041e0029023f001f041effb404780029048d
003503d9005c02b8ffc9058f001904240027053b002303e7002704f10054
0349004203df005003b80019035a003b04f1004c0231005e0231004a0231
005e0231004602c20029025a0029025a002902fb003703830056051c0037
050600370614001d094100710941008f09410071066a00ba066a004e0885
003110a70031322d007904ed00230b3900660341003f03ca005e03ca005e
02a30035038d004303b0005c03ca00420397005c03c600580341003f03b8
005003b6004a04eb000a0412001d022b001f0435005a02ac006a03b20083
0395003f03b800330366003703c0005a0374006603b8005003b2004e0508
002105ed006a058900c10516002704d00027061a004e096e0096096e0096
0000f75809f9006a04410029040000a6047600370793006605c600500400
002103f1009c0408005a0487009c03c4009c0381009c0466005a0481009a
0200009a0212ff46041a009a0376009a055c006a045e009a048f005a037a
009a048f005a03b0009a03200044039d00330468009c041c002d0658002d
03e7001f0393002d038f002b0420000002a9004404000021040000210400
002104000021040000210400002105c000480408005a03c4009c03c4009c
03c4009c03c4009c0200003d0200009a0200001b0200fff40487003d045e
009a048f005a048f005a048f005a048f005a048f005a05cc003b048f005a
0468009c0468009c0468009c0468009c0393002d0399008b0393002d0406
009806260044045600810487003d04000021040000210408005a0408005a
0487009c03c4009c03c4009c0466005a0376009a03760023045e009a045e
009a045e009a048f005a03b0009a03b0009a032000440320004403200044
039d0033039d00330468009c0468009c038f002b038f002b038f002b0376
009a039d0033039d0033032000440200009a0283000004d70056040c000e
02b800000260004602c00085026e005602c8005a027c003701be002d02c0
004202a300910487008f02df004e0322008f0316005001c6001703330085
02a500290260002b027c004c0295002704db0027049900190724ffdd04d4
fff80500002304970023034f00580466002b0466003f0591001005910010
071e00000400005c03f3002104660017042b009804fb0096051e00960510
00460612006604e3009606ae009605d7004c05d7004c03b8004a03b80100
03b8007903b8003f03b8004603b8006f03b8005403b8008303b8005403b8
004e017000d7017000d7017000d70153004402c00085026e005602c8005a
0800000001be002d02c0004202ae009c01f300a4023d002d028b006201ce
009c03e1005c028d005c0270005c027600500241009a0235004e01a50023
03330085028300290426002902b400390260002b028900a4028900a403ce
00a403ce00a40000fda80000fda20000fdfa0000fd8d0000fda00000fd2b
0000fd2b0000fd9e0000fd7b0000fd560000fcf40000fe06025300c10402
002303b800500266005a0266002b02e300e102e3004a0237001d02370016
01d20079033d004c045800980458009602e7009802e7009602a90044022d
ffac04bc0027048b0027048b002706c000270702002704bc003b05a70044
07df002d00000000000000b0000000b0000000b0000000b0000001640000
021c000003dc00000618000007a40000091000000978000009cc00000a20
00000ab400000b3800000bb000000c0800000c6800000ca400000d600000
0e0000000ee800000fec000010c8000011e4000012d00000134000001448
00001530000015bc0000167c000016b80000170000001740000018380000
19e800001b0000001c1400001cbc00001d8800001e9000001f7000002068
00002160000021d40000227400002344000023ec00002594000026f00000
279c000028880000296c00002a8c00002b8800002c3800002d1000002d9c
00002ea400002f4400002fdc000030ac0000311c00003184000031f80000
324c0000327c000032dc0000342000003518000035b0000036c000003794
0000388c00003a7400003b8400003c4800003d3400003e4800003ed80000
403800004138000041d4000042dc000043c800004490000045780000466c
00004770000047fc000048f40000499c00004a2000004b1800004bf40000
4c3800004d1800004d9c00004d9c00004e4c00004f48000050c4000051cc
000053300000537c000054f000005560000056a4000057ac0000580c0000
5860000058b800005abc00005b0c00005ba400005c4c00005d0800005d98
00005e0000005f2c000060080000605c000060ec00006168000062040000
6264000063c40000652c0000670000006800000068fc000069f400006af8
00006c4800006d9400006ee400007088000071bc000072ec000074140000
754c000076c00000775c000077f4000078980000798400007a9400007c14
00007ce400007db400007e8c00007fac000080dc00008214000083180000
8418000085140000861c00008760000088180000891000008a7400008be4
00008d5800008ed800009094000092540000941c0000959c000096c00000
97c0000098c0000099d400009b1800009bc400009c7000009d2400009e18
00009f180000a0940000a15c0000a2240000a3040000a41c0000a51c0000
a5cc0000a6c40000a7f40000a9200000aa580000abd40000ac780000ad8c
0000ae6c0000af6c0000b0dc0000b1f80000b3ac0000b4cc0000b6840000
b74c0000b80c0000b8e00000b9b00000ba900000bb640000bc340000bd08
0000be000000bf840000c0940000c1dc0000c3100000c4140000c5640000
c6a00000c7dc0000c8e00000ca480000cb800000ccb40000cdbc0000cee4
0000d1100000d2500000d49c0000d5cc0000d7f80000d9680000dbec0000
dd140000de500000dfac0000e0f00000e1e80000e30c0000e3ac0000e460
0000e51c0000e6180000e6f00000e8180000e8cc0000e94c0000ea5c0000
ec000000ecd00000eda00000eee40000f05c0000f1540000f21c0000f2c4
0000f3e40000f4f00000f6180000f71c0000f8040000f8d80000f9a00000
fa5c0000fb800000fca80000fe1c0000ff90000100bc000101f800010364
0001048c000105b80001068c0001075c0001084c0001095800010a6c0001
0b6c00010cd000010e2400010f6800011058000111f80001133800011484
00011580000116a0000117b4000118e400011a0400011b8c00011d040001
1e3000011f54000120980001220c000122e8000124580001254c00012668
000127c00001294000012a4400012b6c00012c8800012e0000012f680001
30ec000132300001338c000134d000013620000137500001387c00013944
000139f000013afc00013bec00013cdc00013dd400013ec800013fc00001
40ac0001419c000142cc0001445000014564000146840001476400014840
000148e8000149ec00014aec00014bfc00014d4000014e7c00014fd00001
50d4000151d80001528c000153d800015544000157000001582c0001595c
00015ad800015b7400015c2c00015e5800015fe0000160a0000162080001
63d4000165300001669c000167680001687c000169a000016af400016c48
00016db400016f24000170a8000171f40001732400017420000175280001
7674000177ac000178c4000179cc00017b3800017c9000017df400017f38
000180780001817c00018280000183dc0001850400018604000187180001
884c0001896c00018a5c00018b2c00018c7800018d9800018dd800018e34
00018ee000018f94000191500001930c000194f400019634000197c00001
994000019ad800019cc000019e9c00019f9c0001a1200001a1c00001a268
0001a33c0001a4200001a5240001a6600001a7d40001a9800001aaf80001
acc00001ae540001affc0001b1700001b3240001b3fc0001b5740001b768
0001b8d00001ba7c0001bc480001bdf40001bf400001c13c0001c2600001
c4940001c58c0001c6bc0001c7d00001c8dc0001ca180001cb580001cc7c
0001cdac0001ce8c0001d01c0001d1a00001d3640001d4800001d6980001
d8500001d9dc0001db080001dc300001ddb00001dfa80001e16c0001e318
0001e4400001e5640001e6940001e8500001e9600001eb140001ec780001
edcc0001ef100001f0440001f1240001f2040001f2b40001f3ac0001f4b4
0001f5d80001f6bc0001f7c40001f94c0001fa7c0001fbdc0001fd2c0001
fe640001fff80002010c00020278000203e4000205440002067c000207d0
000208dc00020a0800020b2c00020c7000020df000021030000211700002
1290000213a8000214a8000215c00002173c000218cc00021a1400021b94
00021cd000021e8400021fdc000220b400022184000222b8000223c00002
24800002252400022694000228340002296400022a0c00022b9800022d44
00022e7000022f6c00023058000231500002323c000233b8000234e00002
364000023784000238700002395c00023a8800023b2000023c5800023dac
00023ed800023fac00024084000241c8000242cc00024410000245dc0002
46e8000247bc0002494000024a8800024b7c00024c8800024da400024ea8
00024fd00002512000025220000252a40002531800025430000255440002
55ac000257400002589c0002597400025af800025c2000025d4c00025e50
00025f1000025ff800026140000262980002636000026418000264fc0002
65c4000266b00002679000026870000269a000026adc00026c5c00026d14
00026e2000026e9800026fb40002709800027198000272f0000273bc0002
74a4000275280002761c00027694000277300002785000027904000279a8
00027a8400027b7c00027c2000027d0800027dac00027e9c00027fa40002
80b000028210000283040002843c000285440002862c00028770000288bc
00028a0000028bc800028df40002900c000291d000029358000295180002
9744000298d000029a0c00029b5c00029bfc00029d2800029e6800029f34
0002a03c0002a0d00002a1380002a1e00002a2b00002a3c00002a43c0002
a4b00002a5180002a5b40002a6300002a6ac0002a7240002a79c0002a818
0002a8d40002a9400002a9e00002aa880002aadc0002ab300002aba00002
abd40002ac3c0002ac8c0002acf80002ad580002adac0002adfc0002ae60
0002aebc0002aefc0002af140002af900002b0080002b0880002b0fc0002
b19c0002b1e80002b2540002b2a80002b3400002b39c0002b4200002b4bc
0002b5400002b5940002b6880002b6f00002b7e40002b8800002b9400002
b9dc0002ba200002bb2c0002bb640002bb980002bc000002bc840002bcd0
0002bd100002bd780002bdc00002be2c0002bee00002bf740002bfd80002
c00c0002c0740002c0cc0002c1380002c1e00002c2480002c2dc0002c370
0002c4000002c4940002c4f80002c5480002c5b80002c6280002c6880002
c6f40002c7680002c7e40002c8540002c8ec0002c9340002c9b80002ca44
0002ca8c0002caf80002cb880002cc000002cc8c0002cce40002cd340002
cdbc0002ce5c0002ce900002cef80002cf600002cfc80002d0480002d094
0002d0d40002d14c0002d1d00002d21c0002d25c0002d2800002d2ec0002
d3600002d3e40002d4440002d4e80002d55c0002d6040002d6680002d6c4
0002d7280002d7ac0002d8400002d90c0002d9600002d9d80002da380002
dab40002db180002dc5c0002dd8c0002de880002df100002df7c0002dfcc
0002e04c0002e0f40002e1680002e1b80002e2080002e26c0002e2e40002
e3380002e40c0002e5000002e5840002e5d40002e6380002e6800002e6c8
0002e74c0002e79c0002e7fc0002e8940002e9600002ea000002ea980002
eb900002ec380002ed140002edd80002ef100002efb40002f0840002f0e8
0002f1800002f1cc0002f2140002f2680002f2f40002f3ec0002f4cc0002
f58c0002f5e00002f6ac0002f7b80002f8140002f9480002fa740002fb20
0002fbfc0002fcc40002fe4c0002ff980003007000030184000302280003
0298000303a0000304700003056800030680000306f4000307c400030850
000308fc00030a0000030b3c00030be800030cc000030dac00030ea80003
0f5800030ff00003116c0003120c00031374000314cc000315c4000316d0
0003183c0003196c00031aa400031b5800031cf800031e3800031f700003
20740003219c000322a00003243c000325480003261c000326a0000327b4
0003291c00032a7800032b1800032cfc00032d9800032ea400032f880003
30580003314400033214000332ec000333f8000334e4000336a4000337c0
000338b4000339fc00033ac800033bcc00033d2000033e0c00033f400003
40100003410c0003424c0003436c00034488000345f0000346d8000347c0
000348dc000349ec00034b3800034c3c00034d1c00034d6800034e480003
4ec800034fd4000350d8000351780003526400035330000353e8000354a8
0003559c0003563c000356ec00035794000358880003598400035ab40003
5c2800035d8800035e4c00035f6800036064000360d8000361c400036260
000363ec0003654400036668000367b8000368d4000369f000036af80003
6bd000036ccc00036de000036e840003704c000371540003732400037458
0003754c000376c4000377f400037914000379c000037ab800037b640003
7c3c00037d2800037dd000037e8000037f1c000380ac0003814c00038260
0003835000038478000385e8000386d8000388240003890400038a4c0003
8b7c00038c9000038dd400038ed800038fe0000390740003919400039268
0003941c00039544000396240003979c000398c4000399cc00039b0c0003
9c0000039c9c00039d6c00039e7400039f0c00039fb00003a02c0003a19c
0003a2440003a3540003a4340003a5540003a6bc0003a7ac0003a8d80003
a9a40003aa740003aba40003acc40003adc40003af080003b02c0003b0e4
0003b1b40003b29c0003b3540003b4340003b5200003b6900003b7cc0003
b8e40003ba340003bb400003bc440003bd500003bf3c0003c0f80003c2c4
0003c4200003c5b40003c7080003c8400003c9380003cb140003ccdc0003
ce480003cfb40003d1900003d3a00003d53c0003d6d00003d87c0003da2c
0003db380003dc500003dd3c0003de4c0003df900003e1140003e3c80003
e6640003e8500003ea0c0003eadc0003ec240003ed500003ee800003efbc
0003f0c40003f1b00003f2900003f3600003f4d80003f6000003f80c0003
fa340003fbd80003fd4c0003feac00040044000401b40004036c000404e4
0004065c000408000004099400040b3000040ce000040e2c00040f840004
110800041268000413dc0004152c000416500004175400041894000419c4
00041a5c00041b7c00041c6000041db000041f6c0004223c000423f80004
25e000042744000428bc00042a0000042b3000042c8400042dd400042f0c
00043058000431fc000433b40004342800043684000438cc00043ad40004
3c9c00043e5c000440040004411400044220000443800004450400044660
000448400004499000044b5000044cf400044e740004500c000451680004
521c000452f00004541c00045564000457b4000459e000045b8800045d38
00045e3000045f340004605400046160000462b800046408000465080004
66100004671c000468240004699800046b1000046cc400046e0c00046ed0
00046f7400047070000471540004724c0004733000047494000475f00004
76f4000477f8000479b000047b4000047bb000047cc800047d5000047e54
00047ea400047f1800047fdc000480140004809c000480ec0004813c0004
8200000482500004828c000482d00004830c0004834800048398000483e8
000484800004853c00048688000487300004882c000488d800048a140004
8a9800048b9000048cb400048ddc00048e5800048f1000048fb8000490ac
000491900004928c00049360000494200004950c000496b0000497b40004
98d0000499fc00049b6800049c7000049d0400049eb800049fbc0004a0b4
0004a1bc0004a2a40004a2fc0004a3880004a4c80004a5d00004a7340004
a8080004a8f80004a9cc0004aa980004ac780004ad100004adc40004af00
0004af980004b0480004b1380004b2100004b2f00004b4200004b49c0004
b5400004b6140004b6d80004b8400004ba080004bb500004bc800004bdc8
0004bef80004c0400004c1680004c2c40004c4180004c5140004c6640004
c7600004c8ac0004c9a80004cae40004cc4c0004ce000004cef40004d030
0004d1940004d2c40004d4200004d54c0004d67c0004d7800004d90c0004
da5c0004dc340004ddec0004df000004e0300004e1540004e3800004e4b0
0004e6000004e7300004e8780004e9d00004eb680004ecec0004ee800004
efe40004f1540004f2480004f3900004f4ac0004f5dc0004f6cc0004f800
0004f9100004fa500004fb480004fc780004fd540004fe0c0004ff140004
fff8000500c80005017c00050248000502f8000503c0000505480005063c
000507e0000508cc00050a7000050bac00050ce400050e2000050f580005
1084000511ac000512d80005140000051588000516e4000518c800051a68
00051b8800051c9800051db800051ebc00051fd000052100000522200005
235c000524bc000525c00005272000052834000529bc00052af800052c44
00052d3400052e6400052f80000530b0000531c800053324000534840005
35f800053774000538cc00053a0c00053af400053c2400053d0c00053e30
00053f0800054014000540ec000541f800054338000544b0000546040005
477800054878000549a400054b1000054cb800054e5c000550040005510c
00055218000552e00005539c000554c4000555ec00055710000558300005
59a400055b1400055c5400055d8c00055ecc00056000000560dc000561bc
000562c0000563dc000564ac0005655c0005665800056750000568480005
693800056a3000056b2400056c6400056dc400056f4400057044000571f4
000573200005742c00057544000576580005776c0005788400057a000005
7b9c00057d9c00057ed400058088000581ac0005836c0005852400058764
000588f000058af000058c3800058dec00058f28000591100005924c0005
945400059634000598a800059a4000059c7c00059de000059fd00005a10c
0005a2100005a3d00005a5580005a6e00005a8300005a9900005aad80005
ac300005ad740005af840005b1600005b3300005b4c00005b6340005b778
0005b8c80005ba1c0005bac80005bb940005bc700005bd3c0005be980005
bfec0005c0f00005c2080005c30c0005c41c0005c5a80005c7400005c924
0005ca7c0005cb940005cca80005cde80005cf400005d0940005d1f40005
d3bc0005d5a40005d7400005d9100005da580005dbb00005dcc40005ddfc
0005df8c0005e1440005e2e00005e4680005e60c0005e7980005e9c80005
ebe40005eddc0005efc00005f1640005f2f40005f3b40005f4580005f520
0005f5d00005f7340005f8680005f97c0005fa640005fb900005fce00005
fd940005fe3c0005ff380006006000060218000603c4000605b8000607ac
000609a000060b7800060da000060fcc0006112000061278000613f80006
1570000616ec0006186400061a2000061be000061d6400061ecc00062080
0006222c000623d400062580000627000006288400062a3c00062bf80006
2db000062f64000630e8000632640006342c000635f4000637b80006397c
00063b6800063d5000063ec000064034000641d800064380000645280006
46cc000648a400064a8800064b8800064c7800064dbc00064f1800065054
00065188000652e80006544c0006553c0006562c00065750000658780006
59a000065ac400065c3000065da400065eb000065fbc0006611400066264
000663b80006650c0006663000066750000668b000066a1000066b700006
6ccc00066e2000066f700006710000067280000674100006759c00067754
0006790800067a2000067b6c00067cb000067e3c00067fd40006816c0006
834400068514000686f4000688cc00068ad000068cd000068ecc000690ac
000692c0000694d0000696e0000698f000069b5400069dac00069f240006
a0900006a1d00006a3000006a4440006a57c0006a63c0006a6f00006a7cc
0006a8980006a9b00006aab40006ac200006ad740006af780006b17c0006
b3d40006b6240006b8700006baa40006bd280006bfac0006c1700006c338
0006c5280006c7100006c8fc0006cae00006cd140006cf480006d1300006
d3180006d54c0006d77c0006d9a80006dbd40006de240006e0740006e264
0006e4580006e67c0006e8a40006eac80006ecec0006ef440006f1a40006
f3940006f5740006f7a00006f9c40006fbf80006fe2400070084000702cc
0007051800070764000709e800070c6c00070ef000071170000714240007
16ec000718a400071a1000071be400071d7c00071f4c0007211800072340
0007245c0007255c0007267c0007278c000728d00007290c000729840007
2a0000072a7400072b6000072d0c00072e8000073020000731b0000733a4
000734e4000736180007375400073880000739f800073ab000073b600007
3c4400073d4800073df400073f380007408400074188000742f8000743b4
0007445400074510000745b8000746740007472400074820000749640007
4a7400074c0800074da800074ef400075050000751a40007536800075444
00075504000755d8000756a000075804000758e4000759b000075a200007
5bdc00075d5000075efc0007609c000762940007637c0007645c000765f4
0007677c00076948000769a4000769e0000769e0000769e0000769e00007
69e0000769e0000769e0000769e0000769e0000769e0000769e0000769e0
000769e000076a3800076a9000076ad800076b2400076b5c00076b940007
6be000076c2400076c9c00076d1800076d9000076e0c00076eec00076fd0
000770b40007719800077284000773ec000774400007747c000774dc0007
7570000776380007769400077694000778a000077b2c00077b9000077c24
00077cd000077d3c00077dec00077ec400077efc00077f34000780b40007
81fc00078390000783c800078700000787300007890400078a9c00078c3c
00078d6400078ea000078f5400078ff40007909800079164000792600007
9344000793b4000794b8000795a00007962400079668000796c400079710
0007975c00079840000798e00007996000079a1800079b0c00079bc80007
9cc400079dac00079e1400079f180007a0000007a0800007a0c40007a120
0007a1680007a1b40007a2c00007a38c0007a42c0007a4c80007a5940007
a6600007a7080007a7700007a8bc0007a98c0007aa880007ab6c0007ac44
0007adac0007aef40007b0880007b3680007b5c00007b7280007b8600007
baa40007bc5c0007bdf40007bfc80007c08c0007c1d40007c3480007c55c
0007c6d80007c8340007c9800007cb100007cd5c0007ced00007cfb00007
d11c0007d3580007d4a40007d5b40007d7580007d8d40007db480007dd90
0007ded80007e0300007e1b00007e2780007e3c40007e46c0007e5680007
e6140007e7100007e8f40007eaac0007ec980007ee600007f03c0007f254
0007f4400007f5d40007f7c80007f9880007fb9c0007fdb40007ff300007
ffcc00080094000801b800080318000804740008053c0008067c00080804
000809d800080b6800080cb000080e400008101c00081118000811d40008
12e000081438000814f0000816480008183c00081960000819e000081b0c
00081cd400081f34000820740008211c0008226000082440000824c80008
256000082670000827cc000828e800082a0c00082bd800082c9400082d30
00082dac00082e2000082e9c00082f1c00082fb800083058000830d80008
3158000831d8000832540008335000083448000834dc0008358800083644
00083694000836e00008373400083780000838040008388c000839540008
3a5000083b1400083ba400083c3800083cc800083d6000083e2800083f14
00083fa400084054000840ec00084178000841d00008427c000843700008
43f0000844cc000845c800084630000846a00008474800084828000848b0
0008495800084a4800084ad400084c1800084cf000084dbc00084df40008
4e9400084f5800084fb80008501c000850f000085188000851dc0008522c
0008536400085464000855440008564000085690000856cc000857200008
5774000857f4000858400008588c000859080008598400085a4400085ad0
00085b5400085bf800085cb400085da400085ed000085f4000085fb80008
6010000860a8000860f0000861380008617c000861c00008621400086268
000862e800086368000863ec0008647000086514000865c4000866d40008
6794000868780008693c0008699c000869fc00086a5c00086ac400086b24
00086b7800086c3800086ce400086dd400086e5400086e7c00086ed00008
6f4400086fbc0008707c0008714000087198000871f4000872ac0008732c
00087448000874ec0008754c000876040008772400087830000879140008
7a0c00087b0800087bb800087ca400087d8800087eb400087fbc0008811c
0008827c000883bc000884ec0008862c0008872800088864000889a00008
8b1c00088bd400088cec00088de800088ec400088fa8000890940008913c
000892fc000893e800089504000896000008975000089890000899b40008
9adc00089c0c00089cf800089e3800089f680008a0e40008a2780008a38c
0008a4600008a5380008a6640008a75c0008a8600008a9680008aa1c0008
aae00008abe00008acb40008add40008aed80008af8c0008b0700008b14c
0008b2580008b3540008b41c0008b50c0008b5c00008b6f00008b7cc0008
b8b00008b9b40008baac0008bb800008bc3c0008bd180008bde00008bec0
0008c0040008c0e00008c19c0008c2900008c3700008c4140008c52c0008
c6100008c6c80008c7b80008c8880008c9500008ca100008cae00008cbc8
0008cc740008cd580008ce180008cf240008cff40008d0c80008d18c0008
d2640008d35c0008d43c0008d50c0008d5e00008d68c0008d7800008d84c
0008d9280008da4c0008dbe00008dd580008deb80008e0040008e1540008
e2640008e3b00008e5080008e68c0008e7000008e71c0008e7480008e764
0008e7900008e7ac0008e7d80008e7f40008e8200008e83c0008e8680008
e8880008e8bc0008e9280008e95c0008e9f80008ea840008eab40008eaf4
0008eb380008eb780008ebbc0008ec080008ec580008ec7c0008eca00008
ed380008ed700008f1c00008f2a40008f4300008f5ac0008f6480008f768
0008f8700008f94c0008f9e80008fa540008fac40008fc280008fd300008
fe300008ff34000900880009019c00090368000904cc000905cc000906bc
000907e0000908e000090a7000090bf400090d4000090e6000090f7c0009
101800091210000915940009165c000916cc0009177c000917d80009180c
000918800009194400091a0000091ad400091c7000091d1000091f380009
2168000923c0000925280009268800092ad800092b5400092be800092c9c
00092d3400092dbc00092e4800092eac00092f5800092fdc000930940009
30fc0009317c000931f80009330c000933f80009351c0009364c000937b0
0009391400093a4000093bdc00093d3800093ebc00094064000941740009
427c00094398000944ec00094640000947180009477c000947e000094878
0009491400094a1800094ae800094bb000094ca400094e1000094eb80009
4f5c0009597000095bd000095e0c00096080000960e00009613c00096190
000961f800096680000967e00009702800097200000972fc000973bc0009
745c00097544000976480009771c00097838000979240009799400097a9c
00097b8400097cac00097df000097e8800097f2400097fb8000980680009
81680009826c000983800009846c000984dc000985e4000986d000098818
0009891800098a5800098bf000098d5c00098f200009a2500009a47c0009
b4c80009b6ac0009b8280009b9280009bae80009bcc80009becc0009bfac
0009c0b40009c15c0009c2200009c3280009c4040009c4f00009c5dc0009
c6500009c6ec0009c7b80009c85c0009c8f80009c9dc0009ca7c0009cb58
0009cc240009cd380009ce380009cedc0009cfa40009d0200009d0f80009
d1880009d21c0009d2d80009d2d80009d3300009d4380009d5400009d650
0009d7a40009d8f40009da680009dbbc0009dcec0009de240009df540009
e0900009e2040009e2a40009e3440009e3ec0009e4d40009e5e40009e74c
0009e8180009e8e00009e9b40009eac80009ebc00009ed240009ee200009
ef140009f0040009f1040009f2380009f2f80009f4140009f5200009f624
0009f8080009f93c0009fa4c0009fb840009fcb80009fd840009fe600009
ff64000a00c8000a0208000a0344000a0410000a04d0000a05e0000a0700
000a0818000a0910000a0a54000a0ba8000a0cd8000a0e70000a0fb0000a
10e4000a11cc000a1324000a144c000a1530000a1618000a170c000a182c
000a1908000a1a18000a1b90000a1c4c000a1c4c000a1db0000a1f40000a
1f40000a2050000a2130000a21dc000a22cc000a23a0000a2488000a2654
000a26fc000a27b4000a2854000a2954000a2a40000a2b18000a2ba4000a
2c20000a2ce4000a2dac000a2ea0000a3034000a31a4000a3340000a3440
000a3584000a36e8000a3868000a3994000a3ac4000a3c04000a3d40000a
3eb8000a3f9c000a40a0000a41cc000a42f4000a4450000a4598000a4640
000a46ec000a4960000a5130000a5360000a5648000a56d8000a576c000a
581c000a591c000a5a10000a5b24000a5c0c000a5c7c000a5d88000a5e74
000a5ed4000a5f50000a5fe8000a6040000a6120000a61cc000a62b8000a
62b8000a63a0000a6568000a6630000a66ec000a67f8000a68ac000a6914
000a6a4c000a6b2c000a6c18000a6cfc000a6db8000a6e9c000a6f74000a
7054000a70d0000a716c000a71e0000a72a4000a72e4000a7324000a7378
000a73d0000a741c000a7468000a74c0000a7518000a7570000a760c000a
76a0000a7704000a7790000a7820000a788c000a7938000a7984000a7b14
000a7c18000a7c6c000a7cc0000a7d38000a7db4000a7ea8000a7fa4000a
8048000a813c000a819c000a81fc000a8254000a82ac000a8304000a83ac
000a8538000a86f8000a8870000a8ac4000a8cd4000a8e98000a90b0000a
91480001000009c002ee0011000000000002000100020016000001000b47
000000000000000a007e0001000000000000011700000001000000000003
000b01170001000000000004000b01220001000000000006000b012d0003
000104090000022e01380003000104090001001603660003000104090002
000e037c00030001040900030016038a0003000104090004001603a00003
000104090006001603b64c696e7578204c6962657274696e652062792050
68696c69707020482e20506f6c6c2c0a4f70656e20466f6e7420756e6465
72205465726d73206f6620666f6c6c6f77696e67204672656520536f6674
77617265204c6963656e7365733a0a47504c202847656e6572616c205075
626c6963204c6963656e736529207769746820666f6e742d657863657074
696f6e20616e64204f464c20284f70656e20466f6e74204c6963656e7365
292e0a43726561746564207769746820466f6e74466f7267652028687474
703a2f2f666f6e74666f7267652e73662e6e6574290a5365707420323030
332c20323030342c20323030352c20323030362c20323030372c20323030
382c20323030392c20323031302c20323031314c696e42696f6c696e756d
4c696e42696f6c696e756d4c696e42696f6c696e756d004c0069006e0075
00780020004c006900620065007200740069006e00650020006200790020
005000680069006c00690070007000200048002e00200050006f006c006c
002c000a004f00700065006e00200046006f006e007400200075006e0064
006500720020005400650072006d00730020006f006600200066006f006c
006c006f00770069006e00670020004600720065006500200053006f0066
007400770061007200650020004c006900630065006e007300650073003a
000a00470050004c0020002800470065006e006500720061006c00200050
00750062006c006900630020004c006900630065006e0073006500290020
007700690074006800200066006f006e0074002d00650078006300650070
00740069006f006e00200061006e00640020004f0046004c00200028004f
00700065006e00200046006f006e00740020004c006900630065006e0073
00650029002e000a00430072006500610074006500640020007700690074
006800200046006f006e00740046006f0072006700650020002800680074
00740070003a002f002f0066006f006e00740066006f007200670065002e
00730066002e006e006500740029000a0053006500700074002000320030
00300033002c00200032003000300034002c00200032003000300035002c
00200032003000300036002c00200032003000300037002c002000320030
00300038002c00200032003000300039002c00200032003000310030002c
00200032003000310031004c0069006e00420069006f006c0069006e0075
006d0052006500670075006c00610072004c0069006e00420069006f006c
0069006e0075006d004c0069006e00420069006f006c0069006e0075006d
004c0069006e00420069006f006c0069006e0075006d0000b801ff85b001
8d004bb0085058b101018e59b146062b5821b010594bb014525821b08059
1db0062b5c5800b0072045b0032b4401b0082045b0032b44b0092045ba00
087fff00022bb10346762b44b00a2045b2091e022bb10346762b4459b014
2b00000000>
[16089 16309 16245 16041 16197 16205 16197 16081 16165 16353 16277 16341 16109
16041 16341 16313 16209 16137 16321 16217 16257 15997 16193 15961 16341 16157
16213 16041 16301 16325 16213 16233 16373 16273 16361 16349 15949 16377 15869
16241 16309 16153 11921 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QAAAAA+LinuxBiolinum AddT42Char 
1 5424 29 <0002007d005001620350000c0019003100b0172fb410070012042bb00a2f
b403070012042b01b01a2fb00dd6b00032b1140ae9b00632b1140ae9b11b
012b00303113353637331617150607232e0103353637331617150607232e
017d1b5408541a1d510831300e1b5408541a1d5108313002d9084c231f50
085a150a32fe18094c221f4f095a140a31000000>QAAAAA+LinuxBiolinum AddT42Char 
1 9196 48 <00010083fffa0689054c0025012200b22401002bb40a0e13142024173301
b0262fb00ed6b10a0ae9b127012bb0361abac5cce56300152b0ab0142e0e
b01bc0b1060ef9b001c0ba390ce2fe00152b0a05b0132e0eb011c0b10106
08b1060ff90eb007c0bac5cce56300152b0bb00110b3020106132bb30301
06132bb3040106132bb3050106132bb01b10b3151b14132bb3161b14132b
b3171b14132bb3181b14132bb3191b14132bb31a1b14132bb2020106208a
208a23060e111239b00339b00439b00539b2191b14111239b01a39b01839
b01739b01639b0153900400f010607111b0203040515161718191a2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e0140110106071113141b0203040515161718
191a2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2eb0401a01b10a0e1112b008
390030310133161216121701331213262322070203270003232e05272306
0a01072623220712018b38378060844102112d5e4e1f4d461f362707fef4
cf27224b3e4a42502709153d370e17262d17a6054c71fed8e3fee2770411
fcd1fddd0606028b014301fe10fe2748ac97af9aae4d84fe71fe95570606
031f0000>QAAAAA+LinuxBiolinum AddT42Char 
1 10892 54 <00010066ffec039e05440034006000b22a01002bb10007e9b21005002bb1
1b07e901b0352fb00bd6b12008e9b02010b103012bb1270ae9b136012bb1
200b1112b131323939b00311b50007101b252a241739b02712b214151839
393900b11b001112b50b1418272e322417393031253236353426272e0335
343637363332161f02060f012e012322070e0115141e0217041114062322
262f02363f011e0101f0608f7b744c6b6e3c8161545c6aa21d1c04270814
299a544e2f27372d564433016ffec16abb2828042907142fc146816e7781
311f3d5d7c4e6aad29232d181806814c02607718146d373b5f3d231389fe
f0b0d72d171806983b025a83>QAAAAA+LinuxBiolinum AddT42Char 
1 14016 72 <00020046ffec034c0383000a0021006800b20f01002bb420070034042bb2
1602002bb10607e9b4001c0f160d2bb10007e901b0222fb013d6b11c08e9
b00032b01c10b103012bb11908e9b00c32b123012bb1031c1112b20f1620
393939b01911b00b3900b11c201112b20c130b393939b00011b019393031
01213235342623220e0201170e0123222726353400333216151423211417
163332010001791d6d40173a4c400217293bbd6dd5705c01049fb8ab25fd
d3314a95b1022f1d6a7b16346efe5c335264876fcad50102e99a23b64e75
0000>QAAAAA+LinuxBiolinum AddT42Char 
1 15236 76 <000200a4fffa0175052f0007001c006500b21901002bb20305002bb40707
0014042bb20d02002bb00b3301b01d2fb001d6b10a193232b1050ae9b110
153232b1050ae9b31c0501082bb11308e9b2131c0a2bb3401310092bb11e
012bb1131c1112b6030607020d1718241739b00511b01639003031123436
3216140622031027371637321615060715141707262207273635a43f5240
40522b1204585a0c07120113052576250412049e523f3f5240fd8301107e
060608060facb491df920606060689e8>QAAAAA+LinuxBiolinum AddT42Char 
2 0 80 <00010096fffa05ee0383003f00a800b23401002bb40f12212431241733b2
0302002bb1083d3333b42a070032042bb01932b23a02002b01b0402fb037
d6b12e08e9b00032b2372e0a2bb340373a092bb02e10b128012bb11b08e9
b01b10b115012bb10c08e9b141012bb12e371112b232333d393939b02811
b40324253031241739b01b12b2062223393939b01511b512081319202124
1739b00c12b11011393900b12a341112b300060b01241739b00311b03c39
303101173633321617363332161d0114170726220727363d013426232207
161d011417072622072736373534232206071514170726220727363d0110
273716373217014c06aeaa56750e9ac09866130525762504124e56966e02
130425772504120188379c471204257724041212045a4b0c0102d106b858
4aa2a6a0ccee83060606067df4e164527b1935ceee83060606067df4e1b6
5848f7ee83060606067df470011b7306080e15000000>QAAAAA+LinuxBiolinum AddT42Char 
2 352 81 <00010098fffa03c10383002b007e00b21701002bb2030614333333b22602
002bb02033b40d070032042bb21d02002b01b02c2fb01ad6b11108e9b022
32b21a110a2bb3401a1d092bb01110b109012bb10008e9b12d012bb1111a
1112b2151620393939b00911b40607131426241739b00012b10405393900
b10d171112b2232429393939b02611b01f3930310114170726220727363d
013426232206071514170726220727363d011027371637321d0117363332
1615140603ae1305257625041241523fa2481204257625041212045a4c0c
049ec48777040171e9880606060689e8c879565256efee83060606067df4
70011b7306080e159506b8a0a4218c00>QAAAAA+LinuxBiolinum AddT42Char 
2 608 82 <0002004effec03b20383000b0019004700b20901002bb41407007d042bb2
0302002bb10c07e901b01a2fb000d6b11008e9b01010b117012bb10608e9
b11b012bb117101112b10309393900b10c141112b1000639393031133412
33321615140623222601220e0115141e013332363534264ef1c9cddde9c9
c7eb01ac5a752929836466866c01a4d90106f8d5cdfdfa024b6e9a625ca4
8ac193cfd100>QAAAAA+LinuxBiolinum AddT42Char 
2 1264 85 <000100a0fffa02b203830021005e00b21601002bb01333b20402002bb01f
33b40b07001c042bb21c02002b01b0222fb019d6b11008e9b00032b21910
0a2bb340191c092bb123012bb110191112b214151f39393900b10b161112
b300080901241739b00411b1071e3939303101173e0133321f010f012623
2207061d0114170726220727363d0110273716373215015606486c501931
0829101f4c442e461204257625041212045a4c0c02ac047b600e0898041d
486a616ae58c060606067ff270011b7306080e15>QAAAAA+LinuxBiolinum AddT42Char 
2 1464 86 <00010044ffec02d503830027007000b22501002bb10307e9b20f02002bb1
1807e901b0282fb00cd6b41b080045042bb01b10b106012bb12008e9b129
012bb11b0c1112b10a013939b00611b4090f181d25241739b02012b31112
141e24173900b103251112b02739b01811b600060c13140120241739b00f
12b0123930313f0116173236353426272e0135343633321f010f012e0223
22061514171e0115140e02232227661f6a885468646b7382b87d9e760429
1c27255e314458be7f981f479264989dcf0293015b4f46441c1f6f6e7783
3d0797022d2737433e732d1f7a732f5a5a3537000000>QAAAAA+LinuxBiolinum AddT42Char 
2 1696 87 <00010027ffec026004ae002d006900b22001002bb41b070038042bb01b10
b01d20d611b41e070022042bb20f02002bb00033b11207e9b0273201b02e
2fb003d6b100263232b10c08e9b01532b00c10b12308e9b0232fb12f012b
b10c031112b0083900b1121d1112b119233939b00f11b1102a3939303113
343635373e023732170607333237170607262b0111140615141716371706
2722263534363511220727363716c308041f2b370e12010a016127680a10
08296b4e06444f521977764c690760320a1d101d036f3fa42306040e1b06
1483a8040f292b04fefe46b3179e0a0d1d334c01665e17ef460118040f2d
27040000>QAAAAA+LinuxBiolinum AddT42Char 
2 2756 92 <00010039fe1b03d303750017002d00b21400002bb01033b20002002bb204
090d333333b20002002b01b0182fb119012b00b100141112b00639303113
1633323716133312131633323706000726232207363726391d4e4a1a44ce
048a83143c441458fe393323412523935f2a03750606d1fe0f0126019c06
06b2fbfea60a0af8d96e0000>QAAAAA+LinuxBiolinum AddT42Char 
1 0 0 <00050000000004000596000200050008000b000f005a00b20c01002bb403
070065042bb20d06002bb40b07004e042b01b0102fb00cd6b40108001304
2bb00110b107012bb40f080013042bb111012bb107011112b5020304060a
0b24173900b10b031112b500010507080924173930311311090121013701
110901210311211166015dfee102b8fea43d015dfe66015cfd48a4040004
d3fbf00208fd9b02095cfdf80410fe540206fad30596fa6a0000>QAAAAA+LinuxBiolinum AddT42Char 
QAAAAA+LinuxBiolinum /CharStrings get begin
/space 3 def
/colon 29 def
/M 48 def
/S 54 def
/e 72 def
/i 76 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/y 92 def
end
QAAAAA+LinuxBiolinum /Encoding get
dup 32 /space put
dup 58 /colon put
dup 77 /M put
dup 83 /S put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/QOZGVT+LinuxBiolinum /QAAAAA+LinuxBiolinum findfont ct_VMDictPut
/QOZGVT+LinuxBiolinum*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 18{/.notdef}rp /M 5{/.notdef}rp /S 
17{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 
2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
QOZGVT+LinuxBiolinum nf
QOZGVT+LinuxBiolinum*1 [9 0 0 -9 0 0 ]msf
-2.16 -23.8155 mo
(Session: )
[4.55397 4.07703 3.56396 3.56396 2.33995 4.5 4.85101 1.98001 0 ]xsh
29.507 -23.8155 mo
(Memory )
[7.97401 4.07703 7.26306 4.5 3.19496 4.55397 0 ]xsh
63.31 -23.8155 mo
(Systems)
[4.55397 4.55397 3.56396 3.05997 4.07703 7.26306 0 ]xsh
/QOZGVT+LinuxBiolinum*1 uf
/QOZGVT+LinuxBiolinum uf
/QAAAAA+LinuxBiolinum uf
/QOZGVN+Inconsolatazi4-Regular*1 uf
/QOZGVN+Inconsolatazi4-Regular uf
/KAAAAA+Inconsolatazi4-Regular uf
/QOZGVL+LinLibertineI7*1 uf
/QOZGVL+LinLibertineI7 uf
/IAAAAA+LinLibertineI7 uf
/QOZGVK+LinLibertineT*1 uf
/QOZGVK+LinLibertineT uf
/HAAAAA+LinLibertineT uf
/QOZGVJ+LinLibertineT*1 uf
/QOZGVJ+LinLibertineT uf
/GAAAAA+LinLibertineT uf
/QOZGVS+Inconsolatazi4-Bold*1 uf
/QOZGVS+Inconsolatazi4-Bold uf
/PAAAAA+Inconsolatazi4-Bold uf
/QOZGVR+LinLibertineI*1 uf
/QOZGVR+LinLibertineI uf
/OAAAAA+LinLibertineI uf
/QOZGVP+LinLibertineTB*1 uf
/QOZGVP+LinLibertineTB uf
/MAAAAA+LinLibertineTB uf
/QOZGVM+rtxmi7*1 uf
/QOZGVM+rtxmi7 uf
/JAAAAA+rtxmi7 uf
/QOZGVQ+LinLibertineTI*1 uf
/QOZGVQ+LinLibertineTI uf
/NAAAAA+LinLibertineTI uf
/QOZGVO+LinLibertineTI*1 uf
/QOZGVO+LinLibertineTI uf
/LAAAAA+LinLibertineTI uf
/QOZGVI+LinBiolinumT*1 uf
/QOZGVI+LinBiolinumT uf
/FAAAAA+LinBiolinumT uf
grestore
gsave
315.063 -21.6004 mo
501.84 -21.6004 li
501.84 -32.8876 li
315.063 -32.8876 li
cp
clp
set_def_flat
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QAAAAA+LinuxBiolinum Initial
ct_T42Dict begin
-1.082 -0.266 6.168 0.891
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+LinuxBiolinum
Type42DictBegin
[<00010000000c000c000c000c4f532f32574a00f8000000cc000000566376
7420162a141200000124000000766670676d0fb42fa70000019c00000265
676c796697c3690c00005734000a9148686561641e3335f7000004040000
0036686865612fe032560000043c00000024686d7478381ffe3b00000460
000027006c6f636132bb52bc00002b60000027046d6178700ae90e390000
5264000000206e616d65987dfa8f000052840000044a70726570fd56ccb6
000056d00000006167646972000000000000000000000000000103500190
00050000053305990000011e05330599000003d700660212080202000503
000000000000e0000aff5000e5fb00000020000000005066456400400020
fffd0727fe080000072701f8600001bf000000000000fe2f0000036f03ae
04cd05290581005a00a400a400d30049004b007000c8005d00bb00560050
008a0064008c00580095009e0086008300ad00430045003500a800290052
00540060003e00a10069004e008e00bf0032003c004700910098002e006c
008000620075001400100012006e000a003800930000b0002cb000134bb0
2a5058b04a7659b000233f18b0062b583d594bb02a50587d5920d4b00113
2e182db0012c20dab00c2b2db0022c4b5258452359212db0032c691820b0
40505821b040592db0042cb0062b582123217a58dd1bcd591b4b525858fd
1bed591b2321b0052b58b046765958dd1bcd595959182db0052c0d5c5a2d
b0062cb12201885058b020885c5c1bb000592db0072cb12401885058b040
885c5c1bb000592db0082c121120392f2db0092c207db0062b58c41bcd59
20b00325492320b004264ab00050588a658a6120b0005058381b2121591b
8a8a6120b0005258381b21215959182db00a2cb0062b5821101b1021592d
b00b2c20d2b00c2b2db00c2c202fb0072b5c582020472346616a20582064
62381b2121591b21592db00d2c12112020392f208a20478a4661238a208a
234ab000505823b0005258b040381b21591b23b0005058b04065381b2159
592db00e2cb0062b583dd61821211b20d68a4b5258208a234920b0005558
381b2121591b212159592db00f2c2320d6202fb0072b5c582320584b531b
21b00159588ab0042649238a23208a498a2361381b21212121591b212121
2121592db0102c20dab0122b2db0112c20d2b0122b2db0122c202fb0072b
5c582020472346616a8a2047234623616a602058206462381b2121591b21
21592db0132c208a208a8720b003254a64238a07b02050583c1bc0592db0
142cb3004001404242014bb8100063004bb8100063208a208a5558208a20
8a5258236220b00023421b6220b00123425920b0405258b2002000436342
b2012001436342b02063b019651c21591b2121592db0152cb001436323b0
004363232d000000000100000001199965071b365f0f3cf5021f08000000
0000ca25e93000000000ca25e930f758fddb315e07250000000800000001
00000000000100000727fe080000322df758f860315e0001000000000000
000000000000000009c0040000000000000002aa00000200000001d20075
02b0008103c2003703b800540570008105ae005a0185006d0266005a0266
002b0376009a0437008701c2006202a9004401c2006f0295001f03b80050
03b800dd038d004303b8007103b8002b03b8006003b8005e03b8008103b8
005003b8003901c2007d01c2006203e500640437008703e50064033d0058
072800790508002104ed00c1056a006a05ae00c1044d00c1040800c105bc
006a05ce00c1025a00c1028fffac050800c1041e00c30716008305be00c9
05ed006a047800c105ed006a04cc00c1040c00660451001f058900c1050c
0021079b002104a5002f04a7002104f9005802e300e10256001702e3004a
042400e503e3000a032200c503d9005c0408008f036e004e043d0068039f
00460283002703fd0042046400a6021400a4022dffac040600a6020400a6
06740096044f00980400004e042f0096042d006402d700a0032b004402b8
0027044b009803a7002905bc002903a30031040c0039035300290237001d
01ae00a602370014039700350200000001d200790400009a040000280400
003f0400000901a300a603dd006603080066051000460260003504580098
047a003102a9004405100046032d00790222004604370087027c004e0281
005e02ba00b403e3005a04d0007502000091045301ba031200e502ca0050
045800a4054700c9054700980547005a033d004c05080021050800210508
0021050800210508002105080021066a0025056a006a044d00c1044d00c1
044d00c1044d00c1025a002f025a0091025a0033025a001b05ae002305be
00c905ed006a05ed006a05ed006a05ed006a05ed006a043700d905ed006a
058900c1058900c1058900c1058900c104990021045c00c1045c004c03d9
005c03d9005c03d9005c03d9005c03d9005c03d9005c057e0050036e004e
039f0046039f0046039f0046039f004602140039021400a6021400100214
000a03f50046044f00980400004e0400004e0400004e0400004e0400004e
043700870400004e044b0098044b0098044b0098044b0098040c0039041e
0096040c00390508002103d9005c0508002103d9005c0508002103d9005c
056a006a036e004e056a006a036e004c056a006a036e004e056a006a036e
004e05ae00c10476006805ae0023043d0068044d00c1039f0046044d00c1
039f0046044d00c1039f0046044d00c1039f0046044d00c1039f004605bc
006a03fd004205bc006a03fd004205bc006a03fd004205bc006a03fd0042
05ce00c1046400a605ce005404640035025a001202140018025a00100214
0012025a001b0214001f025afffe0214ffd1025a00c1021400a604b400c1
044900a4028fffac022dffac050800c1040600a603f70096041e006d0204
0083041e00c3020400a0041e00c3025100a6041e00c3020400a6041e000a
0204000c05be00c9044f009805be00c9044f009805be00c9044f0098044f
0033058f00ba043d009805ed006a0400004e05ed006a0400004e05ed006a
0400004e06b400560633004604cc00c102d700a004cc00c102d7009a04cc
00c102d70098040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b00440451001f02b800270451001f02b800270451001f02b8
0027058900c1044b0098058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098079b002105bc002904a7
0021040c003904a7002104f900580353002904f900580353002904f90058
035300290251003b040800100537000a0487002303db000a0493002f03e1
0019056a0031056a006a03f1004e05ae002306390004047e005603f30046
03eb0046047a00b0052600560422004e040cff7b0399ffe105bc006a04ef
000005b6002502510029025a0027051800c103d400270204000803f3002d
06d90033058fffa6042f002b05ed006a05ed006a0400004e070e004a0585
004a04ac000003d4000a0483002303d4005a02f7004c04bc002902700004
02b8002704b40014026e0029048f000e05850000044b0098055300310535
0000052000000502001704f900580353002904dd005604dd005e0395002f
0395005a03810043036e002d036e005402f1002904280019017a0096024b
009602a7003301d200750a2000c1089100c1072d0068062400c3062b00c3
03e100a6082400c9078500c9060800980508002103d9005c025a002b0214
001f05ed006a0400004e058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098039f00210508002103d9
005c0508002103d9005c066a0025057e005005bc006a03fdfffe05bc006a
03fd0042050800c1040600a605ed006a0400004e05ed006a0400004e04dd
0056031c0029022dffac0a8d00c1090400c10724006805bc006a03fd0042
073300230451001205be00c9044f00980508002103d9005c066a0025057e
005005ed006a0400004e0508002103d9005c0508002103d9005c044d00c1
039f0046044d00c1039f0046025a00000214ffa2025a00190214002305ed
006a0400004e05ed006a0400004e04cc00c102d7004404cc00c102d70087
058900c1044b0098058900c1044b0098040c0066032b00440451001f02b8
002703d4009a0310004605ce00c1046400a604d2002b05160046046e0060
03be005404f1005203a500460508002103d9005c044d00c1039f004605ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
04a70021040c0039030a002f054b002b02fd0029022dffac05fd004605fb
004a058d0021056a0056036e0019041e00100451001f032b004403a70014
04ed000c03a5fff50410004604100012040a009e036e003303a1004e043d
0052044d0052036c0046039f002104ba00310335005a03470052048b0052
03d20046025eff46044b004e0418004e0402004e03f9003903330031044f
0093044f00a4044f00a402c6000c02510087022800ae024b000a02dd0025
020400a4044900a402c6002b06310093067e009604b4ffd3044700980428
009a04000052054b004e05b40046048d003102d7002902df002d0322002d
02df00a002df00a002ac008102ac002d037a008d037a0093032b00270256
ffd30256ffd30256ffae0256ffd302b8002102b8003904100037046e002d
03ef00ac03a7007305bc005803f7003b032f001403f3002903a70029031c
0029031c0029038100580381004a03810058037a004a05ed006d03b400ae
03ce00520412004e047c00ae0208ffd303e1001903450093044b004e0381
004a0381004a067600520676005206890068051a003903ac003905350039
05e10039045a00a4044900a4038f0029032d006404ed002d04fb002d030e
009c030e009c023d002d0241009a02410023028d002502b2009304260029
02a900390185002102cc006f0158003b016600420158003701f1006401f1
005e02a3007702a3008b042400db042400db042400e5042400e302ca0066
02ca0062010a0052036600830231005a023100a201a3008d031e006f020e
004a0226005c01ac004a01a1004a01890042018900460212005002120050
02310052023100460289002b025300c302e300c102ac00b40256000a02cc
006f028b005002df006402c8003901ce009c0235004e029d002902a3008b
027e001b03e3000a030600680000fe190000fe170000fddd0000fdb20000
fd2f0000fd2f0000fda20000fe270000fd460000fe250000fdd90000fd9a
0000fd5c0000fe8d0000fd730000fd9e0000fce90000fd420000febc0000
feee0000fef80000fedd0000fd4a0000fd850000fd5c0000fd5c0000fcf6
0000fe640000fd770000fd480000fd480000fd330000fd330000fe0e0000
ff750000fdd70000fd0a0000fd960000fd960000fdd30000fd710000fdbc
0000fcec0000fcbe0000fd5c0000fd6d0000fce70000fce90000fd3f0000
fcf60000fc8f0000fd0a0000fd3f0000fd7b0000fc8f0000fc620000fae5
0000fe230000fd000000fd420000fcbe0000fd1a0000fdb00000fc8f0000
fe190000fe170000fce90000feee02f100660000fe390000fd000000fc8f
0000fdd70000fde60000fd270000fd270000fd040000fcb00000fd790000
fd9b0000fe3d0000fce90000fd220000fd9b0000fd9b0000fca50000fe5c
00a1ff790000fe620000fd680000fdc30000fd0e0000fd0e0000fcdd0000
fcdd0000fc5c0000fd0e0000fddb0000ff680000ff790000ffcf0000ff62
0000ff6a0000ff7d0000ff600000ff6d0000ff0e0000ff980000ff960000
ff5c0000ff6001c6006a0189003102a501060391002f038f00500391002f
01c2006201c0005802f10066050800210206008d0541ffb4065cffcf0302
ffb605edffdf057effba05b8ffcf0241fff60508002104ed00c103d900b4
0516003d044d00c104f9005805ce00c105ed006a025a00c1050800c10500
00140716008305be00c9052f005c05ed006a05a900b8047800c104c00029
0451001f04a70021056a004a04a5002f058d002d05990064025a002104a7
0021048900460335005a044b00980241008703ef00ac04890046041c0064
03f3002103e3004e0335005a03760050044b009803ed0050024100870400
009803f3002d044d008f03d40071036c004e0400004e0499003b0439006f
0399004e0493004c0387003703ef00ac04b80050041e0000051a00a40585
00600241fff003ef00ac0400004e03ef00ac0585006004120050046800a0
046a000a053bffc5046a000a04a100480589004c03fb003105ed006a0400
004e04120021034700480410002f038d006f044b0064044b0064066a0014
03f5004803fb003103ba0046038f00500212ffac05ed006a035e004c035e
004c044f007904ca005004be007f04ca004204ca005004ca0042044d00b6
044d00b60591001f03d900b404d40050040c0066025a00c1025a00230314
003b0756005807ba00ba05a1001f050e00c105d200c104a3005205a900b8
05080021048100bc04ed00c103d900b405a90037044d00c1076400480456
004a05d200c105d200c1050e00c1051600290716008305ce00c105ed006a
05a900b8047800c1056a006a0451001f04a300520560004a04a5002f059d
00b8051000ac07ae00bc079500bc05c80066064900bc047600bc04d40056
073d00c1047c000003d9005c03f7005603b400ae032200b2042b0031039f
00460549001903c4004c049d00ae049d00ae03e300b6043f003705660091
047c00ae0400004e049100bc042f0096036e004e03910042040c0039059f
005403a30031049100b204140075067400b2068100b2045c0042057200ba
039f00ba03780056057c00aa038d0019039f0046039f00460428004a0322
00b203780056032b0044023f00bc0237000a022dffac05620035060400ae
0458003903e300b6049d00ae040c0039048300b207a1006d0562004605ae
00140445001f06c600c1054700aa06ba00040543000e099500c107910037
075e000a066a000a09f100c1087c00370456006403370052057e002d051a
004605ed006a03a3004c05620000044b001205620000044b001207a1006d
0562004607a1006d056200460000fccb057a001f0414002b047800c1042f
009603e70021032d003703fb00270322001f04be00b4041600b206ef0048
057c002d0456004a0360004c050800c103fb0042050e00c104740046050e
002303d400230604001f048b003105990023047c004206d200c105ca00ae
07b800b8064b00bc0568004604740048056a006a036e004e047effe30391
003704a700210497001404a70021049700140528000603d4001406e70014
05c400460512003b04200044051200ac0420007505430023045800420674
0016044500350674001604530035025a00c1076400480549002504d40023
043b004605b40023047c004205ce00c1047600ae0512003b042000440508
002103d9005c0508002103d9005c066a0025057e0050044d00c1039f0046
05260056039f002105260056039f002107640048054900190456004a03c4
004c04dd0056031c002905d200c1049d00ae05d200c1049d00ae05ed006a
0400004e05ed006a0400004e05ed006a0400004e04d400560378005604a3
0052040c003904a30052040c003904a30052040c0039051000ac04140075
03fb0021035a0037064900bc057200ba000000e90000005e0000004c0000
00310000010c0000009a0000009c000000ae000000ae0000005200000052
000000480000010c000001290300007f000000ac025300e9000002890000
ff9a02d000b4029b004a03d9003d03be002902ae002b0381004403d20044
02470037024f004e03d4004803e300390228003703cc004203b4003903ce
0017043700600428004c02410044028900210414005803fd003b03ce0033
03ca003303db004403d7002d03f9005803e9003504e50044041e00290474
002f045c00370443003701c000660314006602f70042026000350274003c
0278005c02780033027c0037027c001d02740029018d00930283006203e1
005c0274002f0241004802be005c01c200230333008503e1006402a50029
0249002d01eb00230260002b0508002103d9005c04ed00c10408008f04ed
00c10408008f04ed00c10408008f056a006a036e004e05ae00c1043d0068
05ae00c1043d006805ae00c1043d006805ae00c1043d006805ae00c1043d
0068044dffb3039f0046044d00c1039f0046044d00c1039f0046044d00c1
039f0046044d00c1039f0046040800c10283002705bc006a03fd004205ce
00c1046400a605ce00c1046400a605ce00c1046400a605ce00a004640064
05ce00c1046400a6025a001902140012025a001b0214000a050800c10406
00a6050800c1040600a6050800c1040600a6041e00c3020400a6041e0014
0204ffdf041e00c30204ffec041e00c30204000a07160083067400960716
008306740096071600830674009605be00c9044f009805be00c9044f0098
05be00c9044f009805be00c9044f009805ed006a0400004e05ed006a0400
004e05ed004d0400004e05ed006a0400004e047800c1042f0096047800c1
042f009604cc00c102d700a004cc00c102d7009a04cc00c102d7006604cc
00c102d70023040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b0044040c0066032b00440451001f02b800270451001f02b8
00270451001f02b800270451001f02b80027058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098058900c1044b0098050c
002103a70029050c002103a70029079b002105bc0029079b002105bc0029
079b002105bc0029079b002105bc0029079b002105bc002904a5002f03a3
003104a5002f03a3003104a70021040c003904f900580353002904f90058
0353002904f9005803530029046400a602b8001405bc0029040c003903d9
ff580251003b0251000c0251003105a100be041e004c0508002103d9005c
0508002103d9005c0508002103d9005c0508002103d900090508002103d9
005c0508002103d9005c0508002103d9005c0508002103d9005c05080021
03d9005c0508002103d9005c0508002103d9005c0508002103d9005c044d
00c1039f0046044d00c1039f0046044d00c1039f0046044d00c1039f0046
044d0068039f0038044d00c1039f0046044d00c1039f0046044d00c1039f
0046025a008d02140083025a00c1021400a405ed006a0400004e05ed006a
0400004e05ed006a0400004e05ed006a0400003805ed006a0400004e05ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
05ed006a0400004e05ed006a0400004e05ed006a0400004e058900c1044b
0098058900c1044b009805850000044b009805850000044b009805850000
044b009805850000044b009805850000044b009804a70021040c003904a7
0021040c003904a70021040c003904a70021040c0039063d002304450054
045e005c03d2005604a30000041200170489004604890046048900460489
004604890046048900460489004604890046054900210549002105e3ffc5
05acff98059dffd3059dffd905b8ff9305bcffc50335005a0335005a0335
005a0335005a0335005a0335005a0560ffc5052bff9306a7ffbe0685ff98
0689ffbc0674ff8b044b0098044b0098044b0098044b0098044b0098044b
0098044b0098044b00980653ffc70653ffac07a9ffc30793ff9c0799ffb0
0785ff980764ffb60778ffa602410087024100870241fffc0241ffec0241
fff80241ffee02410000024100020310ffba02ebff9c0468ffba042fff89
0443ffa60441ff96040eff8f043dffa20400004e0400004e0400004e0400
004e0400004e0400004e05dfffc305f9ff960726ffac0737ff8f0704ffbe
06dfff9603ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef
00ac03ef00ac05a5ffa606ebff9c06ebff9a0676ffaa0585006005850060
058500600585006005850060058500600585006005850060062000060656
00000753ffae072fff8906dfffba06e7ff9e06ccffa00702ffba04890046
048900460335005a0335005a044b0098044b00980241005e024100870400
004e0400004e03ef00ac03ef00ac05850060058500600489004604890046
048900460489004604890046048900460489004604890046070e002106f9
0021076cffc5073dff980739ffd3072bffd90747ff930758ffc5044b0098
044b0098044b0098044b0098044b0098044b0098044b0098044b009807ed
ffc707f3ffac0937ffc30924ff9c0941ffb00926ff980914ffb60924ffa6
058500600585006005850060058500600585006005850060058500600585
00600783ff9a0791ff5c08b0ffae08a3ff890885ffba08a3ff9e086eff7b
0895ff960489004604890046048900460489004604890046048900460489
004605080021050800210508002105080021073900210172004202a50108
01740042035e00ae02f1006a044b0098044b0098044b0098044b0098044b
00980585ffcb0562ffd3066effc1065cffb0072600c102b4004802b40048
028f00520241ffe70241ffe10241fffc0241fff60241ffec0241ffec026e
0023025a000c0328ffbc0316ffcd02ae003b02a5003902d9006603ef00ac
03ef00ac03ef00ac03ef00ac0439006f0439006f03ef00ac03ef00ac04a7
002104a7002105a5ffb80583ffba04c6ffc10300006602f1006601e9006d
05850060058500600585006005850060058500600622ffbe05edffc90628
ffaa05b8ffcf07160064019700500158003b03fd000007fd000004240000
060c000002a7000001fd0000015300000381000001c00000010000000035
00000000000002a9004402a90044038100440445005c05ef003b0760003b
0239007b03e3000a02240096022400960224009602240096031400620314
0064031400640310006604b400a804b400a802ce007f0300009601c2006f
0364006f05fd006f01c2006f0100000007490081099b008101fd0096030c
00960412009601f3007102ed005e0400007102e7009802e700a404970019
03490075038300560362004a04d40029005afe21063f005804c0005804b2
00750381007904d0001f01c000580274005002140091024d002702990075
0274005c029f00a202720060027400750274003902740048027400500193
004a01930035028d005c02740050031200e5027c004e0281005e024d0027
029900750274004e029f00a2027200540274006602740039027400480274
00500193004a01930035027c0046027c004602df004e029d0029027c004c
030e009c02a3009101ce009c0487008f0349008f0322008f0235004e01c6
0017038100310381002903810023071e002106470021043d006803b80000
087e00120381002b05a3004605a30046056a006a065a005a060a0071060a
007105c8005a049f0031068f00c1044f0054044f00540458001002a50014
06be00ac07660008053f002305b2006a05a9002f053f00230600002d065c
001b04fb001f0553006405530029041a003d03d9003d03be002902ae002b
038100440249004808780019054700980547004e05470098054700500547
005c05470014054700980547007305470098054700620547006d05470098
02d00098023b003b03e9003705a9003b064f003b0491001d0668001d0818
001d09d4001d068d003704f7003d0683003d0839003d03df003904b40042
052b00290685001f022800ae03a500ae051600ae059d00ae03a70029055a
0029070e002908a50029056400ae04080031056e003106f90031020400a6
036e004e043d006806740096090c007705ae00c1090c007704b4002d035e
0025090a007903870050090a007903b2006408c8006403b4006406b40064
06ba006406b4006506ba0065090a0079090a0079090a00db03b4004a08c8
006408b2007908b2007d08b2007908b2007d08b2007908b2007908970079
09f100790897004a0897007903b200680897004a03b2006209fb007903b4
006806e5006406ed007106e5006906ed006503e700120391006003b2003b
033300480333003d0522003504ac001404ac0019040c003b040c003b0300
003b040c005a0402004c0300003b0591003b05a9006404bc003104370087
0437008704370087043700230437002302ba004202ba0091020600960485
00640485005e04850014055c004c0647004c0453007f01a100a4020c0025
02b000a402ca002903d9001f03d9001f03e9008903e900890308001f0437
01a80437007304370073043700870437006f0437006f0437008704370087
04370087043700870437008b0437008b06450064064500640437008d0437
008d0437008b0437008b042d004c042d0050042d004c042d005004830073
048300730483007304830073054d007b054d00330508002905080029034d
007b0206009101a10068054100910487007306eb0096056e00e5047a0031
030800d50308001406fd009605c80096039d0154039d004606fd003b0200
ff2b048d005a043700750200ffdd06120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
0612006506c0007406c0006806c0007806c0008906c0007806c0007606c0
005e06c0008706c0007a09e1008509e1009109e1009109e1009109e10091
09e1009109e1009109e1007c09a9009109e1008709e1008d061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120064
061200640612006406120064061200640612006406120064061200640612
00640612006406370059063b005906370059063700590637005906370059
063700590637005906370059064b005906120064049b0096049b00960453
005a0453005a04140096041400980453005a0453005a0414005a0414005a
0553003b0553003b04830064055600870483006404830064048300640483
0064048300620483006204830064048300640483006402d7006402d70096
02ce006404e1005008d9003107f900310726003104b000460524003b0483
007d0483007d0483007d058b0052040e0029040e003b0474007704740077
0474007305560077052800640414005004ef0050067a003b03f500640722
0050064d006405be006406b0006405cc0050061c006405e50068056c005a
052b00460691007906a300870528008705c6004c0637007105cc00500528
004602d400500445005005c8005005c8005003bc00540341003106b20077
07640077066a00770556007d0610005008d9002f06120064061200640612
006406120064061200640612006406120064061200640612006406120064
05080029036600c90366000e041e0029023f001f041effb404780029048d
003503d9005c02b8ffc9058f001904240027053b002303e7002704f10054
0349004203df005003b80019035a003b04f1004c0231005e0231004a0231
005e0231004602c20029025a0029025a002902fb003703830056051c0037
050600370614001d094100710941008f09410071066a00ba066a004e0885
003110a70031322d007904ed00230b3900660341003f03ca005e03ca005e
02a30035038d004303b0005c03ca00420397005c03c600580341003f03b8
005003b6004a04eb000a0412001d022b001f0435005a02ac006a03b20083
0395003f03b800330366003703c0005a0374006603b8005003b2004e0508
002105ed006a058900c10516002704d00027061a004e096e0096096e0096
0000f75809f9006a04410029040000a6047600370793006605c600500400
002103f1009c0408005a0487009c03c4009c0381009c0466005a0481009a
0200009a0212ff46041a009a0376009a055c006a045e009a048f005a037a
009a048f005a03b0009a03200044039d00330468009c041c002d0658002d
03e7001f0393002d038f002b0420000002a9004404000021040000210400
002104000021040000210400002105c000480408005a03c4009c03c4009c
03c4009c03c4009c0200003d0200009a0200001b0200fff40487003d045e
009a048f005a048f005a048f005a048f005a048f005a05cc003b048f005a
0468009c0468009c0468009c0468009c0393002d0399008b0393002d0406
009806260044045600810487003d04000021040000210408005a0408005a
0487009c03c4009c03c4009c0466005a0376009a03760023045e009a045e
009a045e009a048f005a03b0009a03b0009a032000440320004403200044
039d0033039d00330468009c0468009c038f002b038f002b038f002b0376
009a039d0033039d0033032000440200009a0283000004d70056040c000e
02b800000260004602c00085026e005602c8005a027c003701be002d02c0
004202a300910487008f02df004e0322008f0316005001c6001703330085
02a500290260002b027c004c0295002704db0027049900190724ffdd04d4
fff80500002304970023034f00580466002b0466003f0591001005910010
071e00000400005c03f3002104660017042b009804fb0096051e00960510
00460612006604e3009606ae009605d7004c05d7004c03b8004a03b80100
03b8007903b8003f03b8004603b8006f03b8005403b8008303b8005403b8
004e017000d7017000d7017000d70153004402c00085026e005602c8005a
0800000001be002d02c0004202ae009c01f300a4023d002d028b006201ce
009c03e1005c028d005c0270005c027600500241009a0235004e01a50023
03330085028300290426002902b400390260002b028900a4028900a403ce
00a403ce00a40000fda80000fda20000fdfa0000fd8d0000fda00000fd2b
0000fd2b0000fd9e0000fd7b0000fd560000fcf40000fe06025300c10402
002303b800500266005a0266002b02e300e102e3004a0237001d02370016
01d20079033d004c045800980458009602e7009802e7009602a90044022d
ffac04bc0027048b0027048b002706c000270702002704bc003b05a70044
07df002d00000000000000b0000000b0000000b0000000b0000001640000
021c000003dc00000618000007a40000091000000978000009cc00000a20
00000ab400000b3800000bb000000c0800000c6800000ca400000d600000
0e0000000ee800000fec000010c8000011e4000012d00000134000001448
00001530000015bc0000167c000016b80000170000001740000018380000
19e800001b0000001c1400001cbc00001d8800001e9000001f7000002068
00002160000021d40000227400002344000023ec00002594000026f00000
279c000028880000296c00002a8c00002b8800002c3800002d1000002d9c
00002ea400002f4400002fdc000030ac0000311c00003184000031f80000
324c0000327c000032dc0000342000003518000035b0000036c000003794
0000388c00003a7400003b8400003c4800003d3400003e4800003ed80000
403800004138000041d4000042dc000043c800004490000045780000466c
00004770000047fc000048f40000499c00004a2000004b1800004bf40000
4c3800004d1800004d9c00004d9c00004e4c00004f48000050c4000051cc
000053300000537c000054f000005560000056a4000057ac0000580c0000
5860000058b800005abc00005b0c00005ba400005c4c00005d0800005d98
00005e0000005f2c000060080000605c000060ec00006168000062040000
6264000063c40000652c0000670000006800000068fc000069f400006af8
00006c4800006d9400006ee400007088000071bc000072ec000074140000
754c000076c00000775c000077f4000078980000798400007a9400007c14
00007ce400007db400007e8c00007fac000080dc00008214000083180000
8418000085140000861c00008760000088180000891000008a7400008be4
00008d5800008ed800009094000092540000941c0000959c000096c00000
97c0000098c0000099d400009b1800009bc400009c7000009d2400009e18
00009f180000a0940000a15c0000a2240000a3040000a41c0000a51c0000
a5cc0000a6c40000a7f40000a9200000aa580000abd40000ac780000ad8c
0000ae6c0000af6c0000b0dc0000b1f80000b3ac0000b4cc0000b6840000
b74c0000b80c0000b8e00000b9b00000ba900000bb640000bc340000bd08
0000be000000bf840000c0940000c1dc0000c3100000c4140000c5640000
c6a00000c7dc0000c8e00000ca480000cb800000ccb40000cdbc0000cee4
0000d1100000d2500000d49c0000d5cc0000d7f80000d9680000dbec0000
dd140000de500000dfac0000e0f00000e1e80000e30c0000e3ac0000e460
0000e51c0000e6180000e6f00000e8180000e8cc0000e94c0000ea5c0000
ec000000ecd00000eda00000eee40000f05c0000f1540000f21c0000f2c4
0000f3e40000f4f00000f6180000f71c0000f8040000f8d80000f9a00000
fa5c0000fb800000fca80000fe1c0000ff90000100bc000101f800010364
0001048c000105b80001068c0001075c0001084c0001095800010a6c0001
0b6c00010cd000010e2400010f6800011058000111f80001133800011484
00011580000116a0000117b4000118e400011a0400011b8c00011d040001
1e3000011f54000120980001220c000122e8000124580001254c00012668
000127c00001294000012a4400012b6c00012c8800012e0000012f680001
30ec000132300001338c000134d000013620000137500001387c00013944
000139f000013afc00013bec00013cdc00013dd400013ec800013fc00001
40ac0001419c000142cc0001445000014564000146840001476400014840
000148e8000149ec00014aec00014bfc00014d4000014e7c00014fd00001
50d4000151d80001528c000153d800015544000157000001582c0001595c
00015ad800015b7400015c2c00015e5800015fe0000160a0000162080001
63d4000165300001669c000167680001687c000169a000016af400016c48
00016db400016f24000170a8000171f40001732400017420000175280001
7674000177ac000178c4000179cc00017b3800017c9000017df400017f38
000180780001817c00018280000183dc0001850400018604000187180001
884c0001896c00018a5c00018b2c00018c7800018d9800018dd800018e34
00018ee000018f94000191500001930c000194f400019634000197c00001
994000019ad800019cc000019e9c00019f9c0001a1200001a1c00001a268
0001a33c0001a4200001a5240001a6600001a7d40001a9800001aaf80001
acc00001ae540001affc0001b1700001b3240001b3fc0001b5740001b768
0001b8d00001ba7c0001bc480001bdf40001bf400001c13c0001c2600001
c4940001c58c0001c6bc0001c7d00001c8dc0001ca180001cb580001cc7c
0001cdac0001ce8c0001d01c0001d1a00001d3640001d4800001d6980001
d8500001d9dc0001db080001dc300001ddb00001dfa80001e16c0001e318
0001e4400001e5640001e6940001e8500001e9600001eb140001ec780001
edcc0001ef100001f0440001f1240001f2040001f2b40001f3ac0001f4b4
0001f5d80001f6bc0001f7c40001f94c0001fa7c0001fbdc0001fd2c0001
fe640001fff80002010c00020278000203e4000205440002067c000207d0
000208dc00020a0800020b2c00020c7000020df000021030000211700002
1290000213a8000214a8000215c00002173c000218cc00021a1400021b94
00021cd000021e8400021fdc000220b400022184000222b8000223c00002
24800002252400022694000228340002296400022a0c00022b9800022d44
00022e7000022f6c00023058000231500002323c000233b8000234e00002
364000023784000238700002395c00023a8800023b2000023c5800023dac
00023ed800023fac00024084000241c8000242cc00024410000245dc0002
46e8000247bc0002494000024a8800024b7c00024c8800024da400024ea8
00024fd00002512000025220000252a40002531800025430000255440002
55ac000257400002589c0002597400025af800025c2000025d4c00025e50
00025f1000025ff800026140000262980002636000026418000264fc0002
65c4000266b00002679000026870000269a000026adc00026c5c00026d14
00026e2000026e9800026fb40002709800027198000272f0000273bc0002
74a4000275280002761c00027694000277300002785000027904000279a8
00027a8400027b7c00027c2000027d0800027dac00027e9c00027fa40002
80b000028210000283040002843c000285440002862c00028770000288bc
00028a0000028bc800028df40002900c000291d000029358000295180002
9744000298d000029a0c00029b5c00029bfc00029d2800029e6800029f34
0002a03c0002a0d00002a1380002a1e00002a2b00002a3c00002a43c0002
a4b00002a5180002a5b40002a6300002a6ac0002a7240002a79c0002a818
0002a8d40002a9400002a9e00002aa880002aadc0002ab300002aba00002
abd40002ac3c0002ac8c0002acf80002ad580002adac0002adfc0002ae60
0002aebc0002aefc0002af140002af900002b0080002b0880002b0fc0002
b19c0002b1e80002b2540002b2a80002b3400002b39c0002b4200002b4bc
0002b5400002b5940002b6880002b6f00002b7e40002b8800002b9400002
b9dc0002ba200002bb2c0002bb640002bb980002bc000002bc840002bcd0
0002bd100002bd780002bdc00002be2c0002bee00002bf740002bfd80002
c00c0002c0740002c0cc0002c1380002c1e00002c2480002c2dc0002c370
0002c4000002c4940002c4f80002c5480002c5b80002c6280002c6880002
c6f40002c7680002c7e40002c8540002c8ec0002c9340002c9b80002ca44
0002ca8c0002caf80002cb880002cc000002cc8c0002cce40002cd340002
cdbc0002ce5c0002ce900002cef80002cf600002cfc80002d0480002d094
0002d0d40002d14c0002d1d00002d21c0002d25c0002d2800002d2ec0002
d3600002d3e40002d4440002d4e80002d55c0002d6040002d6680002d6c4
0002d7280002d7ac0002d8400002d90c0002d9600002d9d80002da380002
dab40002db180002dc5c0002dd8c0002de880002df100002df7c0002dfcc
0002e04c0002e0f40002e1680002e1b80002e2080002e26c0002e2e40002
e3380002e40c0002e5000002e5840002e5d40002e6380002e6800002e6c8
0002e74c0002e79c0002e7fc0002e8940002e9600002ea000002ea980002
eb900002ec380002ed140002edd80002ef100002efb40002f0840002f0e8
0002f1800002f1cc0002f2140002f2680002f2f40002f3ec0002f4cc0002
f58c0002f5e00002f6ac0002f7b80002f8140002f9480002fa740002fb20
0002fbfc0002fcc40002fe4c0002ff980003007000030184000302280003
0298000303a0000304700003056800030680000306f4000307c400030850
000308fc00030a0000030b3c00030be800030cc000030dac00030ea80003
0f5800030ff00003116c0003120c00031374000314cc000315c4000316d0
0003183c0003196c00031aa400031b5800031cf800031e3800031f700003
20740003219c000322a00003243c000325480003261c000326a0000327b4
0003291c00032a7800032b1800032cfc00032d9800032ea400032f880003
30580003314400033214000332ec000333f8000334e4000336a4000337c0
000338b4000339fc00033ac800033bcc00033d2000033e0c00033f400003
40100003410c0003424c0003436c00034488000345f0000346d8000347c0
000348dc000349ec00034b3800034c3c00034d1c00034d6800034e480003
4ec800034fd4000350d8000351780003526400035330000353e8000354a8
0003559c0003563c000356ec00035794000358880003598400035ab40003
5c2800035d8800035e4c00035f6800036064000360d8000361c400036260
000363ec0003654400036668000367b8000368d4000369f000036af80003
6bd000036ccc00036de000036e840003704c000371540003732400037458
0003754c000376c4000377f400037914000379c000037ab800037b640003
7c3c00037d2800037dd000037e8000037f1c000380ac0003814c00038260
0003835000038478000385e8000386d8000388240003890400038a4c0003
8b7c00038c9000038dd400038ed800038fe0000390740003919400039268
0003941c00039544000396240003979c000398c4000399cc00039b0c0003
9c0000039c9c00039d6c00039e7400039f0c00039fb00003a02c0003a19c
0003a2440003a3540003a4340003a5540003a6bc0003a7ac0003a8d80003
a9a40003aa740003aba40003acc40003adc40003af080003b02c0003b0e4
0003b1b40003b29c0003b3540003b4340003b5200003b6900003b7cc0003
b8e40003ba340003bb400003bc440003bd500003bf3c0003c0f80003c2c4
0003c4200003c5b40003c7080003c8400003c9380003cb140003ccdc0003
ce480003cfb40003d1900003d3a00003d53c0003d6d00003d87c0003da2c
0003db380003dc500003dd3c0003de4c0003df900003e1140003e3c80003
e6640003e8500003ea0c0003eadc0003ec240003ed500003ee800003efbc
0003f0c40003f1b00003f2900003f3600003f4d80003f6000003f80c0003
fa340003fbd80003fd4c0003feac00040044000401b40004036c000404e4
0004065c000408000004099400040b3000040ce000040e2c00040f840004
110800041268000413dc0004152c000416500004175400041894000419c4
00041a5c00041b7c00041c6000041db000041f6c0004223c000423f80004
25e000042744000428bc00042a0000042b3000042c8400042dd400042f0c
00043058000431fc000433b40004342800043684000438cc00043ad40004
3c9c00043e5c000440040004411400044220000443800004450400044660
000448400004499000044b5000044cf400044e740004500c000451680004
521c000452f00004541c00045564000457b4000459e000045b8800045d38
00045e3000045f340004605400046160000462b800046408000465080004
66100004671c000468240004699800046b1000046cc400046e0c00046ed0
00046f7400047070000471540004724c0004733000047494000475f00004
76f4000477f8000479b000047b4000047bb000047cc800047d5000047e54
00047ea400047f1800047fdc000480140004809c000480ec0004813c0004
8200000482500004828c000482d00004830c0004834800048398000483e8
000484800004853c00048688000487300004882c000488d800048a140004
8a9800048b9000048cb400048ddc00048e5800048f1000048fb8000490ac
000491900004928c00049360000494200004950c000496b0000497b40004
98d0000499fc00049b6800049c7000049d0400049eb800049fbc0004a0b4
0004a1bc0004a2a40004a2fc0004a3880004a4c80004a5d00004a7340004
a8080004a8f80004a9cc0004aa980004ac780004ad100004adc40004af00
0004af980004b0480004b1380004b2100004b2f00004b4200004b49c0004
b5400004b6140004b6d80004b8400004ba080004bb500004bc800004bdc8
0004bef80004c0400004c1680004c2c40004c4180004c5140004c6640004
c7600004c8ac0004c9a80004cae40004cc4c0004ce000004cef40004d030
0004d1940004d2c40004d4200004d54c0004d67c0004d7800004d90c0004
da5c0004dc340004ddec0004df000004e0300004e1540004e3800004e4b0
0004e6000004e7300004e8780004e9d00004eb680004ecec0004ee800004
efe40004f1540004f2480004f3900004f4ac0004f5dc0004f6cc0004f800
0004f9100004fa500004fb480004fc780004fd540004fe0c0004ff140004
fff8000500c80005017c00050248000502f8000503c0000505480005063c
000507e0000508cc00050a7000050bac00050ce400050e2000050f580005
1084000511ac000512d80005140000051588000516e4000518c800051a68
00051b8800051c9800051db800051ebc00051fd000052100000522200005
235c000524bc000525c00005272000052834000529bc00052af800052c44
00052d3400052e6400052f80000530b0000531c800053324000534840005
35f800053774000538cc00053a0c00053af400053c2400053d0c00053e30
00053f0800054014000540ec000541f800054338000544b0000546040005
477800054878000549a400054b1000054cb800054e5c000550040005510c
00055218000552e00005539c000554c4000555ec00055710000558300005
59a400055b1400055c5400055d8c00055ecc00056000000560dc000561bc
000562c0000563dc000564ac0005655c0005665800056750000568480005
693800056a3000056b2400056c6400056dc400056f4400057044000571f4
000573200005742c00057544000576580005776c0005788400057a000005
7b9c00057d9c00057ed400058088000581ac0005836c0005852400058764
000588f000058af000058c3800058dec00058f28000591100005924c0005
945400059634000598a800059a4000059c7c00059de000059fd00005a10c
0005a2100005a3d00005a5580005a6e00005a8300005a9900005aad80005
ac300005ad740005af840005b1600005b3300005b4c00005b6340005b778
0005b8c80005ba1c0005bac80005bb940005bc700005bd3c0005be980005
bfec0005c0f00005c2080005c30c0005c41c0005c5a80005c7400005c924
0005ca7c0005cb940005cca80005cde80005cf400005d0940005d1f40005
d3bc0005d5a40005d7400005d9100005da580005dbb00005dcc40005ddfc
0005df8c0005e1440005e2e00005e4680005e60c0005e7980005e9c80005
ebe40005eddc0005efc00005f1640005f2f40005f3b40005f4580005f520
0005f5d00005f7340005f8680005f97c0005fa640005fb900005fce00005
fd940005fe3c0005ff380006006000060218000603c4000605b8000607ac
000609a000060b7800060da000060fcc0006112000061278000613f80006
1570000616ec0006186400061a2000061be000061d6400061ecc00062080
0006222c000623d400062580000627000006288400062a3c00062bf80006
2db000062f64000630e8000632640006342c000635f4000637b80006397c
00063b6800063d5000063ec000064034000641d800064380000645280006
46cc000648a400064a8800064b8800064c7800064dbc00064f1800065054
00065188000652e80006544c0006553c0006562c00065750000658780006
59a000065ac400065c3000065da400065eb000065fbc0006611400066264
000663b80006650c0006663000066750000668b000066a1000066b700006
6ccc00066e2000066f700006710000067280000674100006759c00067754
0006790800067a2000067b6c00067cb000067e3c00067fd40006816c0006
834400068514000686f4000688cc00068ad000068cd000068ecc000690ac
000692c0000694d0000696e0000698f000069b5400069dac00069f240006
a0900006a1d00006a3000006a4440006a57c0006a63c0006a6f00006a7cc
0006a8980006a9b00006aab40006ac200006ad740006af780006b17c0006
b3d40006b6240006b8700006baa40006bd280006bfac0006c1700006c338
0006c5280006c7100006c8fc0006cae00006cd140006cf480006d1300006
d3180006d54c0006d77c0006d9a80006dbd40006de240006e0740006e264
0006e4580006e67c0006e8a40006eac80006ecec0006ef440006f1a40006
f3940006f5740006f7a00006f9c40006fbf80006fe2400070084000702cc
0007051800070764000709e800070c6c00070ef000071170000714240007
16ec000718a400071a1000071be400071d7c00071f4c0007211800072340
0007245c0007255c0007267c0007278c000728d00007290c000729840007
2a0000072a7400072b6000072d0c00072e8000073020000731b0000733a4
000734e4000736180007375400073880000739f800073ab000073b600007
3c4400073d4800073df400073f380007408400074188000742f8000743b4
0007445400074510000745b8000746740007472400074820000749640007
4a7400074c0800074da800074ef400075050000751a40007536800075444
00075504000755d8000756a000075804000758e4000759b000075a200007
5bdc00075d5000075efc0007609c000762940007637c0007645c000765f4
0007677c00076948000769a4000769e0000769e0000769e0000769e00007
69e0000769e0000769e0000769e0000769e0000769e0000769e0000769e0
000769e000076a3800076a9000076ad800076b2400076b5c00076b940007
6be000076c2400076c9c00076d1800076d9000076e0c00076eec00076fd0
000770b40007719800077284000773ec000774400007747c000774dc0007
7570000776380007769400077694000778a000077b2c00077b9000077c24
00077cd000077d3c00077dec00077ec400077efc00077f34000780b40007
81fc00078390000783c800078700000787300007890400078a9c00078c3c
00078d6400078ea000078f5400078ff40007909800079164000792600007
9344000793b4000794b8000795a00007962400079668000796c400079710
0007975c00079840000798e00007996000079a1800079b0c00079bc80007
9cc400079dac00079e1400079f180007a0000007a0800007a0c40007a120
0007a1680007a1b40007a2c00007a38c0007a42c0007a4c80007a5940007
a6600007a7080007a7700007a8bc0007a98c0007aa880007ab6c0007ac44
0007adac0007aef40007b0880007b3680007b5c00007b7280007b8600007
baa40007bc5c0007bdf40007bfc80007c08c0007c1d40007c3480007c55c
0007c6d80007c8340007c9800007cb100007cd5c0007ced00007cfb00007
d11c0007d3580007d4a40007d5b40007d7580007d8d40007db480007dd90
0007ded80007e0300007e1b00007e2780007e3c40007e46c0007e5680007
e6140007e7100007e8f40007eaac0007ec980007ee600007f03c0007f254
0007f4400007f5d40007f7c80007f9880007fb9c0007fdb40007ff300007
ffcc00080094000801b800080318000804740008053c0008067c00080804
000809d800080b6800080cb000080e400008101c00081118000811d40008
12e000081438000814f0000816480008183c00081960000819e000081b0c
00081cd400081f34000820740008211c0008226000082440000824c80008
256000082670000827cc000828e800082a0c00082bd800082c9400082d30
00082dac00082e2000082e9c00082f1c00082fb800083058000830d80008
3158000831d8000832540008335000083448000834dc0008358800083644
00083694000836e00008373400083780000838040008388c000839540008
3a5000083b1400083ba400083c3800083cc800083d6000083e2800083f14
00083fa400084054000840ec00084178000841d00008427c000843700008
43f0000844cc000845c800084630000846a00008474800084828000848b0
0008495800084a4800084ad400084c1800084cf000084dbc00084df40008
4e9400084f5800084fb80008501c000850f000085188000851dc0008522c
0008536400085464000855440008564000085690000856cc000857200008
5774000857f4000858400008588c000859080008598400085a4400085ad0
00085b5400085bf800085cb400085da400085ed000085f4000085fb80008
6010000860a8000860f0000861380008617c000861c00008621400086268
000862e800086368000863ec0008647000086514000865c4000866d40008
6794000868780008693c0008699c000869fc00086a5c00086ac400086b24
00086b7800086c3800086ce400086dd400086e5400086e7c00086ed00008
6f4400086fbc0008707c0008714000087198000871f4000872ac0008732c
00087448000874ec0008754c000876040008772400087830000879140008
7a0c00087b0800087bb800087ca400087d8800087eb400087fbc0008811c
0008827c000883bc000884ec0008862c0008872800088864000889a00008
8b1c00088bd400088cec00088de800088ec400088fa8000890940008913c
000892fc000893e800089504000896000008975000089890000899b40008
9adc00089c0c00089cf800089e3800089f680008a0e40008a2780008a38c
0008a4600008a5380008a6640008a75c0008a8600008a9680008aa1c0008
aae00008abe00008acb40008add40008aed80008af8c0008b0700008b14c
0008b2580008b3540008b41c0008b50c0008b5c00008b6f00008b7cc0008
b8b00008b9b40008baac0008bb800008bc3c0008bd180008bde00008bec0
0008c0040008c0e00008c19c0008c2900008c3700008c4140008c52c0008
c6100008c6c80008c7b80008c8880008c9500008ca100008cae00008cbc8
0008cc740008cd580008ce180008cf240008cff40008d0c80008d18c0008
d2640008d35c0008d43c0008d50c0008d5e00008d68c0008d7800008d84c
0008d9280008da4c0008dbe00008dd580008deb80008e0040008e1540008
e2640008e3b00008e5080008e68c0008e7000008e71c0008e7480008e764
0008e7900008e7ac0008e7d80008e7f40008e8200008e83c0008e8680008
e8880008e8bc0008e9280008e95c0008e9f80008ea840008eab40008eaf4
0008eb380008eb780008ebbc0008ec080008ec580008ec7c0008eca00008
ed380008ed700008f1c00008f2a40008f4300008f5ac0008f6480008f768
0008f8700008f94c0008f9e80008fa540008fac40008fc280008fd300008
fe300008ff34000900880009019c00090368000904cc000905cc000906bc
000907e0000908e000090a7000090bf400090d4000090e6000090f7c0009
101800091210000915940009165c000916cc0009177c000917d80009180c
000918800009194400091a0000091ad400091c7000091d1000091f380009
2168000923c0000925280009268800092ad800092b5400092be800092c9c
00092d3400092dbc00092e4800092eac00092f5800092fdc000930940009
30fc0009317c000931f80009330c000933f80009351c0009364c000937b0
0009391400093a4000093bdc00093d3800093ebc00094064000941740009
427c00094398000944ec00094640000947180009477c000947e000094878
0009491400094a1800094ae800094bb000094ca400094e1000094eb80009
4f5c0009597000095bd000095e0c00096080000960e00009613c00096190
000961f800096680000967e00009702800097200000972fc000973bc0009
745c00097544000976480009771c00097838000979240009799400097a9c
00097b8400097cac00097df000097e8800097f2400097fb8000980680009
81680009826c000983800009846c000984dc000985e4000986d000098818
0009891800098a5800098bf000098d5c00098f200009a2500009a47c0009
b4c80009b6ac0009b8280009b9280009bae80009bcc80009becc0009bfac
0009c0b40009c15c0009c2200009c3280009c4040009c4f00009c5dc0009
c6500009c6ec0009c7b80009c85c0009c8f80009c9dc0009ca7c0009cb58
0009cc240009cd380009ce380009cedc0009cfa40009d0200009d0f80009
d1880009d21c0009d2d80009d2d80009d3300009d4380009d5400009d650
0009d7a40009d8f40009da680009dbbc0009dcec0009de240009df540009
e0900009e2040009e2a40009e3440009e3ec0009e4d40009e5e40009e74c
0009e8180009e8e00009e9b40009eac80009ebc00009ed240009ee200009
ef140009f0040009f1040009f2380009f2f80009f4140009f5200009f624
0009f8080009f93c0009fa4c0009fb840009fcb80009fd840009fe600009
ff64000a00c8000a0208000a0344000a0410000a04d0000a05e0000a0700
000a0818000a0910000a0a54000a0ba8000a0cd8000a0e70000a0fb0000a
10e4000a11cc000a1324000a144c000a1530000a1618000a170c000a182c
000a1908000a1a18000a1b90000a1c4c000a1c4c000a1db0000a1f40000a
1f40000a2050000a2130000a21dc000a22cc000a23a0000a2488000a2654
000a26fc000a27b4000a2854000a2954000a2a40000a2b18000a2ba4000a
2c20000a2ce4000a2dac000a2ea0000a3034000a31a4000a3340000a3440
000a3584000a36e8000a3868000a3994000a3ac4000a3c04000a3d40000a
3eb8000a3f9c000a40a0000a41cc000a42f4000a4450000a4598000a4640
000a46ec000a4960000a5130000a5360000a5648000a56d8000a576c000a
581c000a591c000a5a10000a5b24000a5c0c000a5c7c000a5d88000a5e74
000a5ed4000a5f50000a5fe8000a6040000a6120000a61cc000a62b8000a
62b8000a63a0000a6568000a6630000a66ec000a67f8000a68ac000a6914
000a6a4c000a6b2c000a6c18000a6cfc000a6db8000a6e9c000a6f74000a
7054000a70d0000a716c000a71e0000a72a4000a72e4000a7324000a7378
000a73d0000a741c000a7468000a74c0000a7518000a7570000a760c000a
76a0000a7704000a7790000a7820000a788c000a7938000a7984000a7b14
000a7c18000a7c6c000a7cc0000a7d38000a7db4000a7ea8000a7fa4000a
8048000a813c000a819c000a81fc000a8254000a82ac000a8304000a83ac
000a8538000a86f8000a8870000a8ac4000a8cd4000a8e98000a90b0000a
91480001000009c002ee0011000000000002000100020016000001000b47
000000000000000a007e0001000000000000011700000001000000000003
000b01170001000000000004000b01220001000000000006000b012d0003
000104090000022e01380003000104090001001603660003000104090002
000e037c00030001040900030016038a0003000104090004001603a00003
000104090006001603b64c696e7578204c6962657274696e652062792050
68696c69707020482e20506f6c6c2c0a4f70656e20466f6e7420756e6465
72205465726d73206f6620666f6c6c6f77696e67204672656520536f6674
77617265204c6963656e7365733a0a47504c202847656e6572616c205075
626c6963204c6963656e736529207769746820666f6e742d657863657074
696f6e20616e64204f464c20284f70656e20466f6e74204c6963656e7365
292e0a43726561746564207769746820466f6e74466f7267652028687474
703a2f2f666f6e74666f7267652e73662e6e6574290a5365707420323030
332c20323030342c20323030352c20323030362c20323030372c20323030
382c20323030392c20323031302c20323031314c696e42696f6c696e756d
4c696e42696f6c696e756d4c696e42696f6c696e756d004c0069006e0075
00780020004c006900620065007200740069006e00650020006200790020
005000680069006c00690070007000200048002e00200050006f006c006c
002c000a004f00700065006e00200046006f006e007400200075006e0064
006500720020005400650072006d00730020006f006600200066006f006c
006c006f00770069006e00670020004600720065006500200053006f0066
007400770061007200650020004c006900630065006e007300650073003a
000a00470050004c0020002800470065006e006500720061006c00200050
00750062006c006900630020004c006900630065006e0073006500290020
007700690074006800200066006f006e0074002d00650078006300650070
00740069006f006e00200061006e00640020004f0046004c00200028004f
00700065006e00200046006f006e00740020004c006900630065006e0073
00650029002e000a00430072006500610074006500640020007700690074
006800200046006f006e00740046006f0072006700650020002800680074
00740070003a002f002f0066006f006e00740066006f007200670065002e
00730066002e006e006500740029000a0053006500700074002000320030
00300033002c00200032003000300034002c00200032003000300035002c
00200032003000300036002c00200032003000300037002c002000320030
00300038002c00200032003000300039002c00200032003000310030002c
00200032003000310031004c0069006e00420069006f006c0069006e0075
006d0052006500670075006c00610072004c0069006e00420069006f006c
0069006e0075006d004c0069006e00420069006f006c0069006e0075006d
004c0069006e00420069006f006c0069006e0075006d0000b801ff85b001
8d004bb0085058b101018e59b146062b5821b010594bb014525821b08059
1db0062b5c5800b0072045b0032b4401b0082045b0032b44b0092045ba00
087fff00022bb10346762b44b00a2045b2091e022bb10346762b4459b014
2b00000000>
[16089 16309 16245 16041 16197 16205 16197 16081 16165 16353 16277 16341 16109
16041 16341 16313 16209 16137 16321 16217 16257 15997 16193 15961 16341 16157
16213 16041 16301 16325 16213 16233 16373 16273 16361 16349 15949 16377 15869
16241 16309 16153 11921 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QAAAAA+LinuxBiolinum AddT42Char 
1 2872 15 <00010062fed9015c00d10013003500b21101002bb403070013042bb20601
002b01b0142fb00fd6b406080013042bb20f060a2bb3400f00092bb00d32
b115012b00303137353637331615140e02072637362734232e01621b5408
831f49333a1b01a0013b33305a084c232fa83b5b47212317146d54350c23
>QAAAAA+LinuxBiolinum AddT42Char 
1 3236 19 <00020050ffec035e04e100120021004a00b21301002bb408070067042bb2
1904002bb40007007d042b01b0222fb016d6b10208e9b00210b10e012bb1
1d08e9b123012bb10e021112b11319393900b100081112b1161d39393031
012211141e0333323e013736113426272603220211101233321716111402
0e0101dddd061b2d50371b375014234433253fb6cdeda0754ebe4e7a8404
91fdbb3f7a9b6f4e155c4e7f0110c3fa2b20fb5b015e01060123016e47ae
fe8daafef8944700>QAAAAA+LinuxBiolinum AddT42Char 
1 3424 20 <000100ddfffa02ae04e10018004b00b20701002bb00233b21404002bb111
141020c02fb410070022042b01b0192fb00ad6b10008e9b2000a0a2bb340
0016092bb11a012bb1000a1112b10513393900b111101112b00d39303101
141707262330072736371134232206072736243732150615029c12043929
5f0210012517a82b0c56012f3c0e100183e59e0606060685fe01fc9c1d04
3b1b7f120a73d9000000>QAAAAA+LinuxBiolinum AddT42Char 
1 3584 21 <00010043fff6034304e10036004600b22801002bb124263333b41c07001d
042bb20d04002bb400070035042b01b0372fb034d6b11108e9b138012b00
b11c281112b1222c3939b00011b4070911202e24173930310122070e0307
2f013e0233321e011514070e020706151416173633323706151417262322
05263736373e043736353426019e623c131d0b1b041b2d1c559a5670a453
943f814844240102386fbeb90a06f4700afe86150101020486497f67294e
84046d300f26134009028d25453c54956195c95594484123150304030411
2938182b0a0a222e0f0b047d49827e3e759e688a0000>QAAAAA+LinuxBiolinum AddT42Char 
1 3816 22 <00010071ffec036804e10034006b00b22b01002bb400070067042bb21d04
002bb41507007d042bb40e092b1d0d2bb40e07007d042b01b0352fb005d6
b12708e9b02710b02020d611b11208e9b0122fb12008e9b136012b00b109
001112b305272e30241739b00e11b123253939b01512b2181a2039393930
3125323e0235342726072207351633323736353426232206072f01373617
321615140607151e0115140e0123222f013f011e0301ac23505c3d505078
3d192b216f3a4e6a405a6c271f2b0683c196b3975a79a19bc560bc75062d
1e1d17374a3b19397d5681444201045a063a4a7e5e7b545a028307730199
7177ae140b0aa2767fb94d62069a023b2c3b1300>QAAAAA+LinuxBiolinum AddT42Char 
1 4816 26 <00010081ffe5036404e10010002a00b20804002bb40007001b042bb20a04
002bb0063301b0112fb112012b00b108001112b101043939303101240736
3534271621323717020307271202c3fe8dcf0a0a6601d7463e22dded9606
8104330c1e4e160a4c0e1414fde3fd3e090d01200000>QAAAAA+LinuxBiolinum AddT42Char 
1 5192 28 <00020039ffe9035004df000f002b006200b22b01002bb410070022042bb2
2104002bb407070050042bb4170e2b210d2bb11707e901b02c2fb01cd6b1
0908e9b00910b102012bb01432b12608e9b12d012bb1091c1112b1102b39
39b00211b11721393900b1070e1112b2141c263939393031013635342e02
232211141e02333201363736130e0123222e0235343e0233321e02151007
0e010702aa023156522fb6122d644a7dfe23e385a221259140719f481f27
529e6a447f8350db66eca20296143781b75825fed42d5a643dfde117809e
01022d3d547f6a2f3d7e7a4e2b68d998febcdb68600b>QAAAAA+LinuxBiolinum AddT42Char 
1 6632 36 <00020021fffa04e7054400090027009100b21101002bb20d181c333333b2
1305002bb21305002bb4260811130d2bb00533b12607e9b00a3201b0282f
b01cd6b1180ae9b129012bb0361aba3a72e5eb00152b0ab0112e0eb00410
b01110b10b0df905b00410b1130df9b00b10b3050b04132bb30a0b04132b
0300b1040b2e2e01b504050a11130b2e2e2e2e2e2eb0401a00b108261112
b01639b01311b003393031012e0127230332163332050e01072623220700
013316001217262322072e05272e01232203422c673c04d8189c2257feab
3b581719442f18015c010039460100be2d23574423040b131a202b184378
3575023473fc8afe08045d91f059060602fc024ea6fd85fe315a06060e25
3f4f5f7a400201000000>QAAAAA+LinuxBiolinum AddT42Char 
1 8544 44 <000100c1fffa019a052f0013002a00b21001002bb20305002b01b0142fb0
13d6b10a08e9b115012bb10a131112b304050e0f24173900303113102737
16323717060311101707262207273611d514042587250414011504258824
0414038f0108920606060687feedfe0bfef892060606068b010f>QAAAAA+LinuxBiolinum AddT42Char 
1 9028 47 <000100c3fffa03dd052f001e003e00b21001002bb403070021042bb21805
002b01b01f2fb014d6b10108e9b120012bb101141112b1101a393900b103
101112b00a39b01811b10708393930310111141732243f01170615141707
26232107273619011027371633323717060187117b012053530404040431
4afdd16a02141404254346250215038ffe0be538160c0b08212721390606
06068b010f01f50108920606060688000000>QAAAAA+LinuxBiolinum AddT42Char 
1 9968 50 <0002006affec05830544000b0017004400b20f01002bb10607e9b2150500
2bb10007e901b0182fb012d6b1030ae9b00310b109012bb10c0ae9b11901
2bb109031112b10f15393900b100061112b10c1239393031012202111000
33321211100201100021200011100021200002d7a8f2011bc5b4dffa01cd
fe96fedbfef0fe86017501130119017804e9fee0fed5fee7fec10129010c
01370137fdb9fecdfe7d01680127012d019cfe890000>QAAAAA+LinuxBiolinum AddT42Char 
1 10140 51 <000200c1fffa04270537000d002c006200b22901002bb21605002bb01133
b10b07e9b4200329160d2bb12007e901b02d2fb02cd6b12308e9b00032b0
2310b106012bb11b0ae9b12e012bb1232c1112b2132728393939b00611b3
1620252624173900b103201112b02239b00b11b01b393031011116173236
35342e02232206031027371633323633321e0215140e0223222715101707
2622072736110185277b9e9b315a5c3c6a4eb0140425431fe51b87c5622d
376fcb856d3f150425882404140485fe1d14018eaa58743a142bfedb0108
9206060e4371753f46897d4e15b0fef892060606068b010f0000>QAAAAA+LinuxBiolinum AddT42Char 
1 10604 53 <000200c1fffa049a0537002b0038007000b20701002bb01e33b21305002b
b00e33b12c07e9b4003007130d2bb10007e901b0392fb00ad6b10108e9b0
2f32b00110b134012bb1170ae9b13a012bb1010a1112b2050610393939b0
3411b40304131b25241739b01712b12123393900b100071112b11d273939
b03011b01b39303101151017072622072736190110273716333236332017
160714070607160017072623220726032e03270613220615113332363534
2e020185150425882404141404254321db190117686d01cd2d4f30014c3a
0429525427259e0a351a2d145657873877a8c4375c5c024ab0fef8920606
06068b010f01f501089206060e62669ae367171040fe1d410606066f00ff
1058293f180602951c3efe1789ae4e703816>QAAAAA+LinuxBiolinum AddT42Char 
1 10892 54 <00010066ffec039e05440034006000b22a01002bb10007e9b21005002bb1
1b07e901b0352fb00bd6b12008e9b02010b103012bb1270ae9b136012bb1
200b1112b131323939b00311b50007101b252a241739b02712b214151839
393900b11b001112b50b1418272e322417393031253236353426272e0335
343637363332161f02060f012e012322070e0115141e0217041114062322
262f02363f011e0101f0608f7b744c6b6e3c8161545c6aa21d1c04270814
299a544e2f27372d564433016ffec16abb2828042907142fc146816e7781
311f3d5d7c4e6aad29232d181806814c02607718146d373b5f3d231389fe
f0b0d72d171806983b025a83>QAAAAA+LinuxBiolinum AddT42Char 
1 11320 56 <000100c1ffec04dd052f0025005d00b20d01002bb41f070036042bb21605
002bb0023301b0262fb012d6b11d08e9b01d10b125012bb40a080020042b
b127012bb11d121112b117183939b02511b4030d19021a241739b00a12b1
0405393900b1161f1112b10a123939303101102737163237170619011002
21222e023511102737163237170603111021323e0335045a140425452504
14f0fed950959a5e140425872504140101586490502d0c038f0108920606
060687feedfecdfed5febb2b66d39301ac0108920606060687feedfe98fe
373a54877450>QAAAAA+LinuxBiolinum AddT42Char 
1 13592 70 <0001004effec031703830018004600b20c01002bb406070065042bb2060c
0a2bb3400608092bb21202002bb10007e901b0192fb00fd6b10308e9b11a
012b00b100061112b30a0f1617241739b01211b015393031012206151416
33323733170623222635342433321f010f012602006a9496747b60092773
bbbcdf010aaaa26e05301a580331c4a4aec9562b91fdd5c7fe3906a80297
0000>QAAAAA+LinuxBiolinum AddT42Char 
1 13744 71 <00020068ffec03aa0596000d002d008500b21001002bb1262a3333b40c07
004e042bb21e06002bb21602002bb10407e901b02e2fb013d6b10908e9b0
0910b100012bb01832b12308e9b223000a2bb3402320092bb200230a2bb3
40001b092bb12f012bb100091112b30e10161c241739b02311b11e283939
00b1040c1112b20e132d393939b01611b01839b01e12b11b213939303125
112e0123220e021514163332370623220235340033321735102737363732
170607111417072623220722352702e32756452b525633725a89736d9ba4
cf0105ca5c5012045c561201120123042932182f120be701d33d3a1f479a
6cb6b9218b0108c0cf01002d8501256607062315e39efd89cfba06060606
7700>QAAAAA+LinuxBiolinum AddT42Char 
1 14016 72 <00020046ffec034c0383000a0021006800b20f01002bb420070034042bb2
1602002bb10607e9b4001c0f160d2bb10007e901b0222fb013d6b11c08e9
b00032b01c10b103012bb11908e9b00c32b123012bb1031c1112b20f1620
393939b01911b00b3900b11c201112b20c130b393939b00011b019393031
01213235342623220e0201170e0123222726353400333216151423211417
163332010001791d6d40173a4c400217293bbd6dd5705c01049fb8ab25fd
d3314a95b1022f1d6a7b16346efe5c335264876fcad50102e99a23b64e75
0000>QAAAAA+LinuxBiolinum AddT42Char 
1 15236 76 <000200a4fffa0175052f0007001c006500b21901002bb20305002bb40707
0014042bb20d02002bb00b3301b01d2fb001d6b10a193232b1050ae9b110
153232b1050ae9b31c0501082bb11308e9b2131c0a2bb3401310092bb11e
012bb1131c1112b6030607020d1718241739b00511b01639003031123436
3216140622031027371637321615060715141707262207273635a43f5240
40522b1204585a0c07120113052576250412049e523f3f5240fd8301107e
060608060facb491df920606060689e8>QAAAAA+LinuxBiolinum AddT42Char 
1 15944 79 <000100a6fffa016f05960013004700b21101002bb00e33b20606002bb206
06002b01b0142fb000d6b10b08e9b20b000a2bb3400b08092bb2000b0a2b
b3400003092bb115012bb10b001112b2060f103939390030311311102737
363732170607111017072622072736b812045c5612011201130525762504
12019a024101256607062315f889fd9afeee880606060683>QAAAAA+LinuxBiolinum AddT42Char 
2 352 81 <00010098fffa03c10383002b007e00b21701002bb2030614333333b22602
002bb02033b40d070032042bb21d02002b01b02c2fb01ad6b11108e9b022
32b21a110a2bb3401a1d092bb01110b109012bb10008e9b12d012bb1111a
1112b2151620393939b00911b40607131426241739b00012b10405393900
b10d171112b2232429393939b02611b01f3930310114170726220727363d
013426232206071514170726220727363d011027371637321d0117363332
1615140603ae1305257625041241523fa2481204257625041212045a4c0c
049ec48777040171e9880606060689e8c879565256efee83060606067df4
70011b7306080e159506b8a0a4218c00>QAAAAA+LinuxBiolinum AddT42Char 
2 608 82 <0002004effec03b20383000b0019004700b20901002bb41407007d042bb2
0302002bb10c07e901b01a2fb000d6b11008e9b01010b117012bb10608e9
b11b012bb117101112b10309393900b10c141112b1000639393031133412
33321615140623222601220e0115141e013332363534264ef1c9cddde9c9
c7eb01ac5a752929836466866c01a4d90106f8d5cdfdfa024b6e9a625ca4
8ac193cfd100>QAAAAA+LinuxBiolinum AddT42Char 
2 764 83 <00020096fe1f03c90383000c002a008000b21601002bb10307e9b21f0000
2bb01c33b21002002bb02833b10a07e9b22502002b01b02b2fb022d6b119
08e9b1000d3232b222190a2bb3402225092bb01910b108012bb11308e9b1
2c012bb119221112b21d1e28393939b00811b310161b1c24173900b10316
1112b01839b00a11b3080d0e13241739b01012b02739303101111617323e
023510272206271736333216151402232227151017072622072736190110
273716373217014c4e704e6f3716d23d982104799ba4c1eac87754120425
7724041212045a4b0c01025afe405c0146797d450166017b2706b8fcaedb
feee2d5bfef891060606068901100223011b7306080e1500>QAAAAA+LinuxBiolinum AddT42Char 
2 1264 85 <000100a0fffa02b203830021005e00b21601002bb01333b20402002bb01f
33b40b07001c042bb21c02002b01b0222fb019d6b11008e9b00032b21910
0a2bb340191c092bb123012bb110191112b214151f39393900b10b161112
b300080901241739b00411b1071e3939303101173e0133321f010f012623
2207061d0114170726220727363d0110273716373215015606486c501931
0829101f4c442e461204257625041212045a4c0c02ac047b600e0898041d
486a616ae58c060606067ff270011b7306080e15>QAAAAA+LinuxBiolinum AddT42Char 
2 2200 89 <00010029fffa037f03750018003200b20001002bb01633b20202002bb110
143333b20202002b01b0192fb002d6b1050ae9b11a012b00b102001112b0
0b3930310502031632371e0417333e01123716333237020326220193e783
21971b0a411e38351d042a535f1d12333b13fe71125706025a0121060620
cf5ea5874359eb0128500606fdc3fec206000000>QAAAAA+LinuxBiolinum AddT42Char 
31 612 1703 <0001009603ac018f05a40013003500b21104002bb403070013042bb20604
002b01b0142fb00fd6b406080013042bb20f060a2bb3400f00092bb00d32
b115012b00303113353637331615140e02072637362734232e01961b5308
831e4a333a1b01a0013b332f052d084c232fa83b5b47212317146d54350c
23000000>QAAAAA+LinuxBiolinum AddT42Char 
31 160 1697 <0001005c01e703e9024c000b001d00b0002fb405070066042bb405070066
042b01b00c2fb10d012b003031132235343633213207140623791d231203
3c1d01221301e723123023142e000000>QAAAAA+LinuxBiolinum AddT42Char 
1 0 0 <00050000000004000596000200050008000b000f005a00b20c01002bb403
070065042bb20d06002bb40b07004e042b01b0102fb00cd6b40108001304
2bb00110b107012bb40f080013042bb111012bb107011112b5020304060a
0b24173900b10b031112b500010507080924173930311311090121013701
110901210311211166015dfee102b8fea43d015dfe66015cfd48a4040004
d3fbf00208fd9b02095cfdf80410fe540206fad30596fa6a0000>QAAAAA+LinuxBiolinum AddT42Char 
QAAAAA+LinuxBiolinum /CharStrings get begin
/space 3 def
/comma 15 def
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/seven 26 def
/nine 28 def
/A 36 def
/I 44 def
/L 47 def
/O 50 def
/P 51 def
/R 53 def
/S 54 def
/U 56 def
/c 70 def
/d 71 def
/e 72 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/v 89 def
/quoteright 1703 def
/endash 1697 def
end
QAAAAA+LinuxBiolinum /Encoding get
dup 32 /space put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 73 /I put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 118 /v put
dup 146 /quoteright put
dup 150 /endash put
pop
end
%ADOEndSubsetFont
/QOZGVU+LinuxBiolinum /QAAAAA+LinuxBiolinum findfont ct_VMDictPut
/QOZGVU+LinuxBiolinum*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two 
/three 3{/.notdef}rp /seven /.notdef /nine 7{/.notdef}rp /A 7{/.notdef}rp 
/I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R 
/S /.notdef /U 13{/.notdef}rp /c /d /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r 3{/.notdef}rp /v 27{/.notdef}rp /quoteright 3{/.notdef}rp /endash 105{/.notdef}rp]
QOZGVU+LinuxBiolinum nf
QOZGVU+LinuxBiolinum*1 [9 0 0 -9 0 0 ]msf
315.063 -23.8155 mo
(ASPLOS\22219, )
[5.66098 4.55396 5.03107 4.63498 6.66898 4.55399 2.41205 4.18497 4.18497 1.98001 0 ]xsh
361.157 -23.8155 mo
(April )
[5.66098 4.70694 3.19498 2.33994 2.26801 0 ]xsh
381.574 -23.8155 mo
(13\22617, )
[4.18497 4.18497 4.80597 4.18497 4.18497 1.98001 0 ]xsh
407.339 -23.8155 mo
(2019, )
[3.996 4.18497 4.18497 4.18497 1.98001 0 ]xsh
428.112 -23.8155 mo
(Providence, )
[5.03107 3.19495 4.5 4.11304 2.33994 4.76999 4.07703 4.85101 3.86102 4.07703 1.98001 0 
]xsh
473.13 -23.8155 mo
(RI, )
[5.40005 2.64606 1.98001 0 ]xsh
485.399 -23.8155 mo
(USA)
[6.228 4.55399 0 ]xsh
/QOZGVU+LinuxBiolinum*1 uf
/QOZGVU+LinuxBiolinum uf
/QAAAAA+LinuxBiolinum uf
grestore
gsave
243.659 695.287 mo
256.021 695.287 li
256.021 684 li
243.659 684 li
cp
clp
set_def_flat
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QAAAAA+LinuxBiolinum Initial
ct_T42Dict begin
-1.082 -0.266 6.168 0.891
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+LinuxBiolinum
Type42DictBegin
[<00010000000c000c000c000c4f532f32574a00f8000000cc000000566376
7420162a141200000124000000766670676d0fb42fa70000019c00000265
676c796697c3690c00005734000a9148686561641e3335f7000004040000
0036686865612fe032560000043c00000024686d7478381ffe3b00000460
000027006c6f636132bb52bc00002b60000027046d6178700ae90e390000
5264000000206e616d65987dfa8f000052840000044a70726570fd56ccb6
000056d00000006167646972000000000000000000000000000103500190
00050000053305990000011e05330599000003d700660212080202000503
000000000000e0000aff5000e5fb00000020000000005066456400400020
fffd0727fe080000072701f8600001bf000000000000fe2f0000036f03ae
04cd05290581005a00a400a400d30049004b007000c8005d00bb00560050
008a0064008c00580095009e0086008300ad00430045003500a800290052
00540060003e00a10069004e008e00bf0032003c004700910098002e006c
008000620075001400100012006e000a003800930000b0002cb000134bb0
2a5058b04a7659b000233f18b0062b583d594bb02a50587d5920d4b00113
2e182db0012c20dab00c2b2db0022c4b5258452359212db0032c691820b0
40505821b040592db0042cb0062b582123217a58dd1bcd591b4b525858fd
1bed591b2321b0052b58b046765958dd1bcd595959182db0052c0d5c5a2d
b0062cb12201885058b020885c5c1bb000592db0072cb12401885058b040
885c5c1bb000592db0082c121120392f2db0092c207db0062b58c41bcd59
20b00325492320b004264ab00050588a658a6120b0005058381b2121591b
8a8a6120b0005258381b21215959182db00a2cb0062b5821101b1021592d
b00b2c20d2b00c2b2db00c2c202fb0072b5c582020472346616a20582064
62381b2121591b21592db00d2c12112020392f208a20478a4661238a208a
234ab000505823b0005258b040381b21591b23b0005058b04065381b2159
592db00e2cb0062b583dd61821211b20d68a4b5258208a234920b0005558
381b2121591b212159592db00f2c2320d6202fb0072b5c582320584b531b
21b00159588ab0042649238a23208a498a2361381b21212121591b212121
2121592db0102c20dab0122b2db0112c20d2b0122b2db0122c202fb0072b
5c582020472346616a8a2047234623616a602058206462381b2121591b21
21592db0132c208a208a8720b003254a64238a07b02050583c1bc0592db0
142cb3004001404242014bb8100063004bb8100063208a208a5558208a20
8a5258236220b00023421b6220b00123425920b0405258b2002000436342
b2012001436342b02063b019651c21591b2121592db0152cb001436323b0
004363232d000000000100000001199965071b365f0f3cf5021f08000000
0000ca25e93000000000ca25e930f758fddb315e07250000000800000001
00000000000100000727fe080000322df758f860315e0001000000000000
000000000000000009c0040000000000000002aa00000200000001d20075
02b0008103c2003703b800540570008105ae005a0185006d0266005a0266
002b0376009a0437008701c2006202a9004401c2006f0295001f03b80050
03b800dd038d004303b8007103b8002b03b8006003b8005e03b8008103b8
005003b8003901c2007d01c2006203e500640437008703e50064033d0058
072800790508002104ed00c1056a006a05ae00c1044d00c1040800c105bc
006a05ce00c1025a00c1028fffac050800c1041e00c30716008305be00c9
05ed006a047800c105ed006a04cc00c1040c00660451001f058900c1050c
0021079b002104a5002f04a7002104f9005802e300e10256001702e3004a
042400e503e3000a032200c503d9005c0408008f036e004e043d0068039f
00460283002703fd0042046400a6021400a4022dffac040600a6020400a6
06740096044f00980400004e042f0096042d006402d700a0032b004402b8
0027044b009803a7002905bc002903a30031040c0039035300290237001d
01ae00a602370014039700350200000001d200790400009a040000280400
003f0400000901a300a603dd006603080066051000460260003504580098
047a003102a9004405100046032d00790222004604370087027c004e0281
005e02ba00b403e3005a04d0007502000091045301ba031200e502ca0050
045800a4054700c9054700980547005a033d004c05080021050800210508
0021050800210508002105080021066a0025056a006a044d00c1044d00c1
044d00c1044d00c1025a002f025a0091025a0033025a001b05ae002305be
00c905ed006a05ed006a05ed006a05ed006a05ed006a043700d905ed006a
058900c1058900c1058900c1058900c104990021045c00c1045c004c03d9
005c03d9005c03d9005c03d9005c03d9005c03d9005c057e0050036e004e
039f0046039f0046039f0046039f004602140039021400a6021400100214
000a03f50046044f00980400004e0400004e0400004e0400004e0400004e
043700870400004e044b0098044b0098044b0098044b0098040c0039041e
0096040c00390508002103d9005c0508002103d9005c0508002103d9005c
056a006a036e004e056a006a036e004c056a006a036e004e056a006a036e
004e05ae00c10476006805ae0023043d0068044d00c1039f0046044d00c1
039f0046044d00c1039f0046044d00c1039f0046044d00c1039f004605bc
006a03fd004205bc006a03fd004205bc006a03fd004205bc006a03fd0042
05ce00c1046400a605ce005404640035025a001202140018025a00100214
0012025a001b0214001f025afffe0214ffd1025a00c1021400a604b400c1
044900a4028fffac022dffac050800c1040600a603f70096041e006d0204
0083041e00c3020400a0041e00c3025100a6041e00c3020400a6041e000a
0204000c05be00c9044f009805be00c9044f009805be00c9044f0098044f
0033058f00ba043d009805ed006a0400004e05ed006a0400004e05ed006a
0400004e06b400560633004604cc00c102d700a004cc00c102d7009a04cc
00c102d70098040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b00440451001f02b800270451001f02b800270451001f02b8
0027058900c1044b0098058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098079b002105bc002904a7
0021040c003904a7002104f900580353002904f900580353002904f90058
035300290251003b040800100537000a0487002303db000a0493002f03e1
0019056a0031056a006a03f1004e05ae002306390004047e005603f30046
03eb0046047a00b0052600560422004e040cff7b0399ffe105bc006a04ef
000005b6002502510029025a0027051800c103d400270204000803f3002d
06d90033058fffa6042f002b05ed006a05ed006a0400004e070e004a0585
004a04ac000003d4000a0483002303d4005a02f7004c04bc002902700004
02b8002704b40014026e0029048f000e05850000044b0098055300310535
0000052000000502001704f900580353002904dd005604dd005e0395002f
0395005a03810043036e002d036e005402f1002904280019017a0096024b
009602a7003301d200750a2000c1089100c1072d0068062400c3062b00c3
03e100a6082400c9078500c9060800980508002103d9005c025a002b0214
001f05ed006a0400004e058900c1044b0098058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098039f00210508002103d9
005c0508002103d9005c066a0025057e005005bc006a03fdfffe05bc006a
03fd0042050800c1040600a605ed006a0400004e05ed006a0400004e04dd
0056031c0029022dffac0a8d00c1090400c10724006805bc006a03fd0042
073300230451001205be00c9044f00980508002103d9005c066a0025057e
005005ed006a0400004e0508002103d9005c0508002103d9005c044d00c1
039f0046044d00c1039f0046025a00000214ffa2025a00190214002305ed
006a0400004e05ed006a0400004e04cc00c102d7004404cc00c102d70087
058900c1044b0098058900c1044b0098040c0066032b00440451001f02b8
002703d4009a0310004605ce00c1046400a604d2002b05160046046e0060
03be005404f1005203a500460508002103d9005c044d00c1039f004605ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
04a70021040c0039030a002f054b002b02fd0029022dffac05fd004605fb
004a058d0021056a0056036e0019041e00100451001f032b004403a70014
04ed000c03a5fff50410004604100012040a009e036e003303a1004e043d
0052044d0052036c0046039f002104ba00310335005a03470052048b0052
03d20046025eff46044b004e0418004e0402004e03f9003903330031044f
0093044f00a4044f00a402c6000c02510087022800ae024b000a02dd0025
020400a4044900a402c6002b06310093067e009604b4ffd3044700980428
009a04000052054b004e05b40046048d003102d7002902df002d0322002d
02df00a002df00a002ac008102ac002d037a008d037a0093032b00270256
ffd30256ffd30256ffae0256ffd302b8002102b8003904100037046e002d
03ef00ac03a7007305bc005803f7003b032f001403f3002903a70029031c
0029031c0029038100580381004a03810058037a004a05ed006d03b400ae
03ce00520412004e047c00ae0208ffd303e1001903450093044b004e0381
004a0381004a067600520676005206890068051a003903ac003905350039
05e10039045a00a4044900a4038f0029032d006404ed002d04fb002d030e
009c030e009c023d002d0241009a02410023028d002502b2009304260029
02a900390185002102cc006f0158003b016600420158003701f1006401f1
005e02a3007702a3008b042400db042400db042400e5042400e302ca0066
02ca0062010a0052036600830231005a023100a201a3008d031e006f020e
004a0226005c01ac004a01a1004a01890042018900460212005002120050
02310052023100460289002b025300c302e300c102ac00b40256000a02cc
006f028b005002df006402c8003901ce009c0235004e029d002902a3008b
027e001b03e3000a030600680000fe190000fe170000fddd0000fdb20000
fd2f0000fd2f0000fda20000fe270000fd460000fe250000fdd90000fd9a
0000fd5c0000fe8d0000fd730000fd9e0000fce90000fd420000febc0000
feee0000fef80000fedd0000fd4a0000fd850000fd5c0000fd5c0000fcf6
0000fe640000fd770000fd480000fd480000fd330000fd330000fe0e0000
ff750000fdd70000fd0a0000fd960000fd960000fdd30000fd710000fdbc
0000fcec0000fcbe0000fd5c0000fd6d0000fce70000fce90000fd3f0000
fcf60000fc8f0000fd0a0000fd3f0000fd7b0000fc8f0000fc620000fae5
0000fe230000fd000000fd420000fcbe0000fd1a0000fdb00000fc8f0000
fe190000fe170000fce90000feee02f100660000fe390000fd000000fc8f
0000fdd70000fde60000fd270000fd270000fd040000fcb00000fd790000
fd9b0000fe3d0000fce90000fd220000fd9b0000fd9b0000fca50000fe5c
00a1ff790000fe620000fd680000fdc30000fd0e0000fd0e0000fcdd0000
fcdd0000fc5c0000fd0e0000fddb0000ff680000ff790000ffcf0000ff62
0000ff6a0000ff7d0000ff600000ff6d0000ff0e0000ff980000ff960000
ff5c0000ff6001c6006a0189003102a501060391002f038f00500391002f
01c2006201c0005802f10066050800210206008d0541ffb4065cffcf0302
ffb605edffdf057effba05b8ffcf0241fff60508002104ed00c103d900b4
0516003d044d00c104f9005805ce00c105ed006a025a00c1050800c10500
00140716008305be00c9052f005c05ed006a05a900b8047800c104c00029
0451001f04a70021056a004a04a5002f058d002d05990064025a002104a7
0021048900460335005a044b00980241008703ef00ac04890046041c0064
03f3002103e3004e0335005a03760050044b009803ed0050024100870400
009803f3002d044d008f03d40071036c004e0400004e0499003b0439006f
0399004e0493004c0387003703ef00ac04b80050041e0000051a00a40585
00600241fff003ef00ac0400004e03ef00ac0585006004120050046800a0
046a000a053bffc5046a000a04a100480589004c03fb003105ed006a0400
004e04120021034700480410002f038d006f044b0064044b0064066a0014
03f5004803fb003103ba0046038f00500212ffac05ed006a035e004c035e
004c044f007904ca005004be007f04ca004204ca005004ca0042044d00b6
044d00b60591001f03d900b404d40050040c0066025a00c1025a00230314
003b0756005807ba00ba05a1001f050e00c105d200c104a3005205a900b8
05080021048100bc04ed00c103d900b405a90037044d00c1076400480456
004a05d200c105d200c1050e00c1051600290716008305ce00c105ed006a
05a900b8047800c1056a006a0451001f04a300520560004a04a5002f059d
00b8051000ac07ae00bc079500bc05c80066064900bc047600bc04d40056
073d00c1047c000003d9005c03f7005603b400ae032200b2042b0031039f
00460549001903c4004c049d00ae049d00ae03e300b6043f003705660091
047c00ae0400004e049100bc042f0096036e004e03910042040c0039059f
005403a30031049100b204140075067400b2068100b2045c0042057200ba
039f00ba03780056057c00aa038d0019039f0046039f00460428004a0322
00b203780056032b0044023f00bc0237000a022dffac05620035060400ae
0458003903e300b6049d00ae040c0039048300b207a1006d0562004605ae
00140445001f06c600c1054700aa06ba00040543000e099500c107910037
075e000a066a000a09f100c1087c00370456006403370052057e002d051a
004605ed006a03a3004c05620000044b001205620000044b001207a1006d
0562004607a1006d056200460000fccb057a001f0414002b047800c1042f
009603e70021032d003703fb00270322001f04be00b4041600b206ef0048
057c002d0456004a0360004c050800c103fb0042050e00c104740046050e
002303d400230604001f048b003105990023047c004206d200c105ca00ae
07b800b8064b00bc0568004604740048056a006a036e004e047effe30391
003704a700210497001404a70021049700140528000603d4001406e70014
05c400460512003b04200044051200ac0420007505430023045800420674
0016044500350674001604530035025a00c1076400480549002504d40023
043b004605b40023047c004205ce00c1047600ae0512003b042000440508
002103d9005c0508002103d9005c066a0025057e0050044d00c1039f0046
05260056039f002105260056039f002107640048054900190456004a03c4
004c04dd0056031c002905d200c1049d00ae05d200c1049d00ae05ed006a
0400004e05ed006a0400004e05ed006a0400004e04d400560378005604a3
0052040c003904a30052040c003904a30052040c0039051000ac04140075
03fb0021035a0037064900bc057200ba000000e90000005e0000004c0000
00310000010c0000009a0000009c000000ae000000ae0000005200000052
000000480000010c000001290300007f000000ac025300e9000002890000
ff9a02d000b4029b004a03d9003d03be002902ae002b0381004403d20044
02470037024f004e03d4004803e300390228003703cc004203b4003903ce
0017043700600428004c02410044028900210414005803fd003b03ce0033
03ca003303db004403d7002d03f9005803e9003504e50044041e00290474
002f045c00370443003701c000660314006602f70042026000350274003c
0278005c02780033027c0037027c001d02740029018d00930283006203e1
005c0274002f0241004802be005c01c200230333008503e1006402a50029
0249002d01eb00230260002b0508002103d9005c04ed00c10408008f04ed
00c10408008f04ed00c10408008f056a006a036e004e05ae00c1043d0068
05ae00c1043d006805ae00c1043d006805ae00c1043d006805ae00c1043d
0068044dffb3039f0046044d00c1039f0046044d00c1039f0046044d00c1
039f0046044d00c1039f0046040800c10283002705bc006a03fd004205ce
00c1046400a605ce00c1046400a605ce00c1046400a605ce00a004640064
05ce00c1046400a6025a001902140012025a001b0214000a050800c10406
00a6050800c1040600a6050800c1040600a6041e00c3020400a6041e0014
0204ffdf041e00c30204ffec041e00c30204000a07160083067400960716
008306740096071600830674009605be00c9044f009805be00c9044f0098
05be00c9044f009805be00c9044f009805ed006a0400004e05ed006a0400
004e05ed004d0400004e05ed006a0400004e047800c1042f0096047800c1
042f009604cc00c102d700a004cc00c102d7009a04cc00c102d7006604cc
00c102d70023040c0066032b0044040c0066032b0044040c0066032b0044
040c0066032b0044040c0066032b00440451001f02b800270451001f02b8
00270451001f02b800270451001f02b80027058900c1044b0098058900c1
044b0098058900c1044b0098058900c1044b0098058900c1044b0098050c
002103a70029050c002103a70029079b002105bc0029079b002105bc0029
079b002105bc0029079b002105bc0029079b002105bc002904a5002f03a3
003104a5002f03a3003104a70021040c003904f900580353002904f90058
0353002904f9005803530029046400a602b8001405bc0029040c003903d9
ff580251003b0251000c0251003105a100be041e004c0508002103d9005c
0508002103d9005c0508002103d9005c0508002103d900090508002103d9
005c0508002103d9005c0508002103d9005c0508002103d9005c05080021
03d9005c0508002103d9005c0508002103d9005c0508002103d9005c044d
00c1039f0046044d00c1039f0046044d00c1039f0046044d00c1039f0046
044d0068039f0038044d00c1039f0046044d00c1039f0046044d00c1039f
0046025a008d02140083025a00c1021400a405ed006a0400004e05ed006a
0400004e05ed006a0400004e05ed006a0400003805ed006a0400004e05ed
006a0400004e05ed006a0400004e05ed006a0400004e05ed006a0400004e
05ed006a0400004e05ed006a0400004e05ed006a0400004e058900c1044b
0098058900c1044b009805850000044b009805850000044b009805850000
044b009805850000044b009805850000044b009804a70021040c003904a7
0021040c003904a70021040c003904a70021040c0039063d002304450054
045e005c03d2005604a30000041200170489004604890046048900460489
004604890046048900460489004604890046054900210549002105e3ffc5
05acff98059dffd3059dffd905b8ff9305bcffc50335005a0335005a0335
005a0335005a0335005a0335005a0560ffc5052bff9306a7ffbe0685ff98
0689ffbc0674ff8b044b0098044b0098044b0098044b0098044b0098044b
0098044b0098044b00980653ffc70653ffac07a9ffc30793ff9c0799ffb0
0785ff980764ffb60778ffa602410087024100870241fffc0241ffec0241
fff80241ffee02410000024100020310ffba02ebff9c0468ffba042fff89
0443ffa60441ff96040eff8f043dffa20400004e0400004e0400004e0400
004e0400004e0400004e05dfffc305f9ff960726ffac0737ff8f0704ffbe
06dfff9603ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef00ac03ef
00ac03ef00ac05a5ffa606ebff9c06ebff9a0676ffaa0585006005850060
058500600585006005850060058500600585006005850060062000060656
00000753ffae072fff8906dfffba06e7ff9e06ccffa00702ffba04890046
048900460335005a0335005a044b0098044b00980241005e024100870400
004e0400004e03ef00ac03ef00ac05850060058500600489004604890046
048900460489004604890046048900460489004604890046070e002106f9
0021076cffc5073dff980739ffd3072bffd90747ff930758ffc5044b0098
044b0098044b0098044b0098044b0098044b0098044b0098044b009807ed
ffc707f3ffac0937ffc30924ff9c0941ffb00926ff980914ffb60924ffa6
058500600585006005850060058500600585006005850060058500600585
00600783ff9a0791ff5c08b0ffae08a3ff890885ffba08a3ff9e086eff7b
0895ff960489004604890046048900460489004604890046048900460489
004605080021050800210508002105080021073900210172004202a50108
01740042035e00ae02f1006a044b0098044b0098044b0098044b0098044b
00980585ffcb0562ffd3066effc1065cffb0072600c102b4004802b40048
028f00520241ffe70241ffe10241fffc0241fff60241ffec0241ffec026e
0023025a000c0328ffbc0316ffcd02ae003b02a5003902d9006603ef00ac
03ef00ac03ef00ac03ef00ac0439006f0439006f03ef00ac03ef00ac04a7
002104a7002105a5ffb80583ffba04c6ffc10300006602f1006601e9006d
05850060058500600585006005850060058500600622ffbe05edffc90628
ffaa05b8ffcf07160064019700500158003b03fd000007fd000004240000
060c000002a7000001fd0000015300000381000001c00000010000000035
00000000000002a9004402a90044038100440445005c05ef003b0760003b
0239007b03e3000a02240096022400960224009602240096031400620314
0064031400640310006604b400a804b400a802ce007f0300009601c2006f
0364006f05fd006f01c2006f0100000007490081099b008101fd0096030c
00960412009601f3007102ed005e0400007102e7009802e700a404970019
03490075038300560362004a04d40029005afe21063f005804c0005804b2
00750381007904d0001f01c000580274005002140091024d002702990075
0274005c029f00a202720060027400750274003902740048027400500193
004a01930035028d005c02740050031200e5027c004e0281005e024d0027
029900750274004e029f00a2027200540274006602740039027400480274
00500193004a01930035027c0046027c004602df004e029d0029027c004c
030e009c02a3009101ce009c0487008f0349008f0322008f0235004e01c6
0017038100310381002903810023071e002106470021043d006803b80000
087e00120381002b05a3004605a30046056a006a065a005a060a0071060a
007105c8005a049f0031068f00c1044f0054044f00540458001002a50014
06be00ac07660008053f002305b2006a05a9002f053f00230600002d065c
001b04fb001f0553006405530029041a003d03d9003d03be002902ae002b
038100440249004808780019054700980547004e05470098054700500547
005c05470014054700980547007305470098054700620547006d05470098
02d00098023b003b03e9003705a9003b064f003b0491001d0668001d0818
001d09d4001d068d003704f7003d0683003d0839003d03df003904b40042
052b00290685001f022800ae03a500ae051600ae059d00ae03a70029055a
0029070e002908a50029056400ae04080031056e003106f90031020400a6
036e004e043d006806740096090c007705ae00c1090c007704b4002d035e
0025090a007903870050090a007903b2006408c8006403b4006406b40064
06ba006406b4006506ba0065090a0079090a0079090a00db03b4004a08c8
006408b2007908b2007d08b2007908b2007d08b2007908b2007908970079
09f100790897004a0897007903b200680897004a03b2006209fb007903b4
006806e5006406ed007106e5006906ed006503e700120391006003b2003b
033300480333003d0522003504ac001404ac0019040c003b040c003b0300
003b040c005a0402004c0300003b0591003b05a9006404bc003104370087
0437008704370087043700230437002302ba004202ba0091020600960485
00640485005e04850014055c004c0647004c0453007f01a100a4020c0025
02b000a402ca002903d9001f03d9001f03e9008903e900890308001f0437
01a80437007304370073043700870437006f0437006f0437008704370087
04370087043700870437008b0437008b06450064064500640437008d0437
008d0437008b0437008b042d004c042d0050042d004c042d005004830073
048300730483007304830073054d007b054d00330508002905080029034d
007b0206009101a10068054100910487007306eb0096056e00e5047a0031
030800d50308001406fd009605c80096039d0154039d004606fd003b0200
ff2b048d005a043700750200ffdd06120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
0612006506c0007406c0006806c0007806c0008906c0007806c0007606c0
005e06c0008706c0007a09e1008509e1009109e1009109e1009109e10091
09e1009109e1009109e1007c09a9009109e1008709e1008d061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120065
061200650612006506120065061200650612006506120065061200650612
006506120065061200650612006506120065061200650612006506120064
061200640612006406120064061200640612006406120064061200640612
00640612006406370059063b005906370059063700590637005906370059
063700590637005906370059064b005906120064049b0096049b00960453
005a0453005a04140096041400980453005a0453005a0414005a0414005a
0553003b0553003b04830064055600870483006404830064048300640483
0064048300620483006204830064048300640483006402d7006402d70096
02ce006404e1005008d9003107f900310726003104b000460524003b0483
007d0483007d0483007d058b0052040e0029040e003b0474007704740077
0474007305560077052800640414005004ef0050067a003b03f500640722
0050064d006405be006406b0006405cc0050061c006405e50068056c005a
052b00460691007906a300870528008705c6004c0637007105cc00500528
004602d400500445005005c8005005c8005003bc00540341003106b20077
07640077066a00770556007d0610005008d9002f06120064061200640612
006406120064061200640612006406120064061200640612006406120064
05080029036600c90366000e041e0029023f001f041effb404780029048d
003503d9005c02b8ffc9058f001904240027053b002303e7002704f10054
0349004203df005003b80019035a003b04f1004c0231005e0231004a0231
005e0231004602c20029025a0029025a002902fb003703830056051c0037
050600370614001d094100710941008f09410071066a00ba066a004e0885
003110a70031322d007904ed00230b3900660341003f03ca005e03ca005e
02a30035038d004303b0005c03ca00420397005c03c600580341003f03b8
005003b6004a04eb000a0412001d022b001f0435005a02ac006a03b20083
0395003f03b800330366003703c0005a0374006603b8005003b2004e0508
002105ed006a058900c10516002704d00027061a004e096e0096096e0096
0000f75809f9006a04410029040000a6047600370793006605c600500400
002103f1009c0408005a0487009c03c4009c0381009c0466005a0481009a
0200009a0212ff46041a009a0376009a055c006a045e009a048f005a037a
009a048f005a03b0009a03200044039d00330468009c041c002d0658002d
03e7001f0393002d038f002b0420000002a9004404000021040000210400
002104000021040000210400002105c000480408005a03c4009c03c4009c
03c4009c03c4009c0200003d0200009a0200001b0200fff40487003d045e
009a048f005a048f005a048f005a048f005a048f005a05cc003b048f005a
0468009c0468009c0468009c0468009c0393002d0399008b0393002d0406
009806260044045600810487003d04000021040000210408005a0408005a
0487009c03c4009c03c4009c0466005a0376009a03760023045e009a045e
009a045e009a048f005a03b0009a03b0009a032000440320004403200044
039d0033039d00330468009c0468009c038f002b038f002b038f002b0376
009a039d0033039d0033032000440200009a0283000004d70056040c000e
02b800000260004602c00085026e005602c8005a027c003701be002d02c0
004202a300910487008f02df004e0322008f0316005001c6001703330085
02a500290260002b027c004c0295002704db0027049900190724ffdd04d4
fff80500002304970023034f00580466002b0466003f0591001005910010
071e00000400005c03f3002104660017042b009804fb0096051e00960510
00460612006604e3009606ae009605d7004c05d7004c03b8004a03b80100
03b8007903b8003f03b8004603b8006f03b8005403b8008303b8005403b8
004e017000d7017000d7017000d70153004402c00085026e005602c8005a
0800000001be002d02c0004202ae009c01f300a4023d002d028b006201ce
009c03e1005c028d005c0270005c027600500241009a0235004e01a50023
03330085028300290426002902b400390260002b028900a4028900a403ce
00a403ce00a40000fda80000fda20000fdfa0000fd8d0000fda00000fd2b
0000fd2b0000fd9e0000fd7b0000fd560000fcf40000fe06025300c10402
002303b800500266005a0266002b02e300e102e3004a0237001d02370016
01d20079033d004c045800980458009602e7009802e7009602a90044022d
ffac04bc0027048b0027048b002706c000270702002704bc003b05a70044
07df002d00000000000000b0000000b0000000b0000000b0000001640000
021c000003dc00000618000007a40000091000000978000009cc00000a20
00000ab400000b3800000bb000000c0800000c6800000ca400000d600000
0e0000000ee800000fec000010c8000011e4000012d00000134000001448
00001530000015bc0000167c000016b80000170000001740000018380000
19e800001b0000001c1400001cbc00001d8800001e9000001f7000002068
00002160000021d40000227400002344000023ec00002594000026f00000
279c000028880000296c00002a8c00002b8800002c3800002d1000002d9c
00002ea400002f4400002fdc000030ac0000311c00003184000031f80000
324c0000327c000032dc0000342000003518000035b0000036c000003794
0000388c00003a7400003b8400003c4800003d3400003e4800003ed80000
403800004138000041d4000042dc000043c800004490000045780000466c
00004770000047fc000048f40000499c00004a2000004b1800004bf40000
4c3800004d1800004d9c00004d9c00004e4c00004f48000050c4000051cc
000053300000537c000054f000005560000056a4000057ac0000580c0000
5860000058b800005abc00005b0c00005ba400005c4c00005d0800005d98
00005e0000005f2c000060080000605c000060ec00006168000062040000
6264000063c40000652c0000670000006800000068fc000069f400006af8
00006c4800006d9400006ee400007088000071bc000072ec000074140000
754c000076c00000775c000077f4000078980000798400007a9400007c14
00007ce400007db400007e8c00007fac000080dc00008214000083180000
8418000085140000861c00008760000088180000891000008a7400008be4
00008d5800008ed800009094000092540000941c0000959c000096c00000
97c0000098c0000099d400009b1800009bc400009c7000009d2400009e18
00009f180000a0940000a15c0000a2240000a3040000a41c0000a51c0000
a5cc0000a6c40000a7f40000a9200000aa580000abd40000ac780000ad8c
0000ae6c0000af6c0000b0dc0000b1f80000b3ac0000b4cc0000b6840000
b74c0000b80c0000b8e00000b9b00000ba900000bb640000bc340000bd08
0000be000000bf840000c0940000c1dc0000c3100000c4140000c5640000
c6a00000c7dc0000c8e00000ca480000cb800000ccb40000cdbc0000cee4
0000d1100000d2500000d49c0000d5cc0000d7f80000d9680000dbec0000
dd140000de500000dfac0000e0f00000e1e80000e30c0000e3ac0000e460
0000e51c0000e6180000e6f00000e8180000e8cc0000e94c0000ea5c0000
ec000000ecd00000eda00000eee40000f05c0000f1540000f21c0000f2c4
0000f3e40000f4f00000f6180000f71c0000f8040000f8d80000f9a00000
fa5c0000fb800000fca80000fe1c0000ff90000100bc000101f800010364
0001048c000105b80001068c0001075c0001084c0001095800010a6c0001
0b6c00010cd000010e2400010f6800011058000111f80001133800011484
00011580000116a0000117b4000118e400011a0400011b8c00011d040001
1e3000011f54000120980001220c000122e8000124580001254c00012668
000127c00001294000012a4400012b6c00012c8800012e0000012f680001
30ec000132300001338c000134d000013620000137500001387c00013944
000139f000013afc00013bec00013cdc00013dd400013ec800013fc00001
40ac0001419c000142cc0001445000014564000146840001476400014840
000148e8000149ec00014aec00014bfc00014d4000014e7c00014fd00001
50d4000151d80001528c000153d800015544000157000001582c0001595c
00015ad800015b7400015c2c00015e5800015fe0000160a0000162080001
63d4000165300001669c000167680001687c000169a000016af400016c48
00016db400016f24000170a8000171f40001732400017420000175280001
7674000177ac000178c4000179cc00017b3800017c9000017df400017f38
000180780001817c00018280000183dc0001850400018604000187180001
884c0001896c00018a5c00018b2c00018c7800018d9800018dd800018e34
00018ee000018f94000191500001930c000194f400019634000197c00001
994000019ad800019cc000019e9c00019f9c0001a1200001a1c00001a268
0001a33c0001a4200001a5240001a6600001a7d40001a9800001aaf80001
acc00001ae540001affc0001b1700001b3240001b3fc0001b5740001b768
0001b8d00001ba7c0001bc480001bdf40001bf400001c13c0001c2600001
c4940001c58c0001c6bc0001c7d00001c8dc0001ca180001cb580001cc7c
0001cdac0001ce8c0001d01c0001d1a00001d3640001d4800001d6980001
d8500001d9dc0001db080001dc300001ddb00001dfa80001e16c0001e318
0001e4400001e5640001e6940001e8500001e9600001eb140001ec780001
edcc0001ef100001f0440001f1240001f2040001f2b40001f3ac0001f4b4
0001f5d80001f6bc0001f7c40001f94c0001fa7c0001fbdc0001fd2c0001
fe640001fff80002010c00020278000203e4000205440002067c000207d0
000208dc00020a0800020b2c00020c7000020df000021030000211700002
1290000213a8000214a8000215c00002173c000218cc00021a1400021b94
00021cd000021e8400021fdc000220b400022184000222b8000223c00002
24800002252400022694000228340002296400022a0c00022b9800022d44
00022e7000022f6c00023058000231500002323c000233b8000234e00002
364000023784000238700002395c00023a8800023b2000023c5800023dac
00023ed800023fac00024084000241c8000242cc00024410000245dc0002
46e8000247bc0002494000024a8800024b7c00024c8800024da400024ea8
00024fd00002512000025220000252a40002531800025430000255440002
55ac000257400002589c0002597400025af800025c2000025d4c00025e50
00025f1000025ff800026140000262980002636000026418000264fc0002
65c4000266b00002679000026870000269a000026adc00026c5c00026d14
00026e2000026e9800026fb40002709800027198000272f0000273bc0002
74a4000275280002761c00027694000277300002785000027904000279a8
00027a8400027b7c00027c2000027d0800027dac00027e9c00027fa40002
80b000028210000283040002843c000285440002862c00028770000288bc
00028a0000028bc800028df40002900c000291d000029358000295180002
9744000298d000029a0c00029b5c00029bfc00029d2800029e6800029f34
0002a03c0002a0d00002a1380002a1e00002a2b00002a3c00002a43c0002
a4b00002a5180002a5b40002a6300002a6ac0002a7240002a79c0002a818
0002a8d40002a9400002a9e00002aa880002aadc0002ab300002aba00002
abd40002ac3c0002ac8c0002acf80002ad580002adac0002adfc0002ae60
0002aebc0002aefc0002af140002af900002b0080002b0880002b0fc0002
b19c0002b1e80002b2540002b2a80002b3400002b39c0002b4200002b4bc
0002b5400002b5940002b6880002b6f00002b7e40002b8800002b9400002
b9dc0002ba200002bb2c0002bb640002bb980002bc000002bc840002bcd0
0002bd100002bd780002bdc00002be2c0002bee00002bf740002bfd80002
c00c0002c0740002c0cc0002c1380002c1e00002c2480002c2dc0002c370
0002c4000002c4940002c4f80002c5480002c5b80002c6280002c6880002
c6f40002c7680002c7e40002c8540002c8ec0002c9340002c9b80002ca44
0002ca8c0002caf80002cb880002cc000002cc8c0002cce40002cd340002
cdbc0002ce5c0002ce900002cef80002cf600002cfc80002d0480002d094
0002d0d40002d14c0002d1d00002d21c0002d25c0002d2800002d2ec0002
d3600002d3e40002d4440002d4e80002d55c0002d6040002d6680002d6c4
0002d7280002d7ac0002d8400002d90c0002d9600002d9d80002da380002
dab40002db180002dc5c0002dd8c0002de880002df100002df7c0002dfcc
0002e04c0002e0f40002e1680002e1b80002e2080002e26c0002e2e40002
e3380002e40c0002e5000002e5840002e5d40002e6380002e6800002e6c8
0002e74c0002e79c0002e7fc0002e8940002e9600002ea000002ea980002
eb900002ec380002ed140002edd80002ef100002efb40002f0840002f0e8
0002f1800002f1cc0002f2140002f2680002f2f40002f3ec0002f4cc0002
f58c0002f5e00002f6ac0002f7b80002f8140002f9480002fa740002fb20
0002fbfc0002fcc40002fe4c0002ff980003007000030184000302280003
0298000303a0000304700003056800030680000306f4000307c400030850
000308fc00030a0000030b3c00030be800030cc000030dac00030ea80003
0f5800030ff00003116c0003120c00031374000314cc000315c4000316d0
0003183c0003196c00031aa400031b5800031cf800031e3800031f700003
20740003219c000322a00003243c000325480003261c000326a0000327b4
0003291c00032a7800032b1800032cfc00032d9800032ea400032f880003
30580003314400033214000332ec000333f8000334e4000336a4000337c0
000338b4000339fc00033ac800033bcc00033d2000033e0c00033f400003
40100003410c0003424c0003436c00034488000345f0000346d8000347c0
000348dc000349ec00034b3800034c3c00034d1c00034d6800034e480003
4ec800034fd4000350d8000351780003526400035330000353e8000354a8
0003559c0003563c000356ec00035794000358880003598400035ab40003
5c2800035d8800035e4c00035f6800036064000360d8000361c400036260
000363ec0003654400036668000367b8000368d4000369f000036af80003
6bd000036ccc00036de000036e840003704c000371540003732400037458
0003754c000376c4000377f400037914000379c000037ab800037b640003
7c3c00037d2800037dd000037e8000037f1c000380ac0003814c00038260
0003835000038478000385e8000386d8000388240003890400038a4c0003
8b7c00038c9000038dd400038ed800038fe0000390740003919400039268
0003941c00039544000396240003979c000398c4000399cc00039b0c0003
9c0000039c9c00039d6c00039e7400039f0c00039fb00003a02c0003a19c
0003a2440003a3540003a4340003a5540003a6bc0003a7ac0003a8d80003
a9a40003aa740003aba40003acc40003adc40003af080003b02c0003b0e4
0003b1b40003b29c0003b3540003b4340003b5200003b6900003b7cc0003
b8e40003ba340003bb400003bc440003bd500003bf3c0003c0f80003c2c4
0003c4200003c5b40003c7080003c8400003c9380003cb140003ccdc0003
ce480003cfb40003d1900003d3a00003d53c0003d6d00003d87c0003da2c
0003db380003dc500003dd3c0003de4c0003df900003e1140003e3c80003
e6640003e8500003ea0c0003eadc0003ec240003ed500003ee800003efbc
0003f0c40003f1b00003f2900003f3600003f4d80003f6000003f80c0003
fa340003fbd80003fd4c0003feac00040044000401b40004036c000404e4
0004065c000408000004099400040b3000040ce000040e2c00040f840004
110800041268000413dc0004152c000416500004175400041894000419c4
00041a5c00041b7c00041c6000041db000041f6c0004223c000423f80004
25e000042744000428bc00042a0000042b3000042c8400042dd400042f0c
00043058000431fc000433b40004342800043684000438cc00043ad40004
3c9c00043e5c000440040004411400044220000443800004450400044660
000448400004499000044b5000044cf400044e740004500c000451680004
521c000452f00004541c00045564000457b4000459e000045b8800045d38
00045e3000045f340004605400046160000462b800046408000465080004
66100004671c000468240004699800046b1000046cc400046e0c00046ed0
00046f7400047070000471540004724c0004733000047494000475f00004
76f4000477f8000479b000047b4000047bb000047cc800047d5000047e54
00047ea400047f1800047fdc000480140004809c000480ec0004813c0004
8200000482500004828c000482d00004830c0004834800048398000483e8
000484800004853c00048688000487300004882c000488d800048a140004
8a9800048b9000048cb400048ddc00048e5800048f1000048fb8000490ac
000491900004928c00049360000494200004950c000496b0000497b40004
98d0000499fc00049b6800049c7000049d0400049eb800049fbc0004a0b4
0004a1bc0004a2a40004a2fc0004a3880004a4c80004a5d00004a7340004
a8080004a8f80004a9cc0004aa980004ac780004ad100004adc40004af00
0004af980004b0480004b1380004b2100004b2f00004b4200004b49c0004
b5400004b6140004b6d80004b8400004ba080004bb500004bc800004bdc8
0004bef80004c0400004c1680004c2c40004c4180004c5140004c6640004
c7600004c8ac0004c9a80004cae40004cc4c0004ce000004cef40004d030
0004d1940004d2c40004d4200004d54c0004d67c0004d7800004d90c0004
da5c0004dc340004ddec0004df000004e0300004e1540004e3800004e4b0
0004e6000004e7300004e8780004e9d00004eb680004ecec0004ee800004
efe40004f1540004f2480004f3900004f4ac0004f5dc0004f6cc0004f800
0004f9100004fa500004fb480004fc780004fd540004fe0c0004ff140004
fff8000500c80005017c00050248000502f8000503c0000505480005063c
000507e0000508cc00050a7000050bac00050ce400050e2000050f580005
1084000511ac000512d80005140000051588000516e4000518c800051a68
00051b8800051c9800051db800051ebc00051fd000052100000522200005
235c000524bc000525c00005272000052834000529bc00052af800052c44
00052d3400052e6400052f80000530b0000531c800053324000534840005
35f800053774000538cc00053a0c00053af400053c2400053d0c00053e30
00053f0800054014000540ec000541f800054338000544b0000546040005
477800054878000549a400054b1000054cb800054e5c000550040005510c
00055218000552e00005539c000554c4000555ec00055710000558300005
59a400055b1400055c5400055d8c00055ecc00056000000560dc000561bc
000562c0000563dc000564ac0005655c0005665800056750000568480005
693800056a3000056b2400056c6400056dc400056f4400057044000571f4
000573200005742c00057544000576580005776c0005788400057a000005
7b9c00057d9c00057ed400058088000581ac0005836c0005852400058764
000588f000058af000058c3800058dec00058f28000591100005924c0005
945400059634000598a800059a4000059c7c00059de000059fd00005a10c
0005a2100005a3d00005a5580005a6e00005a8300005a9900005aad80005
ac300005ad740005af840005b1600005b3300005b4c00005b6340005b778
0005b8c80005ba1c0005bac80005bb940005bc700005bd3c0005be980005
bfec0005c0f00005c2080005c30c0005c41c0005c5a80005c7400005c924
0005ca7c0005cb940005cca80005cde80005cf400005d0940005d1f40005
d3bc0005d5a40005d7400005d9100005da580005dbb00005dcc40005ddfc
0005df8c0005e1440005e2e00005e4680005e60c0005e7980005e9c80005
ebe40005eddc0005efc00005f1640005f2f40005f3b40005f4580005f520
0005f5d00005f7340005f8680005f97c0005fa640005fb900005fce00005
fd940005fe3c0005ff380006006000060218000603c4000605b8000607ac
000609a000060b7800060da000060fcc0006112000061278000613f80006
1570000616ec0006186400061a2000061be000061d6400061ecc00062080
0006222c000623d400062580000627000006288400062a3c00062bf80006
2db000062f64000630e8000632640006342c000635f4000637b80006397c
00063b6800063d5000063ec000064034000641d800064380000645280006
46cc000648a400064a8800064b8800064c7800064dbc00064f1800065054
00065188000652e80006544c0006553c0006562c00065750000658780006
59a000065ac400065c3000065da400065eb000065fbc0006611400066264
000663b80006650c0006663000066750000668b000066a1000066b700006
6ccc00066e2000066f700006710000067280000674100006759c00067754
0006790800067a2000067b6c00067cb000067e3c00067fd40006816c0006
834400068514000686f4000688cc00068ad000068cd000068ecc000690ac
000692c0000694d0000696e0000698f000069b5400069dac00069f240006
a0900006a1d00006a3000006a4440006a57c0006a63c0006a6f00006a7cc
0006a8980006a9b00006aab40006ac200006ad740006af780006b17c0006
b3d40006b6240006b8700006baa40006bd280006bfac0006c1700006c338
0006c5280006c7100006c8fc0006cae00006cd140006cf480006d1300006
d3180006d54c0006d77c0006d9a80006dbd40006de240006e0740006e264
0006e4580006e67c0006e8a40006eac80006ecec0006ef440006f1a40006
f3940006f5740006f7a00006f9c40006fbf80006fe2400070084000702cc
0007051800070764000709e800070c6c00070ef000071170000714240007
16ec000718a400071a1000071be400071d7c00071f4c0007211800072340
0007245c0007255c0007267c0007278c000728d00007290c000729840007
2a0000072a7400072b6000072d0c00072e8000073020000731b0000733a4
000734e4000736180007375400073880000739f800073ab000073b600007
3c4400073d4800073df400073f380007408400074188000742f8000743b4
0007445400074510000745b8000746740007472400074820000749640007
4a7400074c0800074da800074ef400075050000751a40007536800075444
00075504000755d8000756a000075804000758e4000759b000075a200007
5bdc00075d5000075efc0007609c000762940007637c0007645c000765f4
0007677c00076948000769a4000769e0000769e0000769e0000769e00007
69e0000769e0000769e0000769e0000769e0000769e0000769e0000769e0
000769e000076a3800076a9000076ad800076b2400076b5c00076b940007
6be000076c2400076c9c00076d1800076d9000076e0c00076eec00076fd0
000770b40007719800077284000773ec000774400007747c000774dc0007
7570000776380007769400077694000778a000077b2c00077b9000077c24
00077cd000077d3c00077dec00077ec400077efc00077f34000780b40007
81fc00078390000783c800078700000787300007890400078a9c00078c3c
00078d6400078ea000078f5400078ff40007909800079164000792600007
9344000793b4000794b8000795a00007962400079668000796c400079710
0007975c00079840000798e00007996000079a1800079b0c00079bc80007
9cc400079dac00079e1400079f180007a0000007a0800007a0c40007a120
0007a1680007a1b40007a2c00007a38c0007a42c0007a4c80007a5940007
a6600007a7080007a7700007a8bc0007a98c0007aa880007ab6c0007ac44
0007adac0007aef40007b0880007b3680007b5c00007b7280007b8600007
baa40007bc5c0007bdf40007bfc80007c08c0007c1d40007c3480007c55c
0007c6d80007c8340007c9800007cb100007cd5c0007ced00007cfb00007
d11c0007d3580007d4a40007d5b40007d7580007d8d40007db480007dd90
0007ded80007e0300007e1b00007e2780007e3c40007e46c0007e5680007
e6140007e7100007e8f40007eaac0007ec980007ee600007f03c0007f254
0007f4400007f5d40007f7c80007f9880007fb9c0007fdb40007ff300007
ffcc00080094000801b800080318000804740008053c0008067c00080804
000809d800080b6800080cb000080e400008101c00081118000811d40008
12e000081438000814f0000816480008183c00081960000819e000081b0c
00081cd400081f34000820740008211c0008226000082440000824c80008
256000082670000827cc000828e800082a0c00082bd800082c9400082d30
00082dac00082e2000082e9c00082f1c00082fb800083058000830d80008
3158000831d8000832540008335000083448000834dc0008358800083644
00083694000836e00008373400083780000838040008388c000839540008
3a5000083b1400083ba400083c3800083cc800083d6000083e2800083f14
00083fa400084054000840ec00084178000841d00008427c000843700008
43f0000844cc000845c800084630000846a00008474800084828000848b0
0008495800084a4800084ad400084c1800084cf000084dbc00084df40008
4e9400084f5800084fb80008501c000850f000085188000851dc0008522c
0008536400085464000855440008564000085690000856cc000857200008
5774000857f4000858400008588c000859080008598400085a4400085ad0
00085b5400085bf800085cb400085da400085ed000085f4000085fb80008
6010000860a8000860f0000861380008617c000861c00008621400086268
000862e800086368000863ec0008647000086514000865c4000866d40008
6794000868780008693c0008699c000869fc00086a5c00086ac400086b24
00086b7800086c3800086ce400086dd400086e5400086e7c00086ed00008
6f4400086fbc0008707c0008714000087198000871f4000872ac0008732c
00087448000874ec0008754c000876040008772400087830000879140008
7a0c00087b0800087bb800087ca400087d8800087eb400087fbc0008811c
0008827c000883bc000884ec0008862c0008872800088864000889a00008
8b1c00088bd400088cec00088de800088ec400088fa8000890940008913c
000892fc000893e800089504000896000008975000089890000899b40008
9adc00089c0c00089cf800089e3800089f680008a0e40008a2780008a38c
0008a4600008a5380008a6640008a75c0008a8600008a9680008aa1c0008
aae00008abe00008acb40008add40008aed80008af8c0008b0700008b14c
0008b2580008b3540008b41c0008b50c0008b5c00008b6f00008b7cc0008
b8b00008b9b40008baac0008bb800008bc3c0008bd180008bde00008bec0
0008c0040008c0e00008c19c0008c2900008c3700008c4140008c52c0008
c6100008c6c80008c7b80008c8880008c9500008ca100008cae00008cbc8
0008cc740008cd580008ce180008cf240008cff40008d0c80008d18c0008
d2640008d35c0008d43c0008d50c0008d5e00008d68c0008d7800008d84c
0008d9280008da4c0008dbe00008dd580008deb80008e0040008e1540008
e2640008e3b00008e5080008e68c0008e7000008e71c0008e7480008e764
0008e7900008e7ac0008e7d80008e7f40008e8200008e83c0008e8680008
e8880008e8bc0008e9280008e95c0008e9f80008ea840008eab40008eaf4
0008eb380008eb780008ebbc0008ec080008ec580008ec7c0008eca00008
ed380008ed700008f1c00008f2a40008f4300008f5ac0008f6480008f768
0008f8700008f94c0008f9e80008fa540008fac40008fc280008fd300008
fe300008ff34000900880009019c00090368000904cc000905cc000906bc
000907e0000908e000090a7000090bf400090d4000090e6000090f7c0009
101800091210000915940009165c000916cc0009177c000917d80009180c
000918800009194400091a0000091ad400091c7000091d1000091f380009
2168000923c0000925280009268800092ad800092b5400092be800092c9c
00092d3400092dbc00092e4800092eac00092f5800092fdc000930940009
30fc0009317c000931f80009330c000933f80009351c0009364c000937b0
0009391400093a4000093bdc00093d3800093ebc00094064000941740009
427c00094398000944ec00094640000947180009477c000947e000094878
0009491400094a1800094ae800094bb000094ca400094e1000094eb80009
4f5c0009597000095bd000095e0c00096080000960e00009613c00096190
000961f800096680000967e00009702800097200000972fc000973bc0009
745c00097544000976480009771c00097838000979240009799400097a9c
00097b8400097cac00097df000097e8800097f2400097fb8000980680009
81680009826c000983800009846c000984dc000985e4000986d000098818
0009891800098a5800098bf000098d5c00098f200009a2500009a47c0009
b4c80009b6ac0009b8280009b9280009bae80009bcc80009becc0009bfac
0009c0b40009c15c0009c2200009c3280009c4040009c4f00009c5dc0009
c6500009c6ec0009c7b80009c85c0009c8f80009c9dc0009ca7c0009cb58
0009cc240009cd380009ce380009cedc0009cfa40009d0200009d0f80009
d1880009d21c0009d2d80009d2d80009d3300009d4380009d5400009d650
0009d7a40009d8f40009da680009dbbc0009dcec0009de240009df540009
e0900009e2040009e2a40009e3440009e3ec0009e4d40009e5e40009e74c
0009e8180009e8e00009e9b40009eac80009ebc00009ed240009ee200009
ef140009f0040009f1040009f2380009f2f80009f4140009f5200009f624
0009f8080009f93c0009fa4c0009fb840009fcb80009fd840009fe600009
ff64000a00c8000a0208000a0344000a0410000a04d0000a05e0000a0700
000a0818000a0910000a0a54000a0ba8000a0cd8000a0e70000a0fb0000a
10e4000a11cc000a1324000a144c000a1530000a1618000a170c000a182c
000a1908000a1a18000a1b90000a1c4c000a1c4c000a1db0000a1f40000a
1f40000a2050000a2130000a21dc000a22cc000a23a0000a2488000a2654
000a26fc000a27b4000a2854000a2954000a2a40000a2b18000a2ba4000a
2c20000a2ce4000a2dac000a2ea0000a3034000a31a4000a3340000a3440
000a3584000a36e8000a3868000a3994000a3ac4000a3c04000a3d40000a
3eb8000a3f9c000a40a0000a41cc000a42f4000a4450000a4598000a4640
000a46ec000a4960000a5130000a5360000a5648000a56d8000a576c000a
581c000a591c000a5a10000a5b24000a5c0c000a5c7c000a5d88000a5e74
000a5ed4000a5f50000a5fe8000a6040000a6120000a61cc000a62b8000a
62b8000a63a0000a6568000a6630000a66ec000a67f8000a68ac000a6914
000a6a4c000a6b2c000a6c18000a6cfc000a6db8000a6e9c000a6f74000a
7054000a70d0000a716c000a71e0000a72a4000a72e4000a7324000a7378
000a73d0000a741c000a7468000a74c0000a7518000a7570000a760c000a
76a0000a7704000a7790000a7820000a788c000a7938000a7984000a7b14
000a7c18000a7c6c000a7cc0000a7d38000a7db4000a7ea8000a7fa4000a
8048000a813c000a819c000a81fc000a8254000a82ac000a8304000a83ac
000a8538000a86f8000a8870000a8ac4000a8cd4000a8e98000a90b0000a
91480001000009c002ee0011000000000002000100020016000001000b47
000000000000000a007e0001000000000000011700000001000000000003
000b01170001000000000004000b01220001000000000006000b012d0003
000104090000022e01380003000104090001001603660003000104090002
000e037c00030001040900030016038a0003000104090004001603a00003
000104090006001603b64c696e7578204c6962657274696e652062792050
68696c69707020482e20506f6c6c2c0a4f70656e20466f6e7420756e6465
72205465726d73206f6620666f6c6c6f77696e67204672656520536f6674
77617265204c6963656e7365733a0a47504c202847656e6572616c205075
626c6963204c6963656e736529207769746820666f6e742d657863657074
696f6e20616e64204f464c20284f70656e20466f6e74204c6963656e7365
292e0a43726561746564207769746820466f6e74466f7267652028687474
703a2f2f666f6e74666f7267652e73662e6e6574290a5365707420323030
332c20323030342c20323030352c20323030362c20323030372c20323030
382c20323030392c20323031302c20323031314c696e42696f6c696e756d
4c696e42696f6c696e756d4c696e42696f6c696e756d004c0069006e0075
00780020004c006900620065007200740069006e00650020006200790020
005000680069006c00690070007000200048002e00200050006f006c006c
002c000a004f00700065006e00200046006f006e007400200075006e0064
006500720020005400650072006d00730020006f006600200066006f006c
006c006f00770069006e00670020004600720065006500200053006f0066
007400770061007200650020004c006900630065006e007300650073003a
000a00470050004c0020002800470065006e006500720061006c00200050
00750062006c006900630020004c006900630065006e0073006500290020
007700690074006800200066006f006e0074002d00650078006300650070
00740069006f006e00200061006e00640020004f0046004c00200028004f
00700065006e00200046006f006e00740020004c006900630065006e0073
00650029002e000a00430072006500610074006500640020007700690074
006800200046006f006e00740046006f0072006700650020002800680074
00740070003a002f002f0066006f006e00740066006f007200670065002e
00730066002e006e006500740029000a0053006500700074002000320030
00300033002c00200032003000300034002c00200032003000300035002c
00200032003000300036002c00200032003000300037002c002000320030
00300038002c00200032003000300039002c00200032003000310030002c
00200032003000310031004c0069006e00420069006f006c0069006e0075
006d0052006500670075006c00610072004c0069006e00420069006f006c
0069006e0075006d004c0069006e00420069006f006c0069006e0075006d
004c0069006e00420069006f006c0069006e0075006d0000b801ff85b001
8d004bb0085058b101018e59b146062b5821b010594bb014525821b08059
1db0062b5c5800b0072045b0032b4401b0082045b0032b44b0092045ba00
087fff00022bb10346762b44b00a2045b2091e022bb10346762b4459b014
2b00000000>
[16089 16309 16245 16041 16197 16205 16197 16081 16165 16353 16277 16341 16109
16041 16341 16313 16209 16137 16321 16217 16257 15997 16193 15961 16341 16157
16213 16041 16301 16325 16213 16233 16373 16273 16361 16349 15949 16377 15869
16241 16309 16153 11921 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 3584 21 <00010043fff6034304e10036004600b22801002bb124263333b41c07001d
042bb20d04002bb400070035042b01b0372fb034d6b11108e9b138012b00
b11c281112b1222c3939b00011b4070911202e24173930310122070e0307
2f013e0233321e011514070e020706151416173633323706151417262322
05263736373e043736353426019e623c131d0b1b041b2d1c559a5670a453
943f814844240102386fbeb90a06f4700afe86150101020486497f67294e
84046d300f26134009028d25453c54956195c95594484123150304030411
2938182b0a0a222e0f0b047d49827e3e759e688a0000>QAAAAA+LinuxBiolinum AddT42Char 
1 4296 24 <00010060ffec033f04e1002a009b00b20001002bb40e07007d042bb21a04
002bb42007001e042bb21c04002bb01833b41e07001d042bb02232b42514
001c0d2bb12507e9b214250a2bb3401416092b01b02b2fb011d6b12808e9
b12c012bb0361aba3f8ef87300152b0ab0182e0eb017c005b12207f90eb0
23c000b117232e2e01b3171822232e2e2e2eb0401a01b128111112b21c1d
1e39393900b1140e1112b2030528393939303105222f013f011e07333236
3534262322072713163332371707062322270336173216151406019eb284
082d1d06230a211025232f1d68818368609e0f428b5eaaa60f2164737b89
2b548ba6c4eb147206a4020a42122f0e1f080ba68ca2a73f05025b0c1406
8b0c12fe961f01dd9cb6ef000000>QAAAAA+LinuxBiolinum AddT42Char 
1 4580 25 <0002005effee037504e3000f002b006400b22101002bb407070050042bb0
0e2fb11707e9b0102fb42b070022042b01b02c2fb026d6b10208e9b01432
b00210b109012bb11c08e9b12d012bb109021112b117213939b01c11b110
2b393900b10e071112b2141c26393939b12b101112b02a39303101061514
1e02333213342e02232201060706033e0133321e0215140e0223222e0235
10373e01370104023156522fb601132d644a7d01dde385a221259140719f
481f27529e6a447f8350db66eca20237143781b75825012b2d5a653d021f
17819efeff2d3d547f6a2f3d7e7b4d2b68d9980144da68610a00>QAAAAA+LinuxBiolinum AddT42Char 
1 0 0 <00050000000004000596000200050008000b000f005a00b20c01002bb403
070065042bb20d06002bb40b07004e042b01b0102fb00cd6b40108001304
2bb00110b107012bb40f080013042bb111012bb107011112b5020304060a
0b24173900b10b031112b500010507080924173930311311090121013701
110901210311211166015dfee102b8fea43d015dfe66015cfd48a4040004
d3fbf00208fd9b02095cfdf80410fe540206fad30596fa6a0000>QAAAAA+LinuxBiolinum AddT42Char 
QAAAAA+LinuxBiolinum /CharStrings get begin
/two 21 def
/five 24 def
/six 25 def
end
QAAAAA+LinuxBiolinum /Encoding get
dup 50 /two put
dup 53 /five put
dup 54 /six put
pop
end
%ADOEndSubsetFont
/QOZGVV+LinuxBiolinum /QAAAAA+LinuxBiolinum findfont ct_VMDictPut
/QOZGVV+LinuxBiolinum*1 
[50{/.notdef}rp /two 2{/.notdef}rp /five /six 201{/.notdef}rp]
QOZGVV+LinuxBiolinum nf
QOZGVV+LinuxBiolinum*1 [9 0 0 -9 0 0 ]msf
243.659 693.072 mo
(265)
[3.996 4.18497 0 ]xsh
/QOZGVV+LinuxBiolinum*1 uf
/QOZGVV+LinuxBiolinum uf
/QAAAAA+LinuxBiolinum uf
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
